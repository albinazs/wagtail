/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/immer/dist/immer.esm.js":
/*!**********************************************!*\
  !*** ./node_modules/immer/dist/immer.esm.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"Immer\": () => (/* binding */ un),\n/* harmony export */   \"applyPatches\": () => (/* binding */ pn),\n/* harmony export */   \"castDraft\": () => (/* binding */ K),\n/* harmony export */   \"castImmutable\": () => (/* binding */ $),\n/* harmony export */   \"createDraft\": () => (/* binding */ ln),\n/* harmony export */   \"current\": () => (/* binding */ D),\n/* harmony export */   \"enableAllPlugins\": () => (/* binding */ J),\n/* harmony export */   \"enableES5\": () => (/* binding */ N),\n/* harmony export */   \"enableMapSet\": () => (/* binding */ C),\n/* harmony export */   \"enablePatches\": () => (/* binding */ T),\n/* harmony export */   \"finishDraft\": () => (/* binding */ dn),\n/* harmony export */   \"freeze\": () => (/* binding */ d),\n/* harmony export */   \"immerable\": () => (/* binding */ L),\n/* harmony export */   \"isDraft\": () => (/* binding */ r),\n/* harmony export */   \"isDraftable\": () => (/* binding */ t),\n/* harmony export */   \"nothing\": () => (/* binding */ H),\n/* harmony export */   \"original\": () => (/* binding */ e),\n/* harmony export */   \"produce\": () => (/* binding */ fn),\n/* harmony export */   \"produceWithPatches\": () => (/* binding */ cn),\n/* harmony export */   \"setAutoFreeze\": () => (/* binding */ sn),\n/* harmony export */   \"setUseProxies\": () => (/* binding */ vn)\n/* harmony export */ });\nfunction n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(true){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,t):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(t.length?\" \"+t.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function r(n){return!!n&&!!n[Q]}function t(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,\"constructor\")&&r.constructor;return t===Object||\"function\"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&\"symbol\"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return false||U||n(0),U}function j(n,r){r&&(b(\"Patches\"),n.u=[],n.s=[],n.v=r)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b(\"ES5\").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b(\"Patches\").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(r,i){return A(n,e,o,r,i,t)})),x(n,o,!1),t&&n.u&&b(\"Patches\").R(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if( true&&c===o&&n(5),r(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!r(v))return;e.m=!1}if(t(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),n.h.F&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,r,t){var e=s(r)?b(\"MapSet\").N(r,t):v(r)?b(\"MapSet\").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b(\"ES5\").J(r,t);return(t?t.A:_()).p.push(e),e}function D(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=F(r,c),u.I=!1}else e=F(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function F(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return true&&f(r),en.get(r,n)},set:function(r){var t=this[Q]; true&&f(t),en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.O&&n(3,JSON.stringify(p(r)))}var s={};m(\"ES5\",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,\"\"+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&\"object\"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.D,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c=\"add\";m(\"Patches\",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=\"\"+i[s];0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof f&&\"prototype\"===p&&n(24),\"object\"!=typeof(f=a(f,p))&&n(15,i.join(\"/\"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case\"replace\":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return\"-\"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case\"remove\":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},R:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?\"replace\":c:\"remove\";if(v!==p||\"replace\"!==l){var d=r.concat(n);t.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:\"remove\",path:d}:\"remove\"===l?{op:c,path:d,value:f(v)}:{op:\"replace\",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:\"replace\",path:p,value:f(u[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:\"replace\",path:r.concat([\"length\"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:\"remove\",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:\"replace\",path:[],value:r===H?void 0:r}),e.push({op:\"replace\",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=R(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.O&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,\"size\",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.D.set(n,!0),t.o.set(n,r),t.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.D.set(n,!1):r.D.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(r){n.D.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=R(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,\"size\",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m(\"MapSet\",{N:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",V=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return\"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return\"'current' expects a draft, got: \"+n},23:function(n){return\"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=R(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.D[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&\"number\"!=typeof t&&(void 0!==t||r in n.o)||(n.o[r]=t,n.D[r]=!0,!0)},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.D[r]=!1,E(n),k(n)):delete n.D[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||\"length\"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return true&&isNaN(parseInt(t))&&n(13),on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return true&&\"length\"!==t&&isNaN(parseInt(t))&&n(14),en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.g=B,this.F=!0,this.produce=function(r,i,o){if(\"function\"==typeof r&&\"function\"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),t(r)){var c=w(e),s=R(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!r||\"object\"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.F&&d(f,!0),o){var p=[],l=[];b(\"Patches\").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if(\"function\"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return\"undefined\"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},\"boolean\"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),\"boolean\"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(r,t){var e=r&&r[Q]; true&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b(\"Patches\").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fn);\n//# sourceMappingURL=immer.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/immer/dist/immer.esm.js\n");

/***/ }),

/***/ "./node_modules/reselect/es/defaultMemoize.js":
/*!****************************************************!*\
  !*** ./node_modules/reselect/es/defaultMemoize.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaultEqualityCheck\": () => (/* binding */ defaultEqualityCheck),\n/* harmony export */   \"createCacheKeyComparator\": () => (/* binding */ createCacheKeyComparator),\n/* harmony export */   \"defaultMemoize\": () => (/* binding */ defaultMemoize)\n/* harmony export */ });\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nvar defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nfunction createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nfunction defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVzZWxlY3QvZXMvZGVmYXVsdE1lbW9pemUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FndGFpbC8uL25vZGVfbW9kdWxlcy9yZXNlbGVjdC9lcy9kZWZhdWx0TWVtb2l6ZS5qcz8xMmM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENhY2hlIGltcGxlbWVudGF0aW9uIGJhc2VkIG9uIEVyaWsgUmFzbXVzc2VuJ3MgYGxydS1tZW1vaXplYDpcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9lcmlrcmFzL2xydS1tZW1vaXplXG52YXIgTk9UX0ZPVU5EID0gJ05PVF9GT1VORCc7XG5cbmZ1bmN0aW9uIGNyZWF0ZVNpbmdsZXRvbkNhY2hlKGVxdWFscykge1xuICB2YXIgZW50cnk7XG4gIHJldHVybiB7XG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KSB7XG4gICAgICBpZiAoZW50cnkgJiYgZXF1YWxzKGVudHJ5LmtleSwga2V5KSkge1xuICAgICAgICByZXR1cm4gZW50cnkudmFsdWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBOT1RfRk9VTkQ7XG4gICAgfSxcbiAgICBwdXQ6IGZ1bmN0aW9uIHB1dChrZXksIHZhbHVlKSB7XG4gICAgICBlbnRyeSA9IHtcbiAgICAgICAga2V5OiBrZXksXG4gICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgfTtcbiAgICB9LFxuICAgIGdldEVudHJpZXM6IGZ1bmN0aW9uIGdldEVudHJpZXMoKSB7XG4gICAgICByZXR1cm4gZW50cnkgPyBbZW50cnldIDogW107XG4gICAgfSxcbiAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgICBlbnRyeSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxydUNhY2hlKG1heFNpemUsIGVxdWFscykge1xuICB2YXIgZW50cmllcyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGdldChrZXkpIHtcbiAgICB2YXIgY2FjaGVJbmRleCA9IGVudHJpZXMuZmluZEluZGV4KGZ1bmN0aW9uIChlbnRyeSkge1xuICAgICAgcmV0dXJuIGVxdWFscyhrZXksIGVudHJ5LmtleSk7XG4gICAgfSk7IC8vIFdlIGZvdW5kIGEgY2FjaGVkIGVudHJ5XG5cbiAgICBpZiAoY2FjaGVJbmRleCA+IC0xKSB7XG4gICAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2NhY2hlSW5kZXhdOyAvLyBDYWNoZWQgZW50cnkgbm90IGF0IHRvcCBvZiBjYWNoZSwgbW92ZSBpdCB0byB0aGUgdG9wXG5cbiAgICAgIGlmIChjYWNoZUluZGV4ID4gMCkge1xuICAgICAgICBlbnRyaWVzLnNwbGljZShjYWNoZUluZGV4LCAxKTtcbiAgICAgICAgZW50cmllcy51bnNoaWZ0KGVudHJ5KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGVudHJ5LnZhbHVlO1xuICAgIH0gLy8gTm8gZW50cnkgZm91bmQgaW4gY2FjaGUsIHJldHVybiBzZW50aW5lbFxuXG5cbiAgICByZXR1cm4gTk9UX0ZPVU5EO1xuICB9XG5cbiAgZnVuY3Rpb24gcHV0KGtleSwgdmFsdWUpIHtcbiAgICBpZiAoZ2V0KGtleSkgPT09IE5PVF9GT1VORCkge1xuICAgICAgLy8gVE9ETyBJcyB1bnNoaWZ0IHNsb3c/XG4gICAgICBlbnRyaWVzLnVuc2hpZnQoe1xuICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICB9KTtcblxuICAgICAgaWYgKGVudHJpZXMubGVuZ3RoID4gbWF4U2l6ZSkge1xuICAgICAgICBlbnRyaWVzLnBvcCgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEVudHJpZXMoKSB7XG4gICAgcmV0dXJuIGVudHJpZXM7XG4gIH1cblxuICBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICBlbnRyaWVzID0gW107XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGdldDogZ2V0LFxuICAgIHB1dDogcHV0LFxuICAgIGdldEVudHJpZXM6IGdldEVudHJpZXMsXG4gICAgY2xlYXI6IGNsZWFyXG4gIH07XG59XG5cbmV4cG9ydCB2YXIgZGVmYXVsdEVxdWFsaXR5Q2hlY2sgPSBmdW5jdGlvbiBkZWZhdWx0RXF1YWxpdHlDaGVjayhhLCBiKSB7XG4gIHJldHVybiBhID09PSBiO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDYWNoZUtleUNvbXBhcmF0b3IoZXF1YWxpdHlDaGVjaykge1xuICByZXR1cm4gZnVuY3Rpb24gYXJlQXJndW1lbnRzU2hhbGxvd2x5RXF1YWwocHJldiwgbmV4dCkge1xuICAgIGlmIChwcmV2ID09PSBudWxsIHx8IG5leHQgPT09IG51bGwgfHwgcHJldi5sZW5ndGggIT09IG5leHQubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSAvLyBEbyB0aGlzIGluIGEgZm9yIGxvb3AgKGFuZCBub3QgYSBgZm9yRWFjaGAgb3IgYW4gYGV2ZXJ5YCkgc28gd2UgY2FuIGRldGVybWluZSBlcXVhbGl0eSBhcyBmYXN0IGFzIHBvc3NpYmxlLlxuXG5cbiAgICB2YXIgbGVuZ3RoID0gcHJldi5sZW5ndGg7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoIWVxdWFsaXR5Q2hlY2socHJldltpXSwgbmV4dFtpXSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9O1xufVxuLy8gZGVmYXVsdE1lbW9pemUgbm93IHN1cHBvcnRzIGEgY29uZmlndXJhYmxlIGNhY2hlIHNpemUgd2l0aCBMUlUgYmVoYXZpb3IsXG4vLyBhbmQgb3B0aW9uYWwgY29tcGFyaXNvbiBvZiB0aGUgcmVzdWx0IHZhbHVlIHdpdGggZXhpc3RpbmcgdmFsdWVzXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdE1lbW9pemUoZnVuYywgZXF1YWxpdHlDaGVja09yT3B0aW9ucykge1xuICB2YXIgcHJvdmlkZWRPcHRpb25zID0gdHlwZW9mIGVxdWFsaXR5Q2hlY2tPck9wdGlvbnMgPT09ICdvYmplY3QnID8gZXF1YWxpdHlDaGVja09yT3B0aW9ucyA6IHtcbiAgICBlcXVhbGl0eUNoZWNrOiBlcXVhbGl0eUNoZWNrT3JPcHRpb25zXG4gIH07XG4gIHZhciBfcHJvdmlkZWRPcHRpb25zJGVxdWEgPSBwcm92aWRlZE9wdGlvbnMuZXF1YWxpdHlDaGVjayxcbiAgICAgIGVxdWFsaXR5Q2hlY2sgPSBfcHJvdmlkZWRPcHRpb25zJGVxdWEgPT09IHZvaWQgMCA/IGRlZmF1bHRFcXVhbGl0eUNoZWNrIDogX3Byb3ZpZGVkT3B0aW9ucyRlcXVhLFxuICAgICAgX3Byb3ZpZGVkT3B0aW9ucyRtYXhTID0gcHJvdmlkZWRPcHRpb25zLm1heFNpemUsXG4gICAgICBtYXhTaXplID0gX3Byb3ZpZGVkT3B0aW9ucyRtYXhTID09PSB2b2lkIDAgPyAxIDogX3Byb3ZpZGVkT3B0aW9ucyRtYXhTLFxuICAgICAgcmVzdWx0RXF1YWxpdHlDaGVjayA9IHByb3ZpZGVkT3B0aW9ucy5yZXN1bHRFcXVhbGl0eUNoZWNrO1xuICB2YXIgY29tcGFyYXRvciA9IGNyZWF0ZUNhY2hlS2V5Q29tcGFyYXRvcihlcXVhbGl0eUNoZWNrKTtcbiAgdmFyIGNhY2hlID0gbWF4U2l6ZSA9PT0gMSA/IGNyZWF0ZVNpbmdsZXRvbkNhY2hlKGNvbXBhcmF0b3IpIDogY3JlYXRlTHJ1Q2FjaGUobWF4U2l6ZSwgY29tcGFyYXRvcik7IC8vIHdlIHJlZmVyZW5jZSBhcmd1bWVudHMgaW5zdGVhZCBvZiBzcHJlYWRpbmcgdGhlbSBmb3IgcGVyZm9ybWFuY2UgcmVhc29uc1xuXG4gIGZ1bmN0aW9uIG1lbW9pemVkKCkge1xuICAgIHZhciB2YWx1ZSA9IGNhY2hlLmdldChhcmd1bWVudHMpO1xuXG4gICAgaWYgKHZhbHVlID09PSBOT1RfRk9VTkQpIHtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHZhbHVlID0gZnVuYy5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuXG4gICAgICBpZiAocmVzdWx0RXF1YWxpdHlDaGVjaykge1xuICAgICAgICB2YXIgZW50cmllcyA9IGNhY2hlLmdldEVudHJpZXMoKTtcbiAgICAgICAgdmFyIG1hdGNoaW5nRW50cnkgPSBlbnRyaWVzLmZpbmQoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdEVxdWFsaXR5Q2hlY2soZW50cnkudmFsdWUsIHZhbHVlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKG1hdGNoaW5nRW50cnkpIHtcbiAgICAgICAgICB2YWx1ZSA9IG1hdGNoaW5nRW50cnkudmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgY2FjaGUucHV0KGFyZ3VtZW50cywgdmFsdWUpO1xuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIG1lbW9pemVkLmNsZWFyQ2FjaGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGNhY2hlLmNsZWFyKCk7XG4gIH07XG5cbiAgcmV0dXJuIG1lbW9pemVkO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/reselect/es/defaultMemoize.js\n");

/***/ }),

/***/ "./node_modules/reselect/es/index.js":
/*!*******************************************!*\
  !*** ./node_modules/reselect/es/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaultMemoize\": () => (/* reexport safe */ _defaultMemoize__WEBPACK_IMPORTED_MODULE_0__.defaultMemoize),\n/* harmony export */   \"defaultEqualityCheck\": () => (/* reexport safe */ _defaultMemoize__WEBPACK_IMPORTED_MODULE_0__.defaultEqualityCheck),\n/* harmony export */   \"createSelectorCreator\": () => (/* binding */ createSelectorCreator),\n/* harmony export */   \"createSelector\": () => (/* binding */ createSelector),\n/* harmony export */   \"createStructuredSelector\": () => (/* binding */ createStructuredSelector)\n/* harmony export */ });\n/* harmony import */ var _defaultMemoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultMemoize */ \"./node_modules/reselect/es/defaultMemoize.js\");\n\n\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nvar createSelector = /* #__PURE__ */createSelectorCreator(_defaultMemoize__WEBPACK_IMPORTED_MODULE_0__.defaultMemoize);\n// Manual definition of state and output arguments\nvar createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/reselect/es/index.js\n");

/***/ }),

/***/ "./client/src/components/CommentApp/actions/comments.ts":
/*!**************************************************************!*\
  !*** ./client/src/components/CommentApp/actions/comments.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.commentActionFunctions = exports.invalidateContentPath = exports.deleteReply = exports.updateReply = exports.addReply = exports.setFocusedComment = exports.resolveComment = exports.deleteComment = exports.updateComment = exports.addComment = exports.INVALIDATE_CONTENT_PATH = exports.DELETE_REPLY = exports.UPDATE_REPLY = exports.ADD_REPLY = exports.SET_PINNED_COMMENT = exports.SET_FOCUSED_COMMENT = exports.RESOLVE_COMMENT = exports.DELETE_COMMENT = exports.UPDATE_COMMENT = exports.ADD_COMMENT = void 0;\nexports.ADD_COMMENT = 'add-comment';\nexports.UPDATE_COMMENT = 'update-comment';\nexports.DELETE_COMMENT = 'delete-comment';\nexports.RESOLVE_COMMENT = 'resolve-comment';\nexports.SET_FOCUSED_COMMENT = 'set-focused-comment';\nexports.SET_PINNED_COMMENT = 'set-pinned-comment';\nexports.ADD_REPLY = 'add-reply';\nexports.UPDATE_REPLY = 'update-reply';\nexports.DELETE_REPLY = 'delete-reply';\nexports.INVALIDATE_CONTENT_PATH = 'invalidate-content-path';\nfunction addComment(comment) {\n    return {\n        type: exports.ADD_COMMENT,\n        comment: comment\n    };\n}\nexports.addComment = addComment;\nfunction updateComment(commentId, update) {\n    return {\n        type: exports.UPDATE_COMMENT,\n        commentId: commentId,\n        update: update\n    };\n}\nexports.updateComment = updateComment;\nfunction deleteComment(commentId) {\n    return {\n        type: exports.DELETE_COMMENT,\n        commentId: commentId\n    };\n}\nexports.deleteComment = deleteComment;\nfunction resolveComment(commentId) {\n    return {\n        type: exports.RESOLVE_COMMENT,\n        commentId: commentId\n    };\n}\nexports.resolveComment = resolveComment;\nfunction setFocusedComment(commentId, _a) {\n    var _b = _a === void 0 ? {\n        updatePinnedComment: false,\n        forceFocus: false\n    } : _a, updatePinnedComment = _b.updatePinnedComment, forceFocus = _b.forceFocus;\n    return {\n        type: exports.SET_FOCUSED_COMMENT,\n        commentId: commentId,\n        updatePinnedComment: updatePinnedComment,\n        forceFocus: forceFocus\n    };\n}\nexports.setFocusedComment = setFocusedComment;\nfunction addReply(commentId, reply) {\n    return {\n        type: exports.ADD_REPLY,\n        commentId: commentId,\n        reply: reply\n    };\n}\nexports.addReply = addReply;\nfunction updateReply(commentId, replyId, update) {\n    return {\n        type: exports.UPDATE_REPLY,\n        commentId: commentId,\n        replyId: replyId,\n        update: update\n    };\n}\nexports.updateReply = updateReply;\nfunction deleteReply(commentId, replyId) {\n    return {\n        type: exports.DELETE_REPLY,\n        commentId: commentId,\n        replyId: replyId\n    };\n}\nexports.deleteReply = deleteReply;\nfunction invalidateContentPath(contentPath) {\n    return {\n        type: exports.INVALIDATE_CONTENT_PATH,\n        contentPath: contentPath\n    };\n}\nexports.invalidateContentPath = invalidateContentPath;\nexports.commentActionFunctions = {\n    addComment: addComment,\n    updateComment: updateComment,\n    deleteComment: deleteComment,\n    resolveComment: resolveComment,\n    setFocusedComment: setFocusedComment,\n    addReply: addReply,\n    updateReply: updateReply,\n    deleteReply: deleteReply,\n    invalidateContentPath: invalidateContentPath\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9hY3Rpb25zL2NvbW1lbnRzLnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWd0YWlsLy4vY2xpZW50L3NyYy9jb21wb25lbnRzL0NvbW1lbnRBcHAvYWN0aW9ucy9jb21tZW50cy50cz9hYTdiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuY29tbWVudEFjdGlvbkZ1bmN0aW9ucyA9IGV4cG9ydHMuaW52YWxpZGF0ZUNvbnRlbnRQYXRoID0gZXhwb3J0cy5kZWxldGVSZXBseSA9IGV4cG9ydHMudXBkYXRlUmVwbHkgPSBleHBvcnRzLmFkZFJlcGx5ID0gZXhwb3J0cy5zZXRGb2N1c2VkQ29tbWVudCA9IGV4cG9ydHMucmVzb2x2ZUNvbW1lbnQgPSBleHBvcnRzLmRlbGV0ZUNvbW1lbnQgPSBleHBvcnRzLnVwZGF0ZUNvbW1lbnQgPSBleHBvcnRzLmFkZENvbW1lbnQgPSBleHBvcnRzLklOVkFMSURBVEVfQ09OVEVOVF9QQVRIID0gZXhwb3J0cy5ERUxFVEVfUkVQTFkgPSBleHBvcnRzLlVQREFURV9SRVBMWSA9IGV4cG9ydHMuQUREX1JFUExZID0gZXhwb3J0cy5TRVRfUElOTkVEX0NPTU1FTlQgPSBleHBvcnRzLlNFVF9GT0NVU0VEX0NPTU1FTlQgPSBleHBvcnRzLlJFU09MVkVfQ09NTUVOVCA9IGV4cG9ydHMuREVMRVRFX0NPTU1FTlQgPSBleHBvcnRzLlVQREFURV9DT01NRU5UID0gZXhwb3J0cy5BRERfQ09NTUVOVCA9IHZvaWQgMDtcbmV4cG9ydHMuQUREX0NPTU1FTlQgPSAnYWRkLWNvbW1lbnQnO1xuZXhwb3J0cy5VUERBVEVfQ09NTUVOVCA9ICd1cGRhdGUtY29tbWVudCc7XG5leHBvcnRzLkRFTEVURV9DT01NRU5UID0gJ2RlbGV0ZS1jb21tZW50JztcbmV4cG9ydHMuUkVTT0xWRV9DT01NRU5UID0gJ3Jlc29sdmUtY29tbWVudCc7XG5leHBvcnRzLlNFVF9GT0NVU0VEX0NPTU1FTlQgPSAnc2V0LWZvY3VzZWQtY29tbWVudCc7XG5leHBvcnRzLlNFVF9QSU5ORURfQ09NTUVOVCA9ICdzZXQtcGlubmVkLWNvbW1lbnQnO1xuZXhwb3J0cy5BRERfUkVQTFkgPSAnYWRkLXJlcGx5JztcbmV4cG9ydHMuVVBEQVRFX1JFUExZID0gJ3VwZGF0ZS1yZXBseSc7XG5leHBvcnRzLkRFTEVURV9SRVBMWSA9ICdkZWxldGUtcmVwbHknO1xuZXhwb3J0cy5JTlZBTElEQVRFX0NPTlRFTlRfUEFUSCA9ICdpbnZhbGlkYXRlLWNvbnRlbnQtcGF0aCc7XG5mdW5jdGlvbiBhZGRDb21tZW50KGNvbW1lbnQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBleHBvcnRzLkFERF9DT01NRU5ULFxuICAgICAgICBjb21tZW50OiBjb21tZW50XG4gICAgfTtcbn1cbmV4cG9ydHMuYWRkQ29tbWVudCA9IGFkZENvbW1lbnQ7XG5mdW5jdGlvbiB1cGRhdGVDb21tZW50KGNvbW1lbnRJZCwgdXBkYXRlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogZXhwb3J0cy5VUERBVEVfQ09NTUVOVCxcbiAgICAgICAgY29tbWVudElkOiBjb21tZW50SWQsXG4gICAgICAgIHVwZGF0ZTogdXBkYXRlXG4gICAgfTtcbn1cbmV4cG9ydHMudXBkYXRlQ29tbWVudCA9IHVwZGF0ZUNvbW1lbnQ7XG5mdW5jdGlvbiBkZWxldGVDb21tZW50KGNvbW1lbnRJZCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IGV4cG9ydHMuREVMRVRFX0NPTU1FTlQsXG4gICAgICAgIGNvbW1lbnRJZDogY29tbWVudElkXG4gICAgfTtcbn1cbmV4cG9ydHMuZGVsZXRlQ29tbWVudCA9IGRlbGV0ZUNvbW1lbnQ7XG5mdW5jdGlvbiByZXNvbHZlQ29tbWVudChjb21tZW50SWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBleHBvcnRzLlJFU09MVkVfQ09NTUVOVCxcbiAgICAgICAgY29tbWVudElkOiBjb21tZW50SWRcbiAgICB9O1xufVxuZXhwb3J0cy5yZXNvbHZlQ29tbWVudCA9IHJlc29sdmVDb21tZW50O1xuZnVuY3Rpb24gc2V0Rm9jdXNlZENvbW1lbnQoY29tbWVudElkLCBfYSkge1xuICAgIHZhciBfYiA9IF9hID09PSB2b2lkIDAgPyB7XG4gICAgICAgIHVwZGF0ZVBpbm5lZENvbW1lbnQ6IGZhbHNlLFxuICAgICAgICBmb3JjZUZvY3VzOiBmYWxzZVxuICAgIH0gOiBfYSwgdXBkYXRlUGlubmVkQ29tbWVudCA9IF9iLnVwZGF0ZVBpbm5lZENvbW1lbnQsIGZvcmNlRm9jdXMgPSBfYi5mb3JjZUZvY3VzO1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IGV4cG9ydHMuU0VUX0ZPQ1VTRURfQ09NTUVOVCxcbiAgICAgICAgY29tbWVudElkOiBjb21tZW50SWQsXG4gICAgICAgIHVwZGF0ZVBpbm5lZENvbW1lbnQ6IHVwZGF0ZVBpbm5lZENvbW1lbnQsXG4gICAgICAgIGZvcmNlRm9jdXM6IGZvcmNlRm9jdXNcbiAgICB9O1xufVxuZXhwb3J0cy5zZXRGb2N1c2VkQ29tbWVudCA9IHNldEZvY3VzZWRDb21tZW50O1xuZnVuY3Rpb24gYWRkUmVwbHkoY29tbWVudElkLCByZXBseSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IGV4cG9ydHMuQUREX1JFUExZLFxuICAgICAgICBjb21tZW50SWQ6IGNvbW1lbnRJZCxcbiAgICAgICAgcmVwbHk6IHJlcGx5XG4gICAgfTtcbn1cbmV4cG9ydHMuYWRkUmVwbHkgPSBhZGRSZXBseTtcbmZ1bmN0aW9uIHVwZGF0ZVJlcGx5KGNvbW1lbnRJZCwgcmVwbHlJZCwgdXBkYXRlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogZXhwb3J0cy5VUERBVEVfUkVQTFksXG4gICAgICAgIGNvbW1lbnRJZDogY29tbWVudElkLFxuICAgICAgICByZXBseUlkOiByZXBseUlkLFxuICAgICAgICB1cGRhdGU6IHVwZGF0ZVxuICAgIH07XG59XG5leHBvcnRzLnVwZGF0ZVJlcGx5ID0gdXBkYXRlUmVwbHk7XG5mdW5jdGlvbiBkZWxldGVSZXBseShjb21tZW50SWQsIHJlcGx5SWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBleHBvcnRzLkRFTEVURV9SRVBMWSxcbiAgICAgICAgY29tbWVudElkOiBjb21tZW50SWQsXG4gICAgICAgIHJlcGx5SWQ6IHJlcGx5SWRcbiAgICB9O1xufVxuZXhwb3J0cy5kZWxldGVSZXBseSA9IGRlbGV0ZVJlcGx5O1xuZnVuY3Rpb24gaW52YWxpZGF0ZUNvbnRlbnRQYXRoKGNvbnRlbnRQYXRoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogZXhwb3J0cy5JTlZBTElEQVRFX0NPTlRFTlRfUEFUSCxcbiAgICAgICAgY29udGVudFBhdGg6IGNvbnRlbnRQYXRoXG4gICAgfTtcbn1cbmV4cG9ydHMuaW52YWxpZGF0ZUNvbnRlbnRQYXRoID0gaW52YWxpZGF0ZUNvbnRlbnRQYXRoO1xuZXhwb3J0cy5jb21tZW50QWN0aW9uRnVuY3Rpb25zID0ge1xuICAgIGFkZENvbW1lbnQ6IGFkZENvbW1lbnQsXG4gICAgdXBkYXRlQ29tbWVudDogdXBkYXRlQ29tbWVudCxcbiAgICBkZWxldGVDb21tZW50OiBkZWxldGVDb21tZW50LFxuICAgIHJlc29sdmVDb21tZW50OiByZXNvbHZlQ29tbWVudCxcbiAgICBzZXRGb2N1c2VkQ29tbWVudDogc2V0Rm9jdXNlZENvbW1lbnQsXG4gICAgYWRkUmVwbHk6IGFkZFJlcGx5LFxuICAgIHVwZGF0ZVJlcGx5OiB1cGRhdGVSZXBseSxcbiAgICBkZWxldGVSZXBseTogZGVsZXRlUmVwbHksXG4gICAgaW52YWxpZGF0ZUNvbnRlbnRQYXRoOiBpbnZhbGlkYXRlQ29udGVudFBhdGhcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/actions/comments.ts\n");

/***/ }),

/***/ "./client/src/components/CommentApp/actions/settings.ts":
/*!**************************************************************!*\
  !*** ./client/src/components/CommentApp/actions/settings.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.updateGlobalSettings = exports.UPDATE_GLOBAL_SETTINGS = void 0;\nexports.UPDATE_GLOBAL_SETTINGS = 'update-global-settings';\nfunction updateGlobalSettings(update) {\n    return {\n        type: exports.UPDATE_GLOBAL_SETTINGS,\n        update: update\n    };\n}\nexports.updateGlobalSettings = updateGlobalSettings;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9hY3Rpb25zL3NldHRpbmdzLnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWd0YWlsLy4vY2xpZW50L3NyYy9jb21wb25lbnRzL0NvbW1lbnRBcHAvYWN0aW9ucy9zZXR0aW5ncy50cz9hMWRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMudXBkYXRlR2xvYmFsU2V0dGluZ3MgPSBleHBvcnRzLlVQREFURV9HTE9CQUxfU0VUVElOR1MgPSB2b2lkIDA7XG5leHBvcnRzLlVQREFURV9HTE9CQUxfU0VUVElOR1MgPSAndXBkYXRlLWdsb2JhbC1zZXR0aW5ncyc7XG5mdW5jdGlvbiB1cGRhdGVHbG9iYWxTZXR0aW5ncyh1cGRhdGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBleHBvcnRzLlVQREFURV9HTE9CQUxfU0VUVElOR1MsXG4gICAgICAgIHVwZGF0ZTogdXBkYXRlXG4gICAgfTtcbn1cbmV4cG9ydHMudXBkYXRlR2xvYmFsU2V0dGluZ3MgPSB1cGRhdGVHbG9iYWxTZXR0aW5ncztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/actions/settings.ts\n");

/***/ }),

/***/ "./client/src/components/CommentApp/components/Comment/index.tsx":
/*!***********************************************************************!*\
  !*** ./client/src/components/CommentApp/components/Comment/index.tsx ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"./node_modules/react/index-exposed.js\"));\nvar react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index-exposed.js\"));\nvar focus_trap_react_1 = __importDefault(__webpack_require__(/*! focus-trap-react */ \"./node_modules/focus-trap-react/dist/focus-trap-react-exposed.js\"));\nvar gettext_1 = __webpack_require__(/*! ../../../../utils/gettext */ \"./client/src/utils/gettext.ts\");\nvar Icon_1 = __importDefault(__webpack_require__(/*! ../../../Icon/Icon */ \"./client/src/components/Icon/Icon.tsx\"));\nvar comments_1 = __webpack_require__(/*! ../../state/comments */ \"./client/src/components/CommentApp/state/comments.ts\");\nvar comments_2 = __webpack_require__(/*! ../../actions/comments */ \"./client/src/components/CommentApp/actions/comments.ts\");\nvar sequences_1 = __webpack_require__(/*! ../../utils/sequences */ \"./client/src/components/CommentApp/utils/sequences.ts\");\nvar CommentReply_1 = __importDefault(__webpack_require__(/*! ../CommentReply */ \"./client/src/components/CommentApp/components/CommentReply/index.tsx\"));\nvar CommentHeader_1 = __webpack_require__(/*! ../CommentHeader */ \"./client/src/components/CommentApp/components/CommentHeader/index.tsx\");\nvar TextArea_1 = __importDefault(__webpack_require__(/*! ../TextArea */ \"./client/src/components/CommentApp/components/TextArea/index.tsx\"));\nfunction saveComment(comment, store) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                mode: 'saving'\n            }));\n            try {\n                store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                    mode: 'default',\n                    text: comment.newText,\n                    remoteId: comment.remoteId,\n                    author: comment.author,\n                    date: comment.date\n                }));\n            }\n            catch (err) {\n                /* eslint-disable-next-line no-console */\n                console.error(err);\n                store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                    mode: 'save_error'\n                }));\n            }\n            return [2 /*return*/];\n        });\n    });\n}\nfunction doDeleteComment(comment, store) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                mode: 'deleting'\n            }));\n            try {\n                store.dispatch((0, comments_2.deleteComment)(comment.localId));\n            }\n            catch (err) {\n                /* eslint-disable-next-line no-console */\n                console.error(err);\n                store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                    mode: 'delete_error'\n                }));\n            }\n            return [2 /*return*/];\n        });\n    });\n}\nfunction doResolveComment(comment, store) {\n    store.dispatch((0, comments_2.resolveComment)(comment.localId));\n}\nvar CommentComponent = /** @class */ (function (_super) {\n    __extends(CommentComponent, _super);\n    function CommentComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CommentComponent.prototype.renderReplies = function (_a) {\n        var e_1, _b;\n        var _this = this;\n        var _c = _a === void 0 ? {} : _a, _d = _c.hideNewReply, hideNewReply = _d === void 0 ? false : _d;\n        var _e = this.props, comment = _e.comment, isFocused = _e.isFocused, store = _e.store, user = _e.user;\n        if (!comment.remoteId) {\n            // Hide replies UI if the comment itself isn't saved yet\n            return null;\n        }\n        var onChangeNewReply = function (value) {\n            store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                newReply: value\n            }));\n        };\n        var sendReply = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            var replyId, reply;\n            return __generator(this, function (_a) {\n                e.preventDefault();\n                replyId = (0, sequences_1.getNextReplyId)();\n                reply = (0, comments_1.newCommentReply)(replyId, user, Date.now(), {\n                    text: comment.newReply,\n                    mode: 'default'\n                });\n                store.dispatch((0, comments_2.addReply)(comment.localId, reply));\n                store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                    newReply: ''\n                }));\n                return [2 /*return*/];\n            });\n        }); };\n        var onClickCancelReply = function (e) {\n            e.preventDefault();\n            store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                newReply: ''\n            }));\n            store.dispatch((0, comments_2.setFocusedComment)(null));\n            // Stop the event bubbling so that the comment isn't immediately refocused\n            e.stopPropagation();\n        };\n        var replies = [];\n        var replyBeingEdited = false;\n        try {\n            for (var _f = __values(comment.replies.values()), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var reply = _g.value;\n                if (reply.mode === 'saving' || reply.mode === 'editing') {\n                    replyBeingEdited = true;\n                }\n                if (!reply.deleted) {\n                    replies.push(react_1[\"default\"].createElement(CommentReply_1[\"default\"], { key: reply.localId, store: store, user: user, comment: comment, reply: reply, isFocused: isFocused }));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_g && !_g.done && (_b = _f[\"return\"])) _b.call(_f);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        // Hide new reply if a reply is being edited as well\n        var newReplyHidden = hideNewReply || replyBeingEdited;\n        var replyForm;\n        if (!newReplyHidden && (isFocused || comment.newReply)) {\n            replyForm = (react_1[\"default\"].createElement(\"form\", { onSubmit: sendReply },\n                react_1[\"default\"].createElement(TextArea_1[\"default\"], { className: \"comment__reply-input\", placeholder: (0, gettext_1.gettext)('Enter your reply...'), value: comment.newReply, onChange: onChangeNewReply }),\n                react_1[\"default\"].createElement(\"div\", { className: \"comment__reply-actions\" },\n                    react_1[\"default\"].createElement(\"button\", { disabled: comment.newReply.length === 0, type: \"submit\", className: \"comment__button comment__button--primary\" }, (0, gettext_1.gettext)('Reply')),\n                    react_1[\"default\"].createElement(\"button\", { type: \"button\", onClick: onClickCancelReply, className: \"comment__button\" }, (0, gettext_1.gettext)('Cancel')))));\n        }\n        else if (replies.length === 0) {\n            // If there is no form, or replies, don't add any elements to the dom\n            // This is in case there is a warning after the comment, some special styling\n            // is added if that element is that last child so we can't have any hidden elements here.\n            return null;\n        }\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(\"ul\", { className: \"comment__replies\" }, replies),\n            replyForm));\n    };\n    CommentComponent.prototype.renderCreating = function () {\n        var _this = this;\n        var _a = this.props, comment = _a.comment, store = _a.store, isFocused = _a.isFocused;\n        var onChangeText = function (value) {\n            store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                newText: value\n            }));\n        };\n        var onSave = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        e.preventDefault();\n                        return [4 /*yield*/, saveComment(comment, store)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        var onCancel = function (e) {\n            e.preventDefault();\n            store.dispatch((0, comments_2.deleteComment)(comment.localId));\n        };\n        var descriptionId = \"comment-description-\".concat(comment.localId);\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { descriptionId: descriptionId, commentReply: comment, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"form\", { onSubmit: onSave },\n                react_1[\"default\"].createElement(TextArea_1[\"default\"], { focusTarget: isFocused, className: \"comment__input\", value: comment.newText, onChange: onChangeText, placeholder: (0, gettext_1.gettext)('Enter your comments...'), additionalAttributes: {\n                        'aria-describedby': descriptionId\n                    } }),\n                react_1[\"default\"].createElement(\"div\", { className: \"comment__actions\" },\n                    react_1[\"default\"].createElement(\"button\", { disabled: comment.newText.length === 0, type: \"submit\", className: \"comment__button comment__button--primary\" }, (0, gettext_1.gettext)('Comment')),\n                    react_1[\"default\"].createElement(\"button\", { type: \"button\", onClick: onCancel, className: \"comment__button\" }, (0, gettext_1.gettext)('Cancel'))))));\n    };\n    CommentComponent.prototype.renderEditing = function () {\n        var _this = this;\n        var _a = this.props, comment = _a.comment, store = _a.store, isFocused = _a.isFocused;\n        var onChangeText = function (value) {\n            store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                newText: value\n            }));\n        };\n        var onSave = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        e.preventDefault();\n                        return [4 /*yield*/, saveComment(comment, store)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        var onCancel = function (e) {\n            e.preventDefault();\n            store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                mode: 'default',\n                newText: comment.text\n            }));\n        };\n        var descriptionId = \"comment-description-\".concat(comment.localId);\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { descriptionId: descriptionId, commentReply: comment, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"form\", { onSubmit: onSave },\n                react_1[\"default\"].createElement(TextArea_1[\"default\"], { focusTarget: isFocused, className: \"comment__input\", value: comment.newText, additionalAttributes: {\n                        'aria-describedby': descriptionId\n                    }, onChange: onChangeText }),\n                react_1[\"default\"].createElement(\"div\", { className: \"comment__actions\" },\n                    react_1[\"default\"].createElement(\"button\", { disabled: comment.newText.length === 0, type: \"submit\", className: \"comment__button comment__button--primary\" }, (0, gettext_1.gettext)('Save')),\n                    react_1[\"default\"].createElement(\"button\", { type: \"button\", onClick: onCancel, className: \"comment__button\" }, (0, gettext_1.gettext)('Cancel')))),\n            this.renderReplies({ hideNewReply: true })));\n    };\n    CommentComponent.prototype.renderSaving = function () {\n        var _a = this.props, comment = _a.comment, store = _a.store, isFocused = _a.isFocused;\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: comment, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment__text\" }, comment.text),\n            react_1[\"default\"].createElement(\"div\", { className: \"comment__progress\" }, (0, gettext_1.gettext)('Saving...')),\n            this.renderReplies({ hideNewReply: true })));\n    };\n    CommentComponent.prototype.renderSaveError = function () {\n        var _this = this;\n        var _a = this.props, comment = _a.comment, store = _a.store, isFocused = _a.isFocused;\n        var onClickRetry = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        e.preventDefault();\n                        return [4 /*yield*/, saveComment(comment, store)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: comment, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment__text\" }, comment.text),\n            this.renderReplies({ hideNewReply: true }),\n            react_1[\"default\"].createElement(\"div\", { className: \"comment__error\" },\n                (0, gettext_1.gettext)('Save error'),\n                react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment__button\", onClick: onClickRetry }, (0, gettext_1.gettext)('Retry')))));\n    };\n    CommentComponent.prototype.renderDeleteConfirm = function () {\n        var _this = this;\n        var _a = this.props, comment = _a.comment, store = _a.store, isFocused = _a.isFocused;\n        var onClickDelete = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        e.preventDefault();\n                        return [4 /*yield*/, doDeleteComment(comment, store)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        var onClickCancel = function (e) {\n            e.preventDefault();\n            store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                mode: 'default'\n            }));\n        };\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: comment, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment__text\" }, comment.text),\n            react_1[\"default\"].createElement(\"div\", { className: \"comment__confirm-delete\" },\n                (0, gettext_1.gettext)('Are you sure?'),\n                react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment__button\", onClick: onClickCancel }, (0, gettext_1.gettext)('Cancel')),\n                react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment__button button button-small no\", onClick: onClickDelete }, (0, gettext_1.gettext)('Delete'))),\n            this.renderReplies({ hideNewReply: true })));\n    };\n    CommentComponent.prototype.renderDeleting = function () {\n        var _a = this.props, comment = _a.comment, store = _a.store, isFocused = _a.isFocused;\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: comment, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment__text\" }, comment.text),\n            react_1[\"default\"].createElement(\"div\", { className: \"comment__progress\" }, (0, gettext_1.gettext)('Deleting')),\n            this.renderReplies({ hideNewReply: true })));\n    };\n    CommentComponent.prototype.renderDeleteError = function () {\n        var _this = this;\n        var _a = this.props, comment = _a.comment, store = _a.store, isFocused = _a.isFocused;\n        var onClickRetry = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        e.preventDefault();\n                        return [4 /*yield*/, doDeleteComment(comment, store)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        var onClickCancel = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                e.preventDefault();\n                store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                    mode: 'default'\n                }));\n                return [2 /*return*/];\n            });\n        }); };\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: comment, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment__text\" }, comment.text),\n            this.renderReplies({ hideNewReply: true }),\n            react_1[\"default\"].createElement(\"div\", { className: \"comment__error\" },\n                (0, gettext_1.gettext)('Delete error'),\n                react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment__button\", onClick: onClickCancel }, (0, gettext_1.gettext)('Cancel')),\n                react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment__button\", onClick: onClickRetry }, (0, gettext_1.gettext)('Retry')))));\n    };\n    CommentComponent.prototype.renderDefault = function () {\n        var _a = this.props, comment = _a.comment, store = _a.store, isFocused = _a.isFocused;\n        // Show edit/delete buttons if this comment was authored by the current user\n        var onEdit;\n        var onDelete;\n        if (comment.author === null ||\n            (this.props.user && this.props.user.id === comment.author.id)) {\n            onEdit = function () {\n                store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                    mode: 'editing',\n                    newText: comment.text\n                }));\n            };\n            onDelete = function () {\n                store.dispatch((0, comments_2.updateComment)(comment.localId, {\n                    mode: 'delete_confirm'\n                }));\n            };\n        }\n        var notice = '';\n        if (!comment.remoteId) {\n            // Save the page to add this comment\n            notice = (0, gettext_1.gettext)('Save the page to add this comment');\n        }\n        else if (comment.text !== comment.originalText) {\n            // Save the page to save this comment\n            notice = (0, gettext_1.gettext)('Save the page to save this comment');\n        }\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: comment, store: store, onResolve: doResolveComment, onEdit: onEdit, onDelete: onDelete, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment__text\" }, comment.text),\n            notice && (react_1[\"default\"].createElement(\"div\", { className: \"comment__notice-placeholder\" },\n                react_1[\"default\"].createElement(\"div\", { className: \"comment__notice\", role: \"status\" },\n                    react_1[\"default\"].createElement(Icon_1[\"default\"], { name: \"info-circle\" }),\n                    notice))),\n            this.renderReplies()));\n    };\n    CommentComponent.prototype.render = function () {\n        var _this = this;\n        var inner;\n        switch (this.props.comment.mode) {\n            case 'creating':\n                inner = this.renderCreating();\n                break;\n            case 'editing':\n                inner = this.renderEditing();\n                break;\n            case 'saving':\n                inner = this.renderSaving();\n                break;\n            case 'save_error':\n                inner = this.renderSaveError();\n                break;\n            case 'delete_confirm':\n                inner = this.renderDeleteConfirm();\n                break;\n            case 'deleting':\n                inner = this.renderDeleting();\n                break;\n            case 'delete_error':\n                inner = this.renderDeleteError();\n                break;\n            default:\n                inner = this.renderDefault();\n                break;\n        }\n        var onClick = function () {\n            _this.props.store.dispatch((0, comments_2.setFocusedComment)(_this.props.comment.localId, {\n                updatePinnedComment: false,\n                forceFocus: _this.props.isFocused && _this.props.forceFocus\n            }));\n        };\n        var onDoubleClick = function () {\n            _this.props.store.dispatch((0, comments_2.setFocusedComment)(_this.props.comment.localId, {\n                updatePinnedComment: true,\n                forceFocus: true\n            }));\n        };\n        var top = this.props.layout.getCommentPosition(this.props.comment.localId);\n        return (react_1[\"default\"].createElement(focus_trap_react_1[\"default\"], { focusTrapOptions: {\n                preventScroll: true,\n                clickOutsideDeactivates: true,\n                onDeactivate: function () {\n                    _this.props.store.dispatch((0, comments_2.setFocusedComment)(null, {\n                        updatePinnedComment: true,\n                        forceFocus: false\n                    }));\n                },\n                initialFocus: '[data-focus-target=\"true\"]',\n                delayFocus: false\n            }, active: this.props.isFocused && this.props.forceFocus },\n            react_1[\"default\"].createElement(\"li\", { tabIndex: -1, \"data-focus-target\": this.props.isFocused &&\n                    !['creating', 'editing'].includes(this.props.comment.mode), key: this.props.comment.localId, className: \"comment comment--mode-\".concat(this.props.comment.mode, \" \").concat(this.props.isFocused ? 'comment--focused' : ''), style: {\n                    position: 'absolute',\n                    top: \"\".concat(top, \"px\"),\n                    display: this.props.isVisible ? 'block' : 'none'\n                }, \"data-comment-id\": this.props.comment.localId, onClick: onClick, onDoubleClick: onDoubleClick }, inner)));\n    };\n    CommentComponent.prototype.componentDidMount = function () {\n        // eslint-disable-next-line react/no-find-dom-node\n        var element = react_dom_1[\"default\"].findDOMNode(this);\n        if (element instanceof HTMLElement) {\n            this.props.layout.setCommentElement(this.props.comment.localId, element);\n            if (this.props.isVisible) {\n                this.props.layout.setCommentHeight(this.props.comment.localId, element.offsetHeight);\n            }\n        }\n    };\n    CommentComponent.prototype.componentWillUnmount = function () {\n        this.props.layout.setCommentElement(this.props.comment.localId, null);\n    };\n    CommentComponent.prototype.componentDidUpdate = function () {\n        // eslint-disable-next-line react/no-find-dom-node\n        var element = react_dom_1[\"default\"].findDOMNode(this);\n        // Keep height up to date so that other comments will be moved out of the way\n        if (this.props.isVisible && element instanceof HTMLElement) {\n            this.props.layout.setCommentHeight(this.props.comment.localId, element.offsetHeight);\n        }\n    };\n    return CommentComponent;\n}(react_1[\"default\"].Component));\nexports[\"default\"] = CommentComponent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/components/Comment/index.tsx\n");

/***/ }),

/***/ "./client/src/components/CommentApp/components/CommentHeader/index.tsx":
/*!*****************************************************************************!*\
  !*** ./client/src/components/CommentApp/components/CommentHeader/index.tsx ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.CommentHeader = void 0;\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"./node_modules/react/index-exposed.js\"));\nvar gettext_1 = __webpack_require__(/*! ../../../../utils/gettext */ \"./client/src/utils/gettext.ts\");\nvar Icon_1 = __importDefault(__webpack_require__(/*! ../../../Icon/Icon */ \"./client/src/components/Icon/Icon.tsx\"));\nvar dateOptions = {\n    dateStyle: 'medium',\n    timeStyle: 'short'\n};\nvar dateTimeFormat = new Intl.DateTimeFormat([], dateOptions);\nvar CommentHeader = function (_a) {\n    var commentReply = _a.commentReply, store = _a.store, onResolve = _a.onResolve, onEdit = _a.onEdit, onDelete = _a.onDelete, descriptionId = _a.descriptionId, focused = _a.focused;\n    var author = commentReply.author, date = commentReply.date;\n    var onClickResolve = function (e) {\n        e.preventDefault();\n        if (onResolve) {\n            onResolve(commentReply, store);\n        }\n    };\n    var onClickEdit = function (e) { return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            e.preventDefault();\n            if (onEdit) {\n                onEdit(commentReply, store);\n            }\n            return [2 /*return*/];\n        });\n    }); };\n    var onClickDelete = function (e) { return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            e.preventDefault();\n            if (onDelete) {\n                onDelete(commentReply, store);\n            }\n            return [2 /*return*/];\n        });\n    }); };\n    var _b = __read((0, react_1.useState)(false), 2), menuOpen = _b[0], setMenuOpen = _b[1];\n    (0, react_1.useEffect)(function () {\n        if (menuOpen && !focused) {\n            setMenuOpen(false);\n        }\n    }, [focused]);\n    var menuRef = (0, react_1.useRef)(null);\n    var menuContainerRef = (0, react_1.useRef)(null);\n    var toggleMenu = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setMenuOpen(!menuOpen);\n    };\n    (0, react_1.useEffect)(function () {\n        if (menuOpen) {\n            setTimeout(function () { var _a; return (_a = menuRef.current) === null || _a === void 0 ? void 0 : _a.focus(); }, 1);\n        }\n    }, [menuOpen]);\n    var handleClickOutside = function (e) {\n        if (menuContainerRef.current &&\n            e.target instanceof Node &&\n            !menuContainerRef.current.contains(e.target)) {\n            setMenuOpen(false);\n        }\n    };\n    (0, react_1.useEffect)(function () {\n        document.addEventListener('click', handleClickOutside, true);\n        return function () {\n            document.removeEventListener('click', handleClickOutside, true);\n        };\n    }, []);\n    var dateISO = new Date(date).toISOString();\n    return (react_1[\"default\"].createElement(\"div\", { className: \"comment-header\" },\n        react_1[\"default\"].createElement(\"div\", { className: \"comment-header__actions\" }, (onEdit || onDelete || onResolve) && (react_1[\"default\"].createElement(\"div\", { className: \"comment-header__action comment-header__action--more\", ref: menuContainerRef },\n            react_1[\"default\"].createElement(\"details\", { open: menuOpen, onClick: toggleMenu },\n                react_1[\"default\"].createElement(\"summary\", { \"aria-label\": (0, gettext_1.gettext)('More actions'), \"aria-haspopup\": \"menu\", role: \"button\", onClick: toggleMenu, \"aria-expanded\": menuOpen },\n                    react_1[\"default\"].createElement(Icon_1[\"default\"], { name: \"ellipsis-v\" })),\n                react_1[\"default\"].createElement(\"div\", { className: \"comment-header__more-actions\", role: \"menu\", ref: menuRef },\n                    onEdit && (react_1[\"default\"].createElement(\"button\", { type: \"button\", role: \"menuitem\", onClick: onClickEdit }, (0, gettext_1.gettext)('Edit'))),\n                    onDelete && (react_1[\"default\"].createElement(\"button\", { type: \"button\", role: \"menuitem\", onClick: onClickDelete }, (0, gettext_1.gettext)('Delete'))),\n                    onResolve && (react_1[\"default\"].createElement(\"button\", { type: \"button\", role: \"menuitem\", onClick: onClickResolve }, (0, gettext_1.gettext)('Resolve')))))))),\n        author && author.avatarUrl && (react_1[\"default\"].createElement(\"img\", { className: \"comment-header__avatar\", src: author.avatarUrl, alt: \"\", decoding: \"async\", loading: \"lazy\" })),\n        react_1[\"default\"].createElement(\"span\", { id: descriptionId },\n            react_1[\"default\"].createElement(\"p\", { className: \"comment-header__author\" }, author ? author.name : ''),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment-header__date\" },\n                react_1[\"default\"].createElement(\"time\", { dateTime: dateISO }, dateTimeFormat.format(date))))));\n};\nexports.CommentHeader = CommentHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/components/CommentHeader/index.tsx\n");

/***/ }),

/***/ "./client/src/components/CommentApp/components/CommentReply/index.tsx":
/*!****************************************************************************!*\
  !*** ./client/src/components/CommentApp/components/CommentReply/index.tsx ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.saveCommentReply = void 0;\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"./node_modules/react/index-exposed.js\"));\nvar gettext_1 = __webpack_require__(/*! ../../../../utils/gettext */ \"./client/src/utils/gettext.ts\");\nvar comments_1 = __webpack_require__(/*! ../../actions/comments */ \"./client/src/components/CommentApp/actions/comments.ts\");\nvar CommentHeader_1 = __webpack_require__(/*! ../CommentHeader */ \"./client/src/components/CommentApp/components/CommentHeader/index.tsx\");\nvar TextArea_1 = __importDefault(__webpack_require__(/*! ../TextArea */ \"./client/src/components/CommentApp/components/TextArea/index.tsx\"));\nvar Icon_1 = __importDefault(__webpack_require__(/*! ../../../Icon/Icon */ \"./client/src/components/Icon/Icon.tsx\"));\nfunction saveCommentReply(comment, reply, store) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                mode: 'saving'\n            }));\n            try {\n                store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                    mode: 'default',\n                    text: reply.newText,\n                    author: reply.author\n                }));\n            }\n            catch (err) {\n                /* eslint-disable-next-line no-console */\n                console.error(err);\n                store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                    mode: 'save_error'\n                }));\n            }\n            return [2 /*return*/];\n        });\n    });\n}\nexports.saveCommentReply = saveCommentReply;\nfunction deleteCommentReply(comment, reply, store) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                mode: 'deleting'\n            }));\n            try {\n                store.dispatch((0, comments_1.deleteReply)(comment.localId, reply.localId));\n            }\n            catch (err) {\n                store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                    mode: 'delete_error'\n                }));\n            }\n            return [2 /*return*/];\n        });\n    });\n}\nvar CommentReplyComponent = /** @class */ (function (_super) {\n    __extends(CommentReplyComponent, _super);\n    function CommentReplyComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CommentReplyComponent.prototype.renderEditing = function () {\n        var _this = this;\n        var _a = this.props, comment = _a.comment, reply = _a.reply, store = _a.store, isFocused = _a.isFocused;\n        var onChangeText = function (value) {\n            store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                newText: value\n            }));\n        };\n        var onSave = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        e.preventDefault();\n                        return [4 /*yield*/, saveCommentReply(comment, reply, store)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        var onCancel = function (e) {\n            e.preventDefault();\n            store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                mode: 'default',\n                newText: reply.text\n            }));\n        };\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: reply, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"form\", { onSubmit: onSave },\n                react_1[\"default\"].createElement(TextArea_1[\"default\"], { className: \"comment-reply__input\", value: reply.newText, onChange: onChangeText }),\n                react_1[\"default\"].createElement(\"div\", { className: \"comment-reply__actions\" },\n                    react_1[\"default\"].createElement(\"button\", { type: \"submit\", disabled: reply.newText.length === 0, className: \"comment-reply__button comment-reply__button--primary\" }, (0, gettext_1.gettext)('Save')),\n                    react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment-reply__button\", onClick: onCancel }, (0, gettext_1.gettext)('Cancel'))))));\n    };\n    CommentReplyComponent.prototype.renderSaving = function () {\n        var _a = this.props, reply = _a.reply, store = _a.store, isFocused = _a.isFocused;\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: reply, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment-reply__text\" }, reply.text),\n            react_1[\"default\"].createElement(\"div\", { className: \"comment-reply__progress\" }, (0, gettext_1.gettext)('Saving...'))));\n    };\n    CommentReplyComponent.prototype.renderSaveError = function () {\n        var _this = this;\n        var _a = this.props, comment = _a.comment, reply = _a.reply, store = _a.store, isFocused = _a.isFocused;\n        var onClickRetry = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        e.preventDefault();\n                        return [4 /*yield*/, saveCommentReply(comment, reply, store)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: reply, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment-reply__text\" }, reply.text),\n            react_1[\"default\"].createElement(\"div\", { className: \"comment-reply__error\" },\n                (0, gettext_1.gettext)('Save error'),\n                react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment-reply__button\", onClick: onClickRetry }, (0, gettext_1.gettext)('Retry')))));\n    };\n    CommentReplyComponent.prototype.renderDeleteConfirm = function () {\n        var _this = this;\n        var _a = this.props, comment = _a.comment, reply = _a.reply, store = _a.store, isFocused = _a.isFocused;\n        var onClickDelete = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        e.preventDefault();\n                        return [4 /*yield*/, deleteCommentReply(comment, reply, store)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        var onClickCancel = function (e) {\n            e.preventDefault();\n            store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                mode: 'default'\n            }));\n        };\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: reply, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment-reply__text\" }, reply.text),\n            react_1[\"default\"].createElement(\"div\", { className: \"comment-reply__confirm-delete\" },\n                (0, gettext_1.gettext)('Are you sure?'),\n                react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment-reply__button\", onClick: onClickCancel }, (0, gettext_1.gettext)('Cancel')),\n                react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment-reply__button comment-reply__button--primary\", onClick: onClickDelete }, (0, gettext_1.gettext)('Delete')))));\n    };\n    CommentReplyComponent.prototype.renderDeleting = function () {\n        var _a = this.props, reply = _a.reply, store = _a.store, isFocused = _a.isFocused;\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: reply, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment-reply__text\" }, reply.text),\n            react_1[\"default\"].createElement(\"div\", { className: \"comment-reply__progress\" }, (0, gettext_1.gettext)('Deleting'))));\n    };\n    CommentReplyComponent.prototype.renderDeleteError = function () {\n        var _this = this;\n        var _a = this.props, comment = _a.comment, reply = _a.reply, store = _a.store, isFocused = _a.isFocused;\n        var onClickRetry = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        e.preventDefault();\n                        return [4 /*yield*/, deleteCommentReply(comment, reply, store)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        var onClickCancel = function (e) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                e.preventDefault();\n                store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                    mode: 'default'\n                }));\n                return [2 /*return*/];\n            });\n        }); };\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: reply, store: store, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment-reply__text\" }, reply.text),\n            react_1[\"default\"].createElement(\"div\", { className: \"comment-reply__error\" },\n                (0, gettext_1.gettext)('Delete error'),\n                react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment-reply__button\", onClick: onClickCancel }, (0, gettext_1.gettext)('Cancel')),\n                react_1[\"default\"].createElement(\"button\", { type: \"button\", className: \"comment-reply__button\", onClick: onClickRetry }, (0, gettext_1.gettext)('Retry')))));\n    };\n    CommentReplyComponent.prototype.renderDefault = function () {\n        var _a = this.props, comment = _a.comment, reply = _a.reply, store = _a.store, isFocused = _a.isFocused;\n        // Show edit/delete buttons if this reply was authored by the current user\n        var onEdit;\n        var onDelete;\n        if (reply.author === null ||\n            (this.props.user && this.props.user.id === reply.author.id)) {\n            onEdit = function () {\n                store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                    mode: 'editing',\n                    newText: reply.text\n                }));\n            };\n            onDelete = function () {\n                store.dispatch((0, comments_1.updateReply)(comment.localId, reply.localId, {\n                    mode: 'delete_confirm'\n                }));\n            };\n        }\n        var notice = '';\n        if (!reply.remoteId || reply.text !== reply.originalText) {\n            // Save the page to save this reply\n            notice = (0, gettext_1.gettext)('Save the page to save this reply');\n        }\n        return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n            react_1[\"default\"].createElement(CommentHeader_1.CommentHeader, { commentReply: reply, store: store, onEdit: onEdit, onDelete: onDelete, focused: isFocused }),\n            react_1[\"default\"].createElement(\"p\", { className: \"comment-reply__text\" }, reply.text),\n            notice && (react_1[\"default\"].createElement(\"div\", { className: \"comment__notice-placeholder\" },\n                react_1[\"default\"].createElement(\"div\", { className: \"comment__notice\", role: \"status\" },\n                    react_1[\"default\"].createElement(Icon_1[\"default\"], { name: \"info-circle\" }),\n                    notice)))));\n    };\n    CommentReplyComponent.prototype.render = function () {\n        var inner;\n        switch (this.props.reply.mode) {\n            case 'editing':\n                inner = this.renderEditing();\n                break;\n            case 'saving':\n                inner = this.renderSaving();\n                break;\n            case 'save_error':\n                inner = this.renderSaveError();\n                break;\n            case 'delete_confirm':\n                inner = this.renderDeleteConfirm();\n                break;\n            case 'deleting':\n                inner = this.renderDeleting();\n                break;\n            case 'delete_error':\n                inner = this.renderDeleteError();\n                break;\n            default:\n                inner = this.renderDefault();\n                break;\n        }\n        return (react_1[\"default\"].createElement(\"li\", { key: this.props.reply.localId, className: \"comment-reply comment-reply--mode-\".concat(this.props.reply.mode), \"data-reply-id\": this.props.reply.localId }, inner));\n    };\n    return CommentReplyComponent;\n}(react_1[\"default\"].Component));\nexports[\"default\"] = CommentReplyComponent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/components/CommentReply/index.tsx\n");

/***/ }),

/***/ "./client/src/components/CommentApp/components/Form/index.tsx":
/*!********************************************************************!*\
  !*** ./client/src/components/CommentApp/components/Form/index.tsx ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.CommentFormSetComponent = exports.CommentFormComponent = exports.CommentReplyFormSetComponent = exports.CommentReplyFormComponent = void 0;\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"./node_modules/react/index-exposed.js\"));\nfunction PrefixedHiddenInput(_a) {\n    var prefix = _a.prefix, value = _a.value, fieldName = _a.fieldName;\n    return (react_1[\"default\"].createElement(\"input\", { type: \"hidden\", name: \"\".concat(prefix, \"-\").concat(fieldName), value: value === null ? '' : value, id: \"id_\".concat(prefix, \"-\").concat(fieldName) }));\n}\nfunction CommentReplyFormComponent(_a) {\n    var reply = _a.reply, formNumber = _a.formNumber, prefix = _a.prefix;\n    var fullPrefix = \"\".concat(prefix, \"-\").concat(formNumber);\n    return (react_1[\"default\"].createElement(\"fieldset\", null,\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"DELETE\", value: reply.deleted ? 1 : '', prefix: fullPrefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"id\", value: reply.remoteId, prefix: fullPrefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"text\", value: reply.text, prefix: fullPrefix })));\n}\nexports.CommentReplyFormComponent = CommentReplyFormComponent;\nfunction CommentReplyFormSetComponent(_a) {\n    var replies = _a.replies, prefix = _a.prefix, remoteReplyCount = _a.remoteReplyCount;\n    var fullPrefix = \"\".concat(prefix, \"-replies\");\n    var commentForms = replies.map(function (reply, formNumber) { return (react_1[\"default\"].createElement(CommentReplyFormComponent, { key: reply.localId, formNumber: formNumber, reply: reply, prefix: fullPrefix })); });\n    return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"TOTAL_FORMS\", value: replies.length, prefix: fullPrefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"INITIAL_FORMS\", value: remoteReplyCount, prefix: fullPrefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"MIN_NUM_FORMS\", value: \"0\", prefix: fullPrefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"MAX_NUM_FORMS\", value: \"\", prefix: fullPrefix }),\n        commentForms));\n}\nexports.CommentReplyFormSetComponent = CommentReplyFormSetComponent;\nfunction CommentFormComponent(_a) {\n    var comment = _a.comment, formNumber = _a.formNumber, prefix = _a.prefix;\n    var fullPrefix = \"\".concat(prefix, \"-\").concat(formNumber);\n    return (react_1[\"default\"].createElement(\"fieldset\", null,\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"DELETE\", value: comment.deleted ? 1 : '', prefix: fullPrefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"resolved\", value: comment.resolved ? 1 : '', prefix: fullPrefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"id\", value: comment.remoteId, prefix: fullPrefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"contentpath\", value: comment.contentpath, prefix: fullPrefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"text\", value: comment.text, prefix: fullPrefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"position\", value: comment.position, prefix: fullPrefix }),\n        react_1[\"default\"].createElement(CommentReplyFormSetComponent, { replies: Array.from(comment.replies.values()), prefix: fullPrefix, remoteReplyCount: comment.remoteReplyCount })));\n}\nexports.CommentFormComponent = CommentFormComponent;\nfunction CommentFormSetComponent(_a) {\n    var comments = _a.comments, remoteCommentCount = _a.remoteCommentCount;\n    var prefix = 'comments';\n    var commentForms = comments.map(function (comment, formNumber) { return (react_1[\"default\"].createElement(CommentFormComponent, { key: comment.localId, comment: comment, formNumber: formNumber, prefix: prefix })); });\n    return (react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"TOTAL_FORMS\", value: comments.length, prefix: prefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"INITIAL_FORMS\", value: remoteCommentCount, prefix: prefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"MIN_NUM_FORMS\", value: \"0\", prefix: prefix }),\n        react_1[\"default\"].createElement(PrefixedHiddenInput, { fieldName: \"MAX_NUM_FORMS\", value: \"\", prefix: prefix }),\n        commentForms));\n}\nexports.CommentFormSetComponent = CommentFormSetComponent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9jb21wb25lbnRzL0Zvcm0vaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9jb21wb25lbnRzL0Zvcm0vaW5kZXgudHN4P2ZhY2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5Db21tZW50Rm9ybVNldENvbXBvbmVudCA9IGV4cG9ydHMuQ29tbWVudEZvcm1Db21wb25lbnQgPSBleHBvcnRzLkNvbW1lbnRSZXBseUZvcm1TZXRDb21wb25lbnQgPSBleHBvcnRzLkNvbW1lbnRSZXBseUZvcm1Db21wb25lbnQgPSB2b2lkIDA7XG52YXIgcmVhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwicmVhY3RcIikpO1xuZnVuY3Rpb24gUHJlZml4ZWRIaWRkZW5JbnB1dChfYSkge1xuICAgIHZhciBwcmVmaXggPSBfYS5wcmVmaXgsIHZhbHVlID0gX2EudmFsdWUsIGZpZWxkTmFtZSA9IF9hLmZpZWxkTmFtZTtcbiAgICByZXR1cm4gKHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7IHR5cGU6IFwiaGlkZGVuXCIsIG5hbWU6IFwiXCIuY29uY2F0KHByZWZpeCwgXCItXCIpLmNvbmNhdChmaWVsZE5hbWUpLCB2YWx1ZTogdmFsdWUgPT09IG51bGwgPyAnJyA6IHZhbHVlLCBpZDogXCJpZF9cIi5jb25jYXQocHJlZml4LCBcIi1cIikuY29uY2F0KGZpZWxkTmFtZSkgfSkpO1xufVxuZnVuY3Rpb24gQ29tbWVudFJlcGx5Rm9ybUNvbXBvbmVudChfYSkge1xuICAgIHZhciByZXBseSA9IF9hLnJlcGx5LCBmb3JtTnVtYmVyID0gX2EuZm9ybU51bWJlciwgcHJlZml4ID0gX2EucHJlZml4O1xuICAgIHZhciBmdWxsUHJlZml4ID0gXCJcIi5jb25jYXQocHJlZml4LCBcIi1cIikuY29uY2F0KGZvcm1OdW1iZXIpO1xuICAgIHJldHVybiAocmVhY3RfMVtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIsIG51bGwsXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwiREVMRVRFXCIsIHZhbHVlOiByZXBseS5kZWxldGVkID8gMSA6ICcnLCBwcmVmaXg6IGZ1bGxQcmVmaXggfSksXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwiaWRcIiwgdmFsdWU6IHJlcGx5LnJlbW90ZUlkLCBwcmVmaXg6IGZ1bGxQcmVmaXggfSksXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwidGV4dFwiLCB2YWx1ZTogcmVwbHkudGV4dCwgcHJlZml4OiBmdWxsUHJlZml4IH0pKSk7XG59XG5leHBvcnRzLkNvbW1lbnRSZXBseUZvcm1Db21wb25lbnQgPSBDb21tZW50UmVwbHlGb3JtQ29tcG9uZW50O1xuZnVuY3Rpb24gQ29tbWVudFJlcGx5Rm9ybVNldENvbXBvbmVudChfYSkge1xuICAgIHZhciByZXBsaWVzID0gX2EucmVwbGllcywgcHJlZml4ID0gX2EucHJlZml4LCByZW1vdGVSZXBseUNvdW50ID0gX2EucmVtb3RlUmVwbHlDb3VudDtcbiAgICB2YXIgZnVsbFByZWZpeCA9IFwiXCIuY29uY2F0KHByZWZpeCwgXCItcmVwbGllc1wiKTtcbiAgICB2YXIgY29tbWVudEZvcm1zID0gcmVwbGllcy5tYXAoZnVuY3Rpb24gKHJlcGx5LCBmb3JtTnVtYmVyKSB7IHJldHVybiAocmVhY3RfMVtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChDb21tZW50UmVwbHlGb3JtQ29tcG9uZW50LCB7IGtleTogcmVwbHkubG9jYWxJZCwgZm9ybU51bWJlcjogZm9ybU51bWJlciwgcmVwbHk6IHJlcGx5LCBwcmVmaXg6IGZ1bGxQcmVmaXggfSkpOyB9KTtcbiAgICByZXR1cm4gKHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQocmVhY3RfMVtcImRlZmF1bHRcIl0uRnJhZ21lbnQsIG51bGwsXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwiVE9UQUxfRk9STVNcIiwgdmFsdWU6IHJlcGxpZXMubGVuZ3RoLCBwcmVmaXg6IGZ1bGxQcmVmaXggfSksXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwiSU5JVElBTF9GT1JNU1wiLCB2YWx1ZTogcmVtb3RlUmVwbHlDb3VudCwgcHJlZml4OiBmdWxsUHJlZml4IH0pLFxuICAgICAgICByZWFjdF8xW1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFByZWZpeGVkSGlkZGVuSW5wdXQsIHsgZmllbGROYW1lOiBcIk1JTl9OVU1fRk9STVNcIiwgdmFsdWU6IFwiMFwiLCBwcmVmaXg6IGZ1bGxQcmVmaXggfSksXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwiTUFYX05VTV9GT1JNU1wiLCB2YWx1ZTogXCJcIiwgcHJlZml4OiBmdWxsUHJlZml4IH0pLFxuICAgICAgICBjb21tZW50Rm9ybXMpKTtcbn1cbmV4cG9ydHMuQ29tbWVudFJlcGx5Rm9ybVNldENvbXBvbmVudCA9IENvbW1lbnRSZXBseUZvcm1TZXRDb21wb25lbnQ7XG5mdW5jdGlvbiBDb21tZW50Rm9ybUNvbXBvbmVudChfYSkge1xuICAgIHZhciBjb21tZW50ID0gX2EuY29tbWVudCwgZm9ybU51bWJlciA9IF9hLmZvcm1OdW1iZXIsIHByZWZpeCA9IF9hLnByZWZpeDtcbiAgICB2YXIgZnVsbFByZWZpeCA9IFwiXCIuY29uY2F0KHByZWZpeCwgXCItXCIpLmNvbmNhdChmb3JtTnVtYmVyKTtcbiAgICByZXR1cm4gKHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiLCBudWxsLFxuICAgICAgICByZWFjdF8xW1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFByZWZpeGVkSGlkZGVuSW5wdXQsIHsgZmllbGROYW1lOiBcIkRFTEVURVwiLCB2YWx1ZTogY29tbWVudC5kZWxldGVkID8gMSA6ICcnLCBwcmVmaXg6IGZ1bGxQcmVmaXggfSksXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwicmVzb2x2ZWRcIiwgdmFsdWU6IGNvbW1lbnQucmVzb2x2ZWQgPyAxIDogJycsIHByZWZpeDogZnVsbFByZWZpeCB9KSxcbiAgICAgICAgcmVhY3RfMVtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChQcmVmaXhlZEhpZGRlbklucHV0LCB7IGZpZWxkTmFtZTogXCJpZFwiLCB2YWx1ZTogY29tbWVudC5yZW1vdGVJZCwgcHJlZml4OiBmdWxsUHJlZml4IH0pLFxuICAgICAgICByZWFjdF8xW1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFByZWZpeGVkSGlkZGVuSW5wdXQsIHsgZmllbGROYW1lOiBcImNvbnRlbnRwYXRoXCIsIHZhbHVlOiBjb21tZW50LmNvbnRlbnRwYXRoLCBwcmVmaXg6IGZ1bGxQcmVmaXggfSksXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwidGV4dFwiLCB2YWx1ZTogY29tbWVudC50ZXh0LCBwcmVmaXg6IGZ1bGxQcmVmaXggfSksXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwicG9zaXRpb25cIiwgdmFsdWU6IGNvbW1lbnQucG9zaXRpb24sIHByZWZpeDogZnVsbFByZWZpeCB9KSxcbiAgICAgICAgcmVhY3RfMVtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChDb21tZW50UmVwbHlGb3JtU2V0Q29tcG9uZW50LCB7IHJlcGxpZXM6IEFycmF5LmZyb20oY29tbWVudC5yZXBsaWVzLnZhbHVlcygpKSwgcHJlZml4OiBmdWxsUHJlZml4LCByZW1vdGVSZXBseUNvdW50OiBjb21tZW50LnJlbW90ZVJlcGx5Q291bnQgfSkpKTtcbn1cbmV4cG9ydHMuQ29tbWVudEZvcm1Db21wb25lbnQgPSBDb21tZW50Rm9ybUNvbXBvbmVudDtcbmZ1bmN0aW9uIENvbW1lbnRGb3JtU2V0Q29tcG9uZW50KF9hKSB7XG4gICAgdmFyIGNvbW1lbnRzID0gX2EuY29tbWVudHMsIHJlbW90ZUNvbW1lbnRDb3VudCA9IF9hLnJlbW90ZUNvbW1lbnRDb3VudDtcbiAgICB2YXIgcHJlZml4ID0gJ2NvbW1lbnRzJztcbiAgICB2YXIgY29tbWVudEZvcm1zID0gY29tbWVudHMubWFwKGZ1bmN0aW9uIChjb21tZW50LCBmb3JtTnVtYmVyKSB7IHJldHVybiAocmVhY3RfMVtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChDb21tZW50Rm9ybUNvbXBvbmVudCwgeyBrZXk6IGNvbW1lbnQubG9jYWxJZCwgY29tbWVudDogY29tbWVudCwgZm9ybU51bWJlcjogZm9ybU51bWJlciwgcHJlZml4OiBwcmVmaXggfSkpOyB9KTtcbiAgICByZXR1cm4gKHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQocmVhY3RfMVtcImRlZmF1bHRcIl0uRnJhZ21lbnQsIG51bGwsXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwiVE9UQUxfRk9STVNcIiwgdmFsdWU6IGNvbW1lbnRzLmxlbmd0aCwgcHJlZml4OiBwcmVmaXggfSksXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwiSU5JVElBTF9GT1JNU1wiLCB2YWx1ZTogcmVtb3RlQ29tbWVudENvdW50LCBwcmVmaXg6IHByZWZpeCB9KSxcbiAgICAgICAgcmVhY3RfMVtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChQcmVmaXhlZEhpZGRlbklucHV0LCB7IGZpZWxkTmFtZTogXCJNSU5fTlVNX0ZPUk1TXCIsIHZhbHVlOiBcIjBcIiwgcHJlZml4OiBwcmVmaXggfSksXG4gICAgICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUHJlZml4ZWRIaWRkZW5JbnB1dCwgeyBmaWVsZE5hbWU6IFwiTUFYX05VTV9GT1JNU1wiLCB2YWx1ZTogXCJcIiwgcHJlZml4OiBwcmVmaXggfSksXG4gICAgICAgIGNvbW1lbnRGb3JtcykpO1xufVxuZXhwb3J0cy5Db21tZW50Rm9ybVNldENvbXBvbmVudCA9IENvbW1lbnRGb3JtU2V0Q29tcG9uZW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/components/Form/index.tsx\n");

/***/ }),

/***/ "./client/src/components/CommentApp/components/TextArea/index.tsx":
/*!************************************************************************!*\
  !*** ./client/src/components/CommentApp/components/TextArea/index.tsx ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"./node_modules/react/index-exposed.js\"));\nvar TextArea = react_1[\"default\"].forwardRef(function (_a, ref) {\n    var value = _a.value, className = _a.className, placeholder = _a.placeholder, onChange = _a.onChange, focusOnMount = _a.focusOnMount, _b = _a.focusTarget, focusTarget = _b === void 0 ? false : _b, _c = _a.additionalAttributes, additionalAttributes = _c === void 0 ? {} : _c;\n    var onChangeValue = function (e) {\n        if (onChange) {\n            onChange(e.target.value);\n        }\n    };\n    // Resize the textarea whenever the value is changed\n    var textAreaElement = react_1[\"default\"].useRef(null);\n    react_1[\"default\"].useImperativeHandle(ref, function () { return textAreaElement.current; });\n    react_1[\"default\"].useEffect(function () {\n        if (textAreaElement.current) {\n            textAreaElement.current.style.height = '';\n            textAreaElement.current.style.height =\n                textAreaElement.current.scrollHeight + 'px';\n        }\n    }, [value, textAreaElement]);\n    // Focus the textarea when it is mounted\n    react_1[\"default\"].useEffect(function () {\n        if (focusOnMount && textAreaElement.current) {\n            textAreaElement.current.focus();\n        }\n    }, [textAreaElement]);\n    return (react_1[\"default\"].createElement(\"textarea\", __assign({ \"data-focus-target\": focusTarget, rows: 1, style: { resize: 'none', overflowY: 'hidden' }, className: className, placeholder: placeholder, ref: textAreaElement, onChange: onChangeValue, value: value }, additionalAttributes)));\n});\nexports[\"default\"] = TextArea;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9jb21wb25lbnRzL1RleHRBcmVhL2luZGV4LnRzeC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9jb21wb25lbnRzL1RleHRBcmVhL2luZGV4LnRzeD84ZmU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG52YXIgcmVhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwicmVhY3RcIikpO1xudmFyIFRleHRBcmVhID0gcmVhY3RfMVtcImRlZmF1bHRcIl0uZm9yd2FyZFJlZihmdW5jdGlvbiAoX2EsIHJlZikge1xuICAgIHZhciB2YWx1ZSA9IF9hLnZhbHVlLCBjbGFzc05hbWUgPSBfYS5jbGFzc05hbWUsIHBsYWNlaG9sZGVyID0gX2EucGxhY2Vob2xkZXIsIG9uQ2hhbmdlID0gX2Eub25DaGFuZ2UsIGZvY3VzT25Nb3VudCA9IF9hLmZvY3VzT25Nb3VudCwgX2IgPSBfYS5mb2N1c1RhcmdldCwgZm9jdXNUYXJnZXQgPSBfYiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfYiwgX2MgPSBfYS5hZGRpdGlvbmFsQXR0cmlidXRlcywgYWRkaXRpb25hbEF0dHJpYnV0ZXMgPSBfYyA9PT0gdm9pZCAwID8ge30gOiBfYztcbiAgICB2YXIgb25DaGFuZ2VWYWx1ZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGlmIChvbkNoYW5nZSkge1xuICAgICAgICAgICAgb25DaGFuZ2UoZS50YXJnZXQudmFsdWUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvLyBSZXNpemUgdGhlIHRleHRhcmVhIHdoZW5ldmVyIHRoZSB2YWx1ZSBpcyBjaGFuZ2VkXG4gICAgdmFyIHRleHRBcmVhRWxlbWVudCA9IHJlYWN0XzFbXCJkZWZhdWx0XCJdLnVzZVJlZihudWxsKTtcbiAgICByZWFjdF8xW1wiZGVmYXVsdFwiXS51c2VJbXBlcmF0aXZlSGFuZGxlKHJlZiwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGV4dEFyZWFFbGVtZW50LmN1cnJlbnQ7IH0pO1xuICAgIHJlYWN0XzFbXCJkZWZhdWx0XCJdLnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0ZXh0QXJlYUVsZW1lbnQuY3VycmVudCkge1xuICAgICAgICAgICAgdGV4dEFyZWFFbGVtZW50LmN1cnJlbnQuc3R5bGUuaGVpZ2h0ID0gJyc7XG4gICAgICAgICAgICB0ZXh0QXJlYUVsZW1lbnQuY3VycmVudC5zdHlsZS5oZWlnaHQgPVxuICAgICAgICAgICAgICAgIHRleHRBcmVhRWxlbWVudC5jdXJyZW50LnNjcm9sbEhlaWdodCArICdweCc7XG4gICAgICAgIH1cbiAgICB9LCBbdmFsdWUsIHRleHRBcmVhRWxlbWVudF0pO1xuICAgIC8vIEZvY3VzIHRoZSB0ZXh0YXJlYSB3aGVuIGl0IGlzIG1vdW50ZWRcbiAgICByZWFjdF8xW1wiZGVmYXVsdFwiXS51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoZm9jdXNPbk1vdW50ICYmIHRleHRBcmVhRWxlbWVudC5jdXJyZW50KSB7XG4gICAgICAgICAgICB0ZXh0QXJlYUVsZW1lbnQuY3VycmVudC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgfSwgW3RleHRBcmVhRWxlbWVudF0pO1xuICAgIHJldHVybiAocmVhY3RfMVtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIsIF9fYXNzaWduKHsgXCJkYXRhLWZvY3VzLXRhcmdldFwiOiBmb2N1c1RhcmdldCwgcm93czogMSwgc3R5bGU6IHsgcmVzaXplOiAnbm9uZScsIG92ZXJmbG93WTogJ2hpZGRlbicgfSwgY2xhc3NOYW1lOiBjbGFzc05hbWUsIHBsYWNlaG9sZGVyOiBwbGFjZWhvbGRlciwgcmVmOiB0ZXh0QXJlYUVsZW1lbnQsIG9uQ2hhbmdlOiBvbkNoYW5nZVZhbHVlLCB2YWx1ZTogdmFsdWUgfSwgYWRkaXRpb25hbEF0dHJpYnV0ZXMpKSk7XG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gVGV4dEFyZWE7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/components/TextArea/index.tsx\n");

/***/ }),

/***/ "./client/src/components/CommentApp/main.tsx":
/*!***************************************************!*\
  !*** ./client/src/components/CommentApp/main.tsx ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.initCommentApp = exports.CommentApp = void 0;\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"./node_modules/react/index-exposed.js\"));\nvar react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index-exposed.js\"));\nvar redux_1 = __webpack_require__(/*! redux */ \"./node_modules/redux/es/redux.js\");\nvar layout_1 = __webpack_require__(/*! ./utils/layout */ \"./client/src/components/CommentApp/utils/layout.ts\");\nvar maps_1 = __webpack_require__(/*! ./utils/maps */ \"./client/src/components/CommentApp/utils/maps.ts\");\nvar sequences_1 = __webpack_require__(/*! ./utils/sequences */ \"./client/src/components/CommentApp/utils/sequences.ts\");\nvar state_1 = __webpack_require__(/*! ./state */ \"./client/src/components/CommentApp/state/index.ts\");\nvar comments_1 = __webpack_require__(/*! ./state/comments */ \"./client/src/components/CommentApp/state/comments.ts\");\nvar comments_2 = __webpack_require__(/*! ./actions/comments */ \"./client/src/components/CommentApp/actions/comments.ts\");\nvar settings_1 = __webpack_require__(/*! ./actions/settings */ \"./client/src/components/CommentApp/actions/settings.ts\");\nvar selectors_1 = __webpack_require__(/*! ./selectors */ \"./client/src/components/CommentApp/selectors/index.ts\");\nvar Comment_1 = __importDefault(__webpack_require__(/*! ./components/Comment */ \"./client/src/components/CommentApp/components/Comment/index.tsx\"));\nvar Form_1 = __webpack_require__(/*! ./components/Form */ \"./client/src/components/CommentApp/components/Form/index.tsx\");\nvar settings_2 = __webpack_require__(/*! ./state/settings */ \"./client/src/components/CommentApp/state/settings.ts\");\n/* eslint-enable */\nvar getAuthor = function (authors, id) {\n    var authorData = (0, maps_1.getOrDefault)(authors, String(id), {\n        name: '',\n        avatar_url: ''\n    });\n    return {\n        id: id,\n        name: authorData.name,\n        avatarUrl: authorData.avatar_url\n    };\n};\nfunction renderCommentsUi(store, layout, comments) {\n    var state = store.getState();\n    var _a = state.settings, commentsEnabled = _a.commentsEnabled, user = _a.user, currentTab = _a.currentTab;\n    var _b = state.comments, focusedComment = _b.focusedComment, forceFocus = _b.forceFocus;\n    var commentsToRender = comments;\n    if (!commentsEnabled || !user) {\n        commentsToRender = [];\n    }\n    // Hide all resolved/deleted comments\n    commentsToRender = commentsToRender.filter(function (_a) {\n        var deleted = _a.deleted, resolved = _a.resolved;\n        return !(deleted || resolved);\n    });\n    var commentsRendered = commentsToRender.map(function (comment) { return (react_1[\"default\"].createElement(Comment_1[\"default\"], { key: comment.localId, store: store, layout: layout, user: user, comment: comment, isFocused: comment.localId === focusedComment, forceFocus: forceFocus, isVisible: layout.getCommentVisible(currentTab, comment.localId) })); });\n    return react_1[\"default\"].createElement(\"ol\", { className: \"comments-list\" }, commentsRendered);\n    /* eslint-enable react/no-danger */\n}\nvar CommentApp = /** @class */ (function () {\n    function CommentApp() {\n        this.utils = {\n            selectCommentsForContentPathFactory: selectors_1.selectCommentsForContentPathFactory,\n            selectCommentFactory: selectors_1.selectCommentFactory\n        };\n        this.selectors = {\n            selectComments: selectors_1.selectComments,\n            selectEnabled: selectors_1.selectEnabled,\n            selectFocused: selectors_1.selectFocused,\n            selectIsDirty: selectors_1.selectIsDirty,\n            selectCommentCount: selectors_1.selectCommentCount\n        };\n        this.actions = comments_2.commentActionFunctions;\n        this.store = (0, redux_1.createStore)(state_1.reducer, {\n            settings: settings_2.INITIAL_STATE\n        });\n        this.layout = new layout_1.LayoutController();\n    }\n    CommentApp.prototype.setUser = function (userId, authors) {\n        this.store.dispatch((0, settings_1.updateGlobalSettings)({\n            user: getAuthor(authors, userId)\n        }));\n    };\n    CommentApp.prototype.updateAnnotation = function (annotation, commentId) {\n        this.attachAnnotationLayout(annotation, commentId);\n        this.store.dispatch((0, comments_2.updateComment)(commentId, { annotation: annotation }));\n    };\n    CommentApp.prototype.attachAnnotationLayout = function (annotation, commentId) {\n        // Attach an annotation to an existing comment in the layout\n        // const layout engine know the annotation so it would position the comment correctly\n        this.layout.setCommentAnnotation(commentId, annotation);\n    };\n    CommentApp.prototype.setCurrentTab = function (tab) {\n        this.store.dispatch((0, settings_1.updateGlobalSettings)({ currentTab: tab }));\n    };\n    CommentApp.prototype.makeComment = function (annotation, contentpath, position) {\n        if (position === void 0) { position = ''; }\n        var commentId = (0, sequences_1.getNextCommentId)();\n        this.attachAnnotationLayout(annotation, commentId);\n        // Create the comment\n        this.store.dispatch((0, comments_2.addComment)((0, comments_1.newComment)(contentpath, position, commentId, annotation, this.store.getState().settings.user, Date.now(), {\n            mode: 'creating'\n        })));\n        // Focus and pin the comment\n        this.store.dispatch((0, comments_2.setFocusedComment)(commentId, {\n            updatePinnedComment: true,\n            forceFocus: true\n        }));\n        return commentId;\n    };\n    CommentApp.prototype.setVisible = function (visible) {\n        this.store.dispatch((0, settings_1.updateGlobalSettings)({\n            commentsEnabled: visible\n        }));\n    };\n    CommentApp.prototype.invalidateContentPath = function (contentPath) {\n        // Called when a given content path on the form is no longer valid (eg, a block has been deleted)\n        this.store.dispatch((0, comments_2.invalidateContentPath)(contentPath));\n    };\n    CommentApp.prototype.updateContentPath = function (commentId, newContentPath) {\n        this.store.dispatch((0, comments_2.updateComment)(commentId, { contentpath: newContentPath }));\n    };\n    CommentApp.prototype.renderApp = function (element, outputElement, userId, initialComments, authors) {\n        var e_1, _a, e_2, _b;\n        var _this = this;\n        var pinnedComment = null;\n        this.setUser(userId, authors);\n        // Check if there is \"comment\" query parameter.\n        // If this is set, the user has clicked on a \"View on frontend\" link of an\n        // individual comment. We should focus this comment and scroll to it\n        var urlParams = new URLSearchParams(window.location.search);\n        var initialFocusedCommentId = null;\n        var commentParams = urlParams.get('comment');\n        if (commentParams) {\n            initialFocusedCommentId = parseInt(commentParams, 10);\n        }\n        var render = function () {\n            var state = _this.store.getState();\n            var commentList = Array.from(state.comments.comments.values());\n            react_dom_1[\"default\"].render(react_1[\"default\"].createElement(Form_1.CommentFormSetComponent, { comments: commentList.filter(function (comment) { return comment.mode !== 'creating'; }), remoteCommentCount: state.comments.remoteCommentCount }), outputElement);\n            // Check if the pinned comment has changed\n            if (state.comments.pinnedComment !== pinnedComment) {\n                // Tell layout controller about the pinned comment\n                // so it is moved alongside its annotation\n                _this.layout.setPinnedComment(state.comments.pinnedComment);\n                pinnedComment = state.comments.pinnedComment;\n            }\n            react_dom_1[\"default\"].render(renderCommentsUi(_this.store, _this.layout, commentList), element, function () {\n                // Render again if layout has changed (eg, a comment was added, deleted or resized)\n                // This will just update the \"top\" style attributes in the comments to get them to move\n                _this.layout.refreshDesiredPositions(state.settings.currentTab);\n                if (_this.layout.refreshLayout()) {\n                    react_dom_1[\"default\"].render(renderCommentsUi(_this.store, _this.layout, commentList), element);\n                }\n            });\n        };\n        try {\n            // Fetch existing comments\n            for (var initialComments_1 = __values(initialComments), initialComments_1_1 = initialComments_1.next(); !initialComments_1_1.done; initialComments_1_1 = initialComments_1.next()) {\n                var comment = initialComments_1_1.value;\n                var commentId = (0, sequences_1.getNextCommentId)();\n                // Create comment\n                this.store.dispatch((0, comments_2.addComment)((0, comments_1.newComment)(comment.contentpath, comment.position, commentId, null, getAuthor(authors, comment.user), Date.parse(comment.created_at), {\n                    remoteId: comment.pk,\n                    text: comment.text,\n                    deleted: comment.deleted,\n                    resolved: comment.resolved\n                })));\n                try {\n                    // Create replies\n                    for (var _c = (e_2 = void 0, __values(comment.replies)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var reply = _d.value;\n                        this.store.dispatch((0, comments_2.addReply)(commentId, (0, comments_1.newCommentReply)((0, sequences_1.getNextReplyId)(), getAuthor(authors, reply.user), Date.parse(reply.created_at), {\n                            remoteId: reply.pk,\n                            text: reply.text,\n                            deleted: reply.deleted\n                        })));\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_b = _c[\"return\"])) _b.call(_c);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                // If this is the initial focused comment. Focus and pin it\n                // TODO: Scroll to this comment\n                if (initialFocusedCommentId && comment.pk === initialFocusedCommentId) {\n                    this.store.dispatch((0, comments_2.setFocusedComment)(commentId, {\n                        updatePinnedComment: true,\n                        forceFocus: true\n                    }));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (initialComments_1_1 && !initialComments_1_1.done && (_a = initialComments_1[\"return\"])) _a.call(initialComments_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        render();\n        this.store.subscribe(render);\n        // Unfocus when document body is clicked\n        document.body.addEventListener('mousedown', function (e) {\n            if (e.target instanceof HTMLElement) {\n                // ignore if click target is a comment or an annotation\n                if (!e.target.closest('#comments, [data-annotation], [data-comment-add]')) {\n                    // Running store.dispatch directly here seems to prevent the event from being handled anywhere else\n                    setTimeout(function () {\n                        _this.store.dispatch((0, comments_2.setFocusedComment)(null, {\n                            updatePinnedComment: true,\n                            forceFocus: false\n                        }));\n                    }, 200);\n                }\n            }\n        });\n        document.body.addEventListener('commentAnchorVisibilityChange', function () {\n            // If any streamfield blocks or panels have collapsed or expanded\n            // check if we need to rerender\n            _this.layout.refreshDesiredPositions(_this.store.getState().settings.currentTab);\n            if (_this.layout.refreshLayout()) {\n                render();\n            }\n        });\n    };\n    return CommentApp;\n}());\nexports.CommentApp = CommentApp;\nfunction initCommentApp() {\n    return new CommentApp();\n}\nexports.initCommentApp = initCommentApp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/main.tsx\n");

/***/ }),

/***/ "./client/src/components/CommentApp/selectors/index.ts":
/*!*************************************************************!*\
  !*** ./client/src/components/CommentApp/selectors/index.ts ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nexports.__esModule = true;\nexports.selectCommentCount = exports.selectIsDirty = exports.selectEnabled = exports.selectCommentFactory = exports.selectCommentsForContentPathFactory = exports.selectRemoteCommentCount = exports.selectFocused = exports.selectComments = void 0;\nvar reselect_1 = __webpack_require__(/*! reselect */ \"./node_modules/reselect/es/index.js\");\nvar selectComments = function (state) { return state.comments.comments; };\nexports.selectComments = selectComments;\nvar selectFocused = function (state) { return state.comments.focusedComment; };\nexports.selectFocused = selectFocused;\nvar selectRemoteCommentCount = function (state) {\n    return state.comments.remoteCommentCount;\n};\nexports.selectRemoteCommentCount = selectRemoteCommentCount;\nfunction selectCommentsForContentPathFactory(contentpath) {\n    return (0, reselect_1.createSelector)(exports.selectComments, function (comments) {\n        return __spreadArray([], __read(comments.values()), false).filter(function (comment) {\n            return comment.contentpath === contentpath &&\n                !(comment.deleted || comment.resolved);\n        });\n    });\n}\nexports.selectCommentsForContentPathFactory = selectCommentsForContentPathFactory;\nfunction selectCommentFactory(localId) {\n    return (0, reselect_1.createSelector)(exports.selectComments, function (comments) {\n        var comment = comments.get(localId);\n        if (comment !== undefined && (comment.deleted || comment.resolved)) {\n            return undefined;\n        }\n        return comment;\n    });\n}\nexports.selectCommentFactory = selectCommentFactory;\nvar selectEnabled = function (state) { return state.settings.commentsEnabled; };\nexports.selectEnabled = selectEnabled;\nexports.selectIsDirty = (0, reselect_1.createSelector)(exports.selectComments, exports.selectRemoteCommentCount, function (comments, remoteCommentCount) {\n    if (remoteCommentCount !== comments.size) {\n        return true;\n    }\n    return Array.from(comments.values()).some(function (comment) {\n        if (comment.deleted ||\n            comment.resolved ||\n            comment.replies.size !== comment.remoteReplyCount ||\n            comment.originalText !== comment.text) {\n            return true;\n        }\n        return Array.from(comment.replies.values()).some(function (reply) { return reply.deleted || reply.originalText !== reply.text; });\n    });\n});\nvar selectCommentCount = function (state) {\n    return __spreadArray([], __read(state.comments.comments.values()), false).filter(function (comment) { return !comment.deleted && !comment.resolved; }).length;\n};\nexports.selectCommentCount = selectCommentCount;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9zZWxlY3RvcnMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWd0YWlsLy4vY2xpZW50L3NyYy9jb21wb25lbnRzL0NvbW1lbnRBcHAvc2VsZWN0b3JzL2luZGV4LnRzP2MwMzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19yZWFkID0gKHRoaXMgJiYgdGhpcy5fX3JlYWQpIHx8IGZ1bmN0aW9uIChvLCBuKSB7XG4gICAgdmFyIG0gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdO1xuICAgIGlmICghbSkgcmV0dXJuIG87XG4gICAgdmFyIGkgPSBtLmNhbGwobyksIHIsIGFyID0gW10sIGU7XG4gICAgdHJ5IHtcbiAgICAgICAgd2hpbGUgKChuID09PSB2b2lkIDAgfHwgbi0tID4gMCkgJiYgIShyID0gaS5uZXh0KCkpLmRvbmUpIGFyLnB1c2goci52YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikgeyBlID0geyBlcnJvcjogZXJyb3IgfTsgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHIgJiYgIXIuZG9uZSAmJiAobSA9IGlbXCJyZXR1cm5cIl0pKSBtLmNhbGwoaSk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlKSB0aHJvdyBlLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiBhcjtcbn07XG52YXIgX19zcHJlYWRBcnJheSA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheSkgfHwgZnVuY3Rpb24gKHRvLCBmcm9tLCBwYWNrKSB7XG4gICAgaWYgKHBhY2sgfHwgYXJndW1lbnRzLmxlbmd0aCA9PT0gMikgZm9yICh2YXIgaSA9IDAsIGwgPSBmcm9tLmxlbmd0aCwgYXI7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgaWYgKGFyIHx8ICEoaSBpbiBmcm9tKSkge1xuICAgICAgICAgICAgaWYgKCFhcikgYXIgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tLCAwLCBpKTtcbiAgICAgICAgICAgIGFyW2ldID0gZnJvbVtpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdG8uY29uY2F0KGFyIHx8IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20pKTtcbn07XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5zZWxlY3RDb21tZW50Q291bnQgPSBleHBvcnRzLnNlbGVjdElzRGlydHkgPSBleHBvcnRzLnNlbGVjdEVuYWJsZWQgPSBleHBvcnRzLnNlbGVjdENvbW1lbnRGYWN0b3J5ID0gZXhwb3J0cy5zZWxlY3RDb21tZW50c0ZvckNvbnRlbnRQYXRoRmFjdG9yeSA9IGV4cG9ydHMuc2VsZWN0UmVtb3RlQ29tbWVudENvdW50ID0gZXhwb3J0cy5zZWxlY3RGb2N1c2VkID0gZXhwb3J0cy5zZWxlY3RDb21tZW50cyA9IHZvaWQgMDtcbnZhciByZXNlbGVjdF8xID0gcmVxdWlyZShcInJlc2VsZWN0XCIpO1xudmFyIHNlbGVjdENvbW1lbnRzID0gZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBzdGF0ZS5jb21tZW50cy5jb21tZW50czsgfTtcbmV4cG9ydHMuc2VsZWN0Q29tbWVudHMgPSBzZWxlY3RDb21tZW50cztcbnZhciBzZWxlY3RGb2N1c2VkID0gZnVuY3Rpb24gKHN0YXRlKSB7IHJldHVybiBzdGF0ZS5jb21tZW50cy5mb2N1c2VkQ29tbWVudDsgfTtcbmV4cG9ydHMuc2VsZWN0Rm9jdXNlZCA9IHNlbGVjdEZvY3VzZWQ7XG52YXIgc2VsZWN0UmVtb3RlQ29tbWVudENvdW50ID0gZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgcmV0dXJuIHN0YXRlLmNvbW1lbnRzLnJlbW90ZUNvbW1lbnRDb3VudDtcbn07XG5leHBvcnRzLnNlbGVjdFJlbW90ZUNvbW1lbnRDb3VudCA9IHNlbGVjdFJlbW90ZUNvbW1lbnRDb3VudDtcbmZ1bmN0aW9uIHNlbGVjdENvbW1lbnRzRm9yQ29udGVudFBhdGhGYWN0b3J5KGNvbnRlbnRwYXRoKSB7XG4gICAgcmV0dXJuICgwLCByZXNlbGVjdF8xLmNyZWF0ZVNlbGVjdG9yKShleHBvcnRzLnNlbGVjdENvbW1lbnRzLCBmdW5jdGlvbiAoY29tbWVudHMpIHtcbiAgICAgICAgcmV0dXJuIF9fc3ByZWFkQXJyYXkoW10sIF9fcmVhZChjb21tZW50cy52YWx1ZXMoKSksIGZhbHNlKS5maWx0ZXIoZnVuY3Rpb24gKGNvbW1lbnQpIHtcbiAgICAgICAgICAgIHJldHVybiBjb21tZW50LmNvbnRlbnRwYXRoID09PSBjb250ZW50cGF0aCAmJlxuICAgICAgICAgICAgICAgICEoY29tbWVudC5kZWxldGVkIHx8IGNvbW1lbnQucmVzb2x2ZWQpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuc2VsZWN0Q29tbWVudHNGb3JDb250ZW50UGF0aEZhY3RvcnkgPSBzZWxlY3RDb21tZW50c0ZvckNvbnRlbnRQYXRoRmFjdG9yeTtcbmZ1bmN0aW9uIHNlbGVjdENvbW1lbnRGYWN0b3J5KGxvY2FsSWQpIHtcbiAgICByZXR1cm4gKDAsIHJlc2VsZWN0XzEuY3JlYXRlU2VsZWN0b3IpKGV4cG9ydHMuc2VsZWN0Q29tbWVudHMsIGZ1bmN0aW9uIChjb21tZW50cykge1xuICAgICAgICB2YXIgY29tbWVudCA9IGNvbW1lbnRzLmdldChsb2NhbElkKTtcbiAgICAgICAgaWYgKGNvbW1lbnQgIT09IHVuZGVmaW5lZCAmJiAoY29tbWVudC5kZWxldGVkIHx8IGNvbW1lbnQucmVzb2x2ZWQpKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb21tZW50O1xuICAgIH0pO1xufVxuZXhwb3J0cy5zZWxlY3RDb21tZW50RmFjdG9yeSA9IHNlbGVjdENvbW1lbnRGYWN0b3J5O1xudmFyIHNlbGVjdEVuYWJsZWQgPSBmdW5jdGlvbiAoc3RhdGUpIHsgcmV0dXJuIHN0YXRlLnNldHRpbmdzLmNvbW1lbnRzRW5hYmxlZDsgfTtcbmV4cG9ydHMuc2VsZWN0RW5hYmxlZCA9IHNlbGVjdEVuYWJsZWQ7XG5leHBvcnRzLnNlbGVjdElzRGlydHkgPSAoMCwgcmVzZWxlY3RfMS5jcmVhdGVTZWxlY3RvcikoZXhwb3J0cy5zZWxlY3RDb21tZW50cywgZXhwb3J0cy5zZWxlY3RSZW1vdGVDb21tZW50Q291bnQsIGZ1bmN0aW9uIChjb21tZW50cywgcmVtb3RlQ29tbWVudENvdW50KSB7XG4gICAgaWYgKHJlbW90ZUNvbW1lbnRDb3VudCAhPT0gY29tbWVudHMuc2l6ZSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIEFycmF5LmZyb20oY29tbWVudHMudmFsdWVzKCkpLnNvbWUoZnVuY3Rpb24gKGNvbW1lbnQpIHtcbiAgICAgICAgaWYgKGNvbW1lbnQuZGVsZXRlZCB8fFxuICAgICAgICAgICAgY29tbWVudC5yZXNvbHZlZCB8fFxuICAgICAgICAgICAgY29tbWVudC5yZXBsaWVzLnNpemUgIT09IGNvbW1lbnQucmVtb3RlUmVwbHlDb3VudCB8fFxuICAgICAgICAgICAgY29tbWVudC5vcmlnaW5hbFRleHQgIT09IGNvbW1lbnQudGV4dCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20oY29tbWVudC5yZXBsaWVzLnZhbHVlcygpKS5zb21lKGZ1bmN0aW9uIChyZXBseSkgeyByZXR1cm4gcmVwbHkuZGVsZXRlZCB8fCByZXBseS5vcmlnaW5hbFRleHQgIT09IHJlcGx5LnRleHQ7IH0pO1xuICAgIH0pO1xufSk7XG52YXIgc2VsZWN0Q29tbWVudENvdW50ID0gZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgcmV0dXJuIF9fc3ByZWFkQXJyYXkoW10sIF9fcmVhZChzdGF0ZS5jb21tZW50cy5jb21tZW50cy52YWx1ZXMoKSksIGZhbHNlKS5maWx0ZXIoZnVuY3Rpb24gKGNvbW1lbnQpIHsgcmV0dXJuICFjb21tZW50LmRlbGV0ZWQgJiYgIWNvbW1lbnQucmVzb2x2ZWQ7IH0pLmxlbmd0aDtcbn07XG5leHBvcnRzLnNlbGVjdENvbW1lbnRDb3VudCA9IHNlbGVjdENvbW1lbnRDb3VudDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/selectors/index.ts\n");

/***/ }),

/***/ "./client/src/components/CommentApp/state/comments.ts":
/*!************************************************************!*\
  !*** ./client/src/components/CommentApp/state/comments.ts ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nexports.__esModule = true;\nexports.reducer = exports.INITIAL_STATE = exports.newComment = exports.newCommentReply = void 0;\nvar immer_1 = __importStar(__webpack_require__(/*! immer */ \"./node_modules/immer/dist/immer.esm.js\"));\nvar actions = __importStar(__webpack_require__(/*! ../actions/comments */ \"./client/src/components/CommentApp/actions/comments.ts\"));\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./client/src/components/CommentApp/state/utils.ts\");\n(0, immer_1.enableES5)();\n(0, immer_1.enableMapSet)();\nfunction newCommentReply(localId, author, date, _a) {\n    var _b = _a.remoteId, remoteId = _b === void 0 ? null : _b, _c = _a.mode, mode = _c === void 0 ? 'default' : _c, _d = _a.text, text = _d === void 0 ? '' : _d, _e = _a.deleted, deleted = _e === void 0 ? false : _e;\n    return {\n        localId: localId,\n        remoteId: remoteId,\n        mode: mode,\n        author: author,\n        date: date,\n        text: text,\n        originalText: text,\n        newText: '',\n        deleted: deleted\n    };\n}\nexports.newCommentReply = newCommentReply;\nfunction newComment(contentpath, position, localId, annotation, author, date, _a) {\n    var _b = _a.remoteId, remoteId = _b === void 0 ? null : _b, _c = _a.mode, mode = _c === void 0 ? 'default' : _c, _d = _a.text, text = _d === void 0 ? '' : _d, _e = _a.resolved, resolved = _e === void 0 ? false : _e, _f = _a.deleted, deleted = _f === void 0 ? false : _f, _g = _a.replies, replies = _g === void 0 ? new Map() : _g;\n    return {\n        contentpath: contentpath,\n        position: position,\n        localId: localId,\n        annotation: annotation,\n        remoteId: remoteId,\n        mode: mode,\n        author: author,\n        date: date,\n        text: text,\n        originalText: text,\n        replies: replies,\n        newReply: '',\n        newText: '',\n        deleted: deleted,\n        resolved: resolved,\n        remoteReplyCount: Array.from(replies.values()).reduce(function (n, reply) { return (reply.remoteId !== null ? n + 1 : n); }, 0)\n    };\n}\nexports.newComment = newComment;\nexports.INITIAL_STATE = {\n    comments: new Map(),\n    forceFocus: false,\n    focusedComment: null,\n    pinnedComment: null,\n    remoteCommentCount: 0\n};\nexports.reducer = (0, immer_1[\"default\"])(function (draft, action) {\n    var e_1, _a;\n    /* eslint-disable no-param-reassign */\n    var deleteComment = function (comment) {\n        if (!comment.remoteId) {\n            // If the comment doesn't exist in the database, there's no need to keep it around locally\n            draft.comments[\"delete\"](comment.localId);\n        }\n        else {\n            comment.deleted = true;\n        }\n        // Unset focusedComment if the focused comment is the one being deleted\n        if (draft.focusedComment === comment.localId) {\n            draft.focusedComment = null;\n            draft.forceFocus = false;\n        }\n        if (draft.pinnedComment === comment.localId) {\n            draft.pinnedComment = null;\n        }\n    };\n    var resolveComment = function (comment) {\n        if (!comment.remoteId) {\n            // If the comment doesn't exist in the database, there's no need to keep it around locally\n            draft.comments[\"delete\"](comment.localId);\n        }\n        else {\n            comment.resolved = true;\n        }\n        // Unset focusedComment if the focused comment is the one being resolved\n        if (draft.focusedComment === comment.localId) {\n            draft.focusedComment = null;\n        }\n        if (draft.pinnedComment === comment.localId) {\n            draft.pinnedComment = null;\n        }\n    };\n    switch (action.type) {\n        case actions.ADD_COMMENT: {\n            draft.comments.set(action.comment.localId, action.comment);\n            if (action.comment.remoteId) {\n                draft.remoteCommentCount += 1;\n            }\n            break;\n        }\n        case actions.UPDATE_COMMENT: {\n            var comment = draft.comments.get(action.commentId);\n            if (comment) {\n                if (action.update.newText && action.update.newText.length === 0) {\n                    break;\n                }\n                (0, utils_1.update)(comment, action.update);\n            }\n            break;\n        }\n        case actions.DELETE_COMMENT: {\n            var comment = draft.comments.get(action.commentId);\n            if (!comment) {\n                break;\n            }\n            deleteComment(comment);\n            break;\n        }\n        case actions.RESOLVE_COMMENT: {\n            var comment = draft.comments.get(action.commentId);\n            if (!comment) {\n                break;\n            }\n            resolveComment(comment);\n            break;\n        }\n        case actions.SET_FOCUSED_COMMENT: {\n            if (action.commentId === null || draft.comments.has(action.commentId)) {\n                draft.focusedComment = action.commentId;\n                if (action.updatePinnedComment) {\n                    draft.pinnedComment = action.commentId;\n                }\n                draft.forceFocus = action.forceFocus;\n            }\n            break;\n        }\n        case actions.ADD_REPLY: {\n            var comment = draft.comments.get(action.commentId);\n            if (!comment || action.reply.text.length === 0) {\n                break;\n            }\n            if (action.reply.remoteId) {\n                comment.remoteReplyCount += 1;\n            }\n            comment.replies.set(action.reply.localId, action.reply);\n            break;\n        }\n        case actions.UPDATE_REPLY: {\n            var comment = draft.comments.get(action.commentId);\n            if (!comment) {\n                break;\n            }\n            var reply = comment.replies.get(action.replyId);\n            if (!reply) {\n                break;\n            }\n            if (action.update.newText && action.update.newText.length === 0) {\n                break;\n            }\n            (0, utils_1.update)(reply, action.update);\n            break;\n        }\n        case actions.DELETE_REPLY: {\n            var comment = draft.comments.get(action.commentId);\n            if (!comment) {\n                break;\n            }\n            var reply = comment.replies.get(action.replyId);\n            if (!reply) {\n                break;\n            }\n            if (!reply.remoteId) {\n                // The reply doesn't exist in the database, so we don't need to store it locally\n                comment.replies[\"delete\"](reply.localId);\n            }\n            else {\n                reply.deleted = true;\n            }\n            break;\n        }\n        case actions.INVALIDATE_CONTENT_PATH: {\n            // Delete any comments that exist in the contentpath\n            var comments = draft.comments;\n            try {\n                for (var _b = __values(comments.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var comment = _c.value;\n                    if (comment.contentpath.startsWith(action.contentPath)) {\n                        resolveComment(comment);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            break;\n        }\n        default:\n            break;\n    }\n}, exports.INITIAL_STATE);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/state/comments.ts\n");

/***/ }),

/***/ "./client/src/components/CommentApp/state/index.ts":
/*!*********************************************************!*\
  !*** ./client/src/components/CommentApp/state/index.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.reducer = void 0;\nvar redux_1 = __webpack_require__(/*! redux */ \"./node_modules/redux/es/redux.js\");\nvar comments_1 = __webpack_require__(/*! ./comments */ \"./client/src/components/CommentApp/state/comments.ts\");\nvar settings_1 = __webpack_require__(/*! ./settings */ \"./client/src/components/CommentApp/state/settings.ts\");\nexports.reducer = (0, redux_1.combineReducers)({\n    comments: comments_1.reducer,\n    settings: settings_1.reducer\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9zdGF0ZS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9zdGF0ZS9pbmRleC50cz80ZmM3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMucmVkdWNlciA9IHZvaWQgMDtcbnZhciByZWR1eF8xID0gcmVxdWlyZShcInJlZHV4XCIpO1xudmFyIGNvbW1lbnRzXzEgPSByZXF1aXJlKFwiLi9jb21tZW50c1wiKTtcbnZhciBzZXR0aW5nc18xID0gcmVxdWlyZShcIi4vc2V0dGluZ3NcIik7XG5leHBvcnRzLnJlZHVjZXIgPSAoMCwgcmVkdXhfMS5jb21iaW5lUmVkdWNlcnMpKHtcbiAgICBjb21tZW50czogY29tbWVudHNfMS5yZWR1Y2VyLFxuICAgIHNldHRpbmdzOiBzZXR0aW5nc18xLnJlZHVjZXJcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/state/index.ts\n");

/***/ }),

/***/ "./client/src/components/CommentApp/state/settings.ts":
/*!************************************************************!*\
  !*** ./client/src/components/CommentApp/state/settings.ts ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.reducer = exports.INITIAL_STATE = void 0;\nvar immer_1 = __importDefault(__webpack_require__(/*! immer */ \"./node_modules/immer/dist/immer.esm.js\"));\nvar actions = __importStar(__webpack_require__(/*! ../actions/settings */ \"./client/src/components/CommentApp/actions/settings.ts\"));\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./client/src/components/CommentApp/state/utils.ts\");\n// Reducer with initial state\nexports.INITIAL_STATE = {\n    user: null,\n    commentsEnabled: false,\n    currentTab: null\n};\nexports.reducer = (0, immer_1[\"default\"])(function (draft, action) {\n    switch (action.type) {\n        case actions.UPDATE_GLOBAL_SETTINGS:\n            (0, utils_1.update)(draft, action.update);\n            break;\n        default:\n            break;\n    }\n}, exports.INITIAL_STATE);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9zdGF0ZS9zZXR0aW5ncy50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9zdGF0ZS9zZXR0aW5ncy50cz8zMTJkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5yZWR1Y2VyID0gZXhwb3J0cy5JTklUSUFMX1NUQVRFID0gdm9pZCAwO1xudmFyIGltbWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImltbWVyXCIpKTtcbnZhciBhY3Rpb25zID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuLi9hY3Rpb25zL3NldHRpbmdzXCIpKTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG4vLyBSZWR1Y2VyIHdpdGggaW5pdGlhbCBzdGF0ZVxuZXhwb3J0cy5JTklUSUFMX1NUQVRFID0ge1xuICAgIHVzZXI6IG51bGwsXG4gICAgY29tbWVudHNFbmFibGVkOiBmYWxzZSxcbiAgICBjdXJyZW50VGFiOiBudWxsXG59O1xuZXhwb3J0cy5yZWR1Y2VyID0gKDAsIGltbWVyXzFbXCJkZWZhdWx0XCJdKShmdW5jdGlvbiAoZHJhZnQsIGFjdGlvbikge1xuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSBhY3Rpb25zLlVQREFURV9HTE9CQUxfU0VUVElOR1M6XG4gICAgICAgICAgICAoMCwgdXRpbHNfMS51cGRhdGUpKGRyYWZ0LCBhY3Rpb24udXBkYXRlKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxufSwgZXhwb3J0cy5JTklUSUFMX1NUQVRFKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/state/settings.ts\n");

/***/ }),

/***/ "./client/src/components/CommentApp/state/utils.ts":
/*!*********************************************************!*\
  !*** ./client/src/components/CommentApp/state/utils.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.update = void 0;\nfunction update(base, updatePartial) {\n    return Object.assign(base, updatePartial);\n}\nexports.update = update;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9zdGF0ZS91dGlscy50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC9zdGF0ZS91dGlscy50cz8wMjFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMudXBkYXRlID0gdm9pZCAwO1xuZnVuY3Rpb24gdXBkYXRlKGJhc2UsIHVwZGF0ZVBhcnRpYWwpIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihiYXNlLCB1cGRhdGVQYXJ0aWFsKTtcbn1cbmV4cG9ydHMudXBkYXRlID0gdXBkYXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/state/utils.ts\n");

/***/ }),

/***/ "./client/src/components/CommentApp/utils/layout.ts":
/*!**********************************************************!*\
  !*** ./client/src/components/CommentApp/utils/layout.ts ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nexports.__esModule = true;\nexports.LayoutController = void 0;\nvar maps_1 = __webpack_require__(/*! ./maps */ \"./client/src/components/CommentApp/utils/maps.ts\");\nvar GAP = 20.0; // Gap between comments in pixels\nvar TOP_MARGIN = 100.0; // Spacing from the top to the first comment in pixels\nvar OFFSET = -50; // How many pixels from the annotation position should the comments be placed?\nvar LayoutController = /** @class */ (function () {\n    function LayoutController() {\n        this.commentElements = new Map();\n        this.commentAnnotations = new Map();\n        this.commentTabs = new Map();\n        this.commentDesiredPositions = new Map();\n        this.commentHeights = new Map();\n        this.pinnedComment = null;\n        this.commentCalculatedPositions = new Map();\n        this.isDirty = false;\n    }\n    LayoutController.prototype.setCommentElement = function (commentId, element) {\n        if (element !== null) {\n            this.commentElements.set(commentId, element);\n        }\n        else {\n            this.commentElements[\"delete\"](commentId);\n        }\n        this.isDirty = true;\n    };\n    LayoutController.prototype.setCommentAnnotation = function (commentId, annotation) {\n        this.commentAnnotations.set(commentId, annotation);\n        this.commentTabs.set(commentId, annotation.getTab() || null);\n        this.updateDesiredPosition(commentId);\n        this.isDirty = true;\n    };\n    LayoutController.prototype.setCommentHeight = function (commentId, height) {\n        if (this.commentHeights.get(commentId) !== height) {\n            this.commentHeights.set(commentId, height);\n            this.isDirty = true;\n        }\n    };\n    LayoutController.prototype.setPinnedComment = function (commentId) {\n        this.pinnedComment = commentId;\n        this.isDirty = true;\n    };\n    LayoutController.prototype.updateDesiredPosition = function (commentId) {\n        var annotation = this.commentAnnotations.get(commentId);\n        if (!annotation) {\n            return;\n        }\n        var currentNode = annotation.getAnchorNode(commentId === this.pinnedComment);\n        var currentNodeTop = currentNode.getBoundingClientRect().top;\n        // adjust currentNodeTop for scroll positions of all ancestor elements\n        var parent = currentNode.parentElement;\n        while (parent) {\n            currentNodeTop += parent.scrollTop;\n            parent = parent.parentElement;\n        }\n        this.commentDesiredPositions.set(commentId, currentNodeTop !== 0 ? currentNodeTop + OFFSET : 0);\n    };\n    LayoutController.prototype.refreshDesiredPositions = function (tab) {\n        var _this = this;\n        if (tab === void 0) { tab = null; }\n        /* Finds the current annotation positions of all the comments on the specified tab */\n        var oldDesiredPositions = new Map(this.commentDesiredPositions);\n        this.commentAnnotations.forEach(function (_, commentId) {\n            if (_this.getCommentTabVisible(tab, commentId)) {\n                _this.updateDesiredPosition(commentId);\n            }\n        });\n        // It's not great to be recalculating all positions so regularly, but Wagtail's FE widgets\n        // aren't very constrained so could change layout in any number of ways. If we have a stable FE\n        // widget framework in the future, this could be used to trigger the position refresh more\n        // intelligently, or alternatively once comments is incorporated into the page form, a\n        // MutationObserver could potentially track most types of changes.\n        if (this.commentDesiredPositions !== oldDesiredPositions) {\n            this.isDirty = true;\n        }\n    };\n    LayoutController.prototype.refreshLayout = function () {\n        var _this = this;\n        /* Updates positions of all comments based on their annotation locations, and resolves any overlapping comments */\n        if (!this.isDirty) {\n            return false;\n        }\n        // Build list of blocks (starting with one for each comment)\n        var allBlocks = Array.from(this.commentElements.keys()).map(function (commentId) { return ({\n            tab: (0, maps_1.getOrDefault)(_this.commentTabs, commentId, null),\n            position: (0, maps_1.getOrDefault)(_this.commentDesiredPositions, commentId, 0),\n            height: (0, maps_1.getOrDefault)(_this.commentHeights, commentId, 0),\n            comments: [commentId],\n            containsPinnedComment: _this.pinnedComment !== null && commentId === _this.pinnedComment,\n            pinnedCommentPosition: 0\n        }); });\n        // Group blocks by tabs\n        var blocksByTab = new Map();\n        allBlocks.forEach(function (block) {\n            var blocks = blocksByTab.get(block.tab) || [];\n            blocks.push(block);\n            blocksByTab.set(block.tab, blocks);\n        });\n        // Get location of pinned comment\n        var pinnedCommentPosition = this.pinnedComment\n            ? this.commentDesiredPositions.get(this.pinnedComment)\n            : undefined;\n        var pinnedCommentTab = this.pinnedComment\n            ? this.commentTabs.get(this.pinnedComment)\n            : undefined;\n        // For each tab, resolve positions of all the comments\n        Array.from(blocksByTab.entries()).forEach(function (_a) {\n            var e_1, _b, _c;\n            var _d = __read(_a, 2), tab = _d[0], blocks = _d[1];\n            var pinnedCommentOnThisTab = _this.pinnedComment && pinnedCommentTab === tab;\n            // Sort blocks\n            blocks.sort(function (block, comparisonBlock) { return block.position - comparisonBlock.position; });\n            // Resolve overlapping blocks\n            var currentBlocks = blocks;\n            var overlaps = true;\n            while (overlaps) {\n                overlaps = false;\n                var newBlocks = [];\n                var previousBlock = null;\n                try {\n                    for (var currentBlocks_1 = (e_1 = void 0, __values(currentBlocks)), currentBlocks_1_1 = currentBlocks_1.next(); !currentBlocks_1_1.done; currentBlocks_1_1 = currentBlocks_1.next()) {\n                        var block = currentBlocks_1_1.value;\n                        if (previousBlock) {\n                            if (previousBlock.position + previousBlock.height + GAP >\n                                block.position) {\n                                overlaps = true;\n                                // Merge the blocks\n                                (_c = previousBlock.comments).push.apply(_c, __spreadArray([], __read(block.comments), false));\n                                if (block.containsPinnedComment) {\n                                    previousBlock.containsPinnedComment = true;\n                                    previousBlock.pinnedCommentPosition =\n                                        block.pinnedCommentPosition + previousBlock.height;\n                                }\n                                previousBlock.height += block.height;\n                                // Make sure comments don't disappear off the top of the page\n                                // But only if a comment isn't focused\n                                if (!pinnedCommentOnThisTab &&\n                                    previousBlock.position < TOP_MARGIN + OFFSET) {\n                                    previousBlock.position =\n                                        TOP_MARGIN + previousBlock.height - OFFSET;\n                                }\n                                // If this block contains the focused comment, position it so\n                                // the focused comment is in it's desired position\n                                if (pinnedCommentPosition &&\n                                    previousBlock.containsPinnedComment) {\n                                    previousBlock.position =\n                                        pinnedCommentPosition - previousBlock.pinnedCommentPosition;\n                                }\n                                continue;\n                            }\n                        }\n                        newBlocks.push(block);\n                        previousBlock = block;\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (currentBlocks_1_1 && !currentBlocks_1_1.done && (_b = currentBlocks_1[\"return\"])) _b.call(currentBlocks_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                currentBlocks = newBlocks;\n            }\n            // Write positions\n            currentBlocks.forEach(function (block) {\n                var currentPosition = block.position;\n                block.comments.forEach(function (commentId) {\n                    _this.commentCalculatedPositions.set(commentId, currentPosition);\n                    var height = _this.commentHeights.get(commentId);\n                    if (height) {\n                        currentPosition += height + GAP;\n                    }\n                });\n            });\n        });\n        this.isDirty = false;\n        return true;\n    };\n    LayoutController.prototype.getCommentTabVisible = function (tab, commentId) {\n        var commentTab = (0, maps_1.getOrDefault)(this.commentTabs, commentId, null);\n        return commentTab === tab;\n    };\n    LayoutController.prototype.getCommentVisible = function (tab, commentId) {\n        return (this.getCommentTabVisible(tab, commentId) &&\n            (0, maps_1.getOrDefault)(this.commentDesiredPositions, commentId, 1) > 0);\n    };\n    LayoutController.prototype.getCommentPosition = function (commentId) {\n        if (this.commentCalculatedPositions.has(commentId)) {\n            return this.commentCalculatedPositions.get(commentId);\n        }\n        return this.commentDesiredPositions.get(commentId);\n    };\n    return LayoutController;\n}());\nexports.LayoutController = LayoutController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/utils/layout.ts\n");

/***/ }),

/***/ "./client/src/components/CommentApp/utils/maps.ts":
/*!********************************************************!*\
  !*** ./client/src/components/CommentApp/utils/maps.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.getOrDefault = void 0;\nfunction getOrDefault(map, key, defaultValue) {\n    var value = map.get(key);\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    return value;\n}\nexports.getOrDefault = getOrDefault;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC91dGlscy9tYXBzLnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWd0YWlsLy4vY2xpZW50L3NyYy9jb21wb25lbnRzL0NvbW1lbnRBcHAvdXRpbHMvbWFwcy50cz82NDUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZ2V0T3JEZWZhdWx0ID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0T3JEZWZhdWx0KG1hcCwga2V5LCBkZWZhdWx0VmFsdWUpIHtcbiAgICB2YXIgdmFsdWUgPSBtYXAuZ2V0KGtleSk7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuZXhwb3J0cy5nZXRPckRlZmF1bHQgPSBnZXRPckRlZmF1bHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/utils/maps.ts\n");

/***/ }),

/***/ "./client/src/components/CommentApp/utils/sequences.ts":
/*!*************************************************************!*\
  !*** ./client/src/components/CommentApp/utils/sequences.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.getNextReplyId = exports.getNextCommentId = void 0;\nvar nextCommentId = 1;\nvar nextReplyId = 1;\nfunction getNextCommentId() {\n    nextCommentId += 1;\n    return nextCommentId;\n}\nexports.getNextCommentId = getNextCommentId;\nfunction getNextReplyId() {\n    nextReplyId += 1;\n    return nextReplyId;\n}\nexports.getNextReplyId = getNextReplyId;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvQ29tbWVudEFwcC91dGlscy9zZXF1ZW5jZXMudHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FndGFpbC8uL2NsaWVudC9zcmMvY29tcG9uZW50cy9Db21tZW50QXBwL3V0aWxzL3NlcXVlbmNlcy50cz9lNDUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZ2V0TmV4dFJlcGx5SWQgPSBleHBvcnRzLmdldE5leHRDb21tZW50SWQgPSB2b2lkIDA7XG52YXIgbmV4dENvbW1lbnRJZCA9IDE7XG52YXIgbmV4dFJlcGx5SWQgPSAxO1xuZnVuY3Rpb24gZ2V0TmV4dENvbW1lbnRJZCgpIHtcbiAgICBuZXh0Q29tbWVudElkICs9IDE7XG4gICAgcmV0dXJuIG5leHRDb21tZW50SWQ7XG59XG5leHBvcnRzLmdldE5leHRDb21tZW50SWQgPSBnZXROZXh0Q29tbWVudElkO1xuZnVuY3Rpb24gZ2V0TmV4dFJlcGx5SWQoKSB7XG4gICAgbmV4dFJlcGx5SWQgKz0gMTtcbiAgICByZXR1cm4gbmV4dFJlcGx5SWQ7XG59XG5leHBvcnRzLmdldE5leHRSZXBseUlkID0gZ2V0TmV4dFJlcGx5SWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/src/components/CommentApp/utils/sequences.ts\n");

/***/ }),

/***/ "./client/src/entrypoints/admin/comments.js":
/*!**************************************************!*\
  !*** ./client/src/entrypoints/admin/comments.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nexports.__esModule = true;\nvar gettext_1 = __webpack_require__(/*! ../../utils/gettext */ \"./client/src/utils/gettext.ts\");\nvar main_1 = __webpack_require__(/*! ../../components/CommentApp/main */ \"./client/src/components/CommentApp/main.tsx\");\nvar KEYCODE_M = 77;\n/**\n * Entry point loaded when the comments system is in use.\n */\nwindow.comments = (function () {\n    var commentApp = (0, main_1.initCommentApp)();\n    /**\n     * Returns true if the provided keyboard event is using the 'add/focus comment' keyboard\n     * shortcut\n     */\n    function isCommentShortcut(e) {\n        return (e.ctrlKey || e.metaKey) && e.altKey && e.keyCode === KEYCODE_M;\n    }\n    function getContentPath(fieldNode) {\n        // Return the total contentpath for an element as a string, in the form field.streamfield_uid.block...\n        if (fieldNode.closest('[data-contentpath-disabled]')) {\n            return '';\n        }\n        var element = fieldNode.closest('[data-contentpath]');\n        var contentpaths = [];\n        while (element !== null) {\n            contentpaths.push(element.dataset.contentpath);\n            element = element.parentElement.closest('[data-contentpath]');\n        }\n        contentpaths.reverse();\n        return contentpaths.join('.');\n    }\n    /**\n     * Controls the positioning of a field level comment, and the display of the button\n     * used to focus and pin the attached comment\n     * `getAnchorNode` is called by the comments app to determine which node to\n     * float the comment alongside\n     */\n    var BasicFieldLevelAnnotation = /** @class */ (function () {\n        /**\n         * Create a field-level annotation\n         * @param {Element} fieldNode - an element to provide the comment position\n         * @param {Element} node - the button to focus/pin the comment\n         */\n        function BasicFieldLevelAnnotation(fieldNode, node) {\n            this.node = node;\n            this.fieldNode = fieldNode;\n            this.unsubscribe = null;\n        }\n        /**\n         * Subscribes the annotation to update when the state of a particular comment changes,\n         * and to focus that comment when clicked\n         * @param {number} localId - the localId of the comment to subscribe to\n         */\n        BasicFieldLevelAnnotation.prototype.subscribeToUpdates = function (localId) {\n            var _this = this;\n            var _a = commentApp.selectors, selectFocused = _a.selectFocused, selectEnabled = _a.selectEnabled;\n            var selectComment = commentApp.utils.selectCommentFactory(localId);\n            var store = commentApp.store;\n            var initialState = store.getState();\n            var focused = selectFocused(initialState) === localId;\n            var shown = selectEnabled(initialState);\n            if (focused) {\n                this.onFocus();\n            }\n            if (shown) {\n                this.show();\n            }\n            this.unsubscribe = store.subscribe(function () {\n                var state = store.getState();\n                var comment = selectComment(state);\n                if (!comment) {\n                    _this.onDelete();\n                }\n                var nowFocused = selectFocused(state) === localId;\n                if (nowFocused !== focused) {\n                    if (focused) {\n                        _this.onUnfocus();\n                    }\n                    else {\n                        _this.onFocus();\n                    }\n                    focused = nowFocused;\n                }\n                if (shown !== selectEnabled(state)) {\n                    if (shown) {\n                        _this.hide();\n                    }\n                    else {\n                        _this.show();\n                    }\n                    shown = selectEnabled(state);\n                }\n            });\n            this.setOnClickHandler(localId);\n        };\n        BasicFieldLevelAnnotation.prototype.onDelete = function () {\n            this.node.remove();\n            if (this.unsubscribe) {\n                this.unsubscribe();\n            }\n        };\n        BasicFieldLevelAnnotation.prototype.onFocus = function () {\n            this.node.classList.add('w-field__comment-button--focused');\n            this.node.ariaLabel = (0, gettext_1.gettext)('Unfocus comment');\n        };\n        BasicFieldLevelAnnotation.prototype.onUnfocus = function () {\n            this.node.classList.remove('w-field__comment-button--focused');\n            this.node.ariaLabel = (0, gettext_1.gettext)('Focus comment');\n            // TODO: ensure comment is focused accessibly when this is clicked,\n            // and that screenreader users can return to the annotation point when desired\n        };\n        BasicFieldLevelAnnotation.prototype.show = function () {\n            this.node.classList.remove('u-hidden');\n        };\n        BasicFieldLevelAnnotation.prototype.hide = function () {\n            this.node.classList.add('u-hidden');\n        };\n        BasicFieldLevelAnnotation.prototype.setOnClickHandler = function (localId) {\n            this.node.addEventListener('click', function () {\n                commentApp.store.dispatch(commentApp.actions.setFocusedComment(localId, {\n                    updatePinnedComment: true,\n                    forceFocus: true\n                }));\n            });\n        };\n        BasicFieldLevelAnnotation.prototype.getTab = function () {\n            var _a;\n            return (_a = this.fieldNode.closest('[role=\"tabpanel\"]')) === null || _a === void 0 ? void 0 : _a.getAttribute('id');\n        };\n        BasicFieldLevelAnnotation.prototype.getAnchorNode = function () {\n            return this.fieldNode;\n        };\n        return BasicFieldLevelAnnotation;\n    }());\n    var MissingElementError = /** @class */ (function (_super) {\n        __extends(MissingElementError, _super);\n        function MissingElementError(element) {\n            var params = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                params[_i - 1] = arguments[_i];\n            }\n            var _this = _super.apply(this, __spreadArray([], __read(params), false)) || this;\n            _this.name = 'MissingElementError';\n            _this.element = element;\n            return _this;\n        }\n        return MissingElementError;\n    }(Error));\n    var FieldLevelCommentWidget = /** @class */ (function () {\n        function FieldLevelCommentWidget(_a) {\n            var fieldNode = _a.fieldNode, commentAdditionNode = _a.commentAdditionNode, annotationTemplateNode = _a.annotationTemplateNode;\n            this.fieldNode = fieldNode;\n            this.contentpath = getContentPath(fieldNode);\n            if (!commentAdditionNode) {\n                throw new MissingElementError(commentAdditionNode);\n            }\n            this.commentAdditionNode = commentAdditionNode;\n            if (!annotationTemplateNode) {\n                throw new MissingElementError(annotationTemplateNode);\n            }\n            this.annotationTemplateNode = annotationTemplateNode;\n            this.updateVisibility(false);\n        }\n        FieldLevelCommentWidget.prototype.register = function () {\n            var _this = this;\n            if (!this.contentpath) {\n                // The widget has no valid contentpath, skip subscriptions\n                return undefined;\n            }\n            var selectEnabled = commentApp.selectors.selectEnabled;\n            var initialState = commentApp.store.getState();\n            var currentlyEnabled = selectEnabled(initialState);\n            var selectCommentsForContentPath = commentApp.utils.selectCommentsForContentPathFactory(this.contentpath);\n            var currentComments = selectCommentsForContentPath(initialState);\n            this.updateVisibility(currentComments.length === 0 && currentlyEnabled);\n            var unsubscribeWidget = commentApp.store.subscribe(function () {\n                var state = commentApp.store.getState();\n                var newComments = selectCommentsForContentPath(state);\n                var newEnabled = selectEnabled(state);\n                var commentsChanged = currentComments !== newComments;\n                var enabledChanged = currentlyEnabled !== newEnabled;\n                if (commentsChanged) {\n                    // Add annotations for any new comments\n                    currentComments = newComments;\n                    currentComments\n                        .filter(function (comment) { return comment.annotation === null; })\n                        .forEach(function (comment) {\n                        var annotation = _this.getAnnotationForComment(comment);\n                        commentApp.updateAnnotation(annotation, comment.localId);\n                        annotation.subscribeToUpdates(comment.localId);\n                    });\n                }\n                if (enabledChanged || commentsChanged) {\n                    // If comments have been enabled or disabled, or the comments have changed\n                    // check whether to show the widget (if comments are enabled and there are no existing comments)\n                    currentlyEnabled = newEnabled;\n                    _this.updateVisibility(currentComments.length === 0 && currentlyEnabled);\n                }\n            });\n            initialState.comments.comments.forEach(function (comment) {\n                // Add annotations for any comments already in the store\n                if (comment.contentpath === _this.contentpath) {\n                    var annotation = _this.getAnnotationForComment(comment);\n                    commentApp.updateAnnotation(annotation, comment.localId);\n                    annotation.subscribeToUpdates(comment.localId);\n                }\n            });\n            var addComment = function () {\n                var annotation = _this.getAnnotationForComment();\n                var localId = commentApp.makeComment(annotation, _this.contentpath);\n                annotation.subscribeToUpdates(localId);\n            };\n            this.commentAdditionNode.addEventListener('click', function () {\n                // Make the widget button clickable to add a comment\n                addComment();\n            });\n            this.fieldNode.addEventListener('keyup', function (e) {\n                if (currentlyEnabled && isCommentShortcut(e)) {\n                    if (currentComments.length === 0) {\n                        addComment();\n                    }\n                    else {\n                        commentApp.store.dispatch(commentApp.actions.setFocusedComment(currentComments[0].localId, {\n                            updatePinnedComment: true,\n                            forceFocus: true\n                        }));\n                    }\n                }\n            });\n            return unsubscribeWidget; // TODO: listen for widget deletion and use this\n        };\n        FieldLevelCommentWidget.prototype.updateVisibility = function (newShown) {\n            if (newShown === this.shown) {\n                return;\n            }\n            this.shown = newShown;\n            if (!this.shown) {\n                this.commentAdditionNode.classList.add('u-hidden');\n            }\n            else {\n                this.commentAdditionNode.classList.remove('u-hidden');\n            }\n        };\n        FieldLevelCommentWidget.prototype.getAnnotationForComment = function () {\n            var annotationNode = this.annotationTemplateNode.cloneNode(true);\n            annotationNode.id = '';\n            annotationNode.setAttribute('aria-label', this.commentAdditionNode.getAttribute('aria-label'));\n            annotationNode.setAttribute('aria-describedby', this.commentAdditionNode.getAttribute('aria-describedby'));\n            annotationNode.classList.remove('u-hidden');\n            this.commentAdditionNode.insertAdjacentElement('beforebegin', annotationNode);\n            return new BasicFieldLevelAnnotation(this.fieldNode, annotationNode, commentApp);\n        };\n        return FieldLevelCommentWidget;\n    }());\n    function onNextEnable(fn) {\n        // Run a function once, when comments are enabled\n        var selectEnabled = commentApp.selectors.selectEnabled;\n        var getEnabled = function () { return selectEnabled(commentApp.store.getState()); };\n        var enabled = getEnabled();\n        if (enabled) {\n            // If we're starting off enabled, run the function immediately\n            fn();\n            return;\n        }\n        var unsubscribe = commentApp.store.subscribe(function () {\n            // Otherwise, subscribe to updates and run the function when comments change to enabled\n            var newEnabled = getEnabled();\n            if (newEnabled && !enabled) {\n                enabled = newEnabled;\n                unsubscribe();\n                fn();\n            }\n        });\n    }\n    function initAddCommentButton(buttonElement) {\n        var initWidget = function () {\n            var widget = new FieldLevelCommentWidget({\n                fieldNode: buttonElement.closest('[data-contentpath]'),\n                commentAdditionNode: buttonElement,\n                annotationTemplateNode: document.querySelector('#comment-icon')\n            });\n            widget.register();\n        };\n        // Our template node may not exist yet - let's hold off until comments are loaded and enabled\n        onNextEnable(initWidget);\n    }\n    function initCommentsInterface(formElement) {\n        var commentsElement = document.getElementById('comments');\n        var commentsOutputElement = document.getElementById('comments-output');\n        var dataElement = document.getElementById('comments-data');\n        if (!commentsElement || !commentsOutputElement || !dataElement) {\n            throw new Error('Comments app failed to initialise. Missing HTML element');\n        }\n        var data = JSON.parse(dataElement.textContent);\n        commentApp.renderApp(commentsElement, commentsOutputElement, data.user, data.comments, new Map(Object.entries(data.authors)));\n        formElement\n            .querySelectorAll('[data-component=\"add-comment-button\"]')\n            .forEach(initAddCommentButton);\n        // Attach the commenting app to the tab navigation, if it exists\n        var tabNavElement = formElement.querySelector('[data-tabs] [role=\"tablist\"]');\n        if (tabNavElement) {\n            commentApp.setCurrentTab(tabNavElement\n                .querySelector('[role=\"tab\"][aria-selected=\"true\"]')\n                .getAttribute('href')\n                .replace('#', ''));\n            tabNavElement.addEventListener('switch', function (e) {\n                commentApp.setCurrentTab(e.detail.tab);\n            });\n        }\n        // Show/hide comments when the side panel is opened/closed\n        var commentsSidePanel = document.querySelector('[data-side-panel=\"comments\"]');\n        var commentNotifications = formElement.querySelector('[data-comment-notifications]');\n        var tabContentElement = formElement.querySelector('.tab-content');\n        var updateCommentVisibility = function (visible) {\n            // Show/hide comments\n            commentApp.setVisible(visible);\n            // Add/Remove tab-nav--comments-enabled class. This changes the size of streamfields\n            if (visible) {\n                tabContentElement.classList.add('tab-content--comments-enabled');\n                if (commentNotifications) {\n                    commentNotifications.hidden = false;\n                }\n            }\n            else {\n                tabContentElement.classList.remove('tab-content--comments-enabled');\n                if (commentNotifications) {\n                    commentNotifications.hidden = true;\n                }\n            }\n        };\n        if (commentsSidePanel) {\n            commentsSidePanel.addEventListener('show', function () {\n                updateCommentVisibility(true);\n            });\n            commentsSidePanel.addEventListener('hide', function () {\n                updateCommentVisibility(false);\n            });\n        }\n        // Keep number of comments up to date with comment app\n        var commentToggle = document.querySelector('[data-side-panel-toggle=\"comments\"]');\n        var commentCounter = document.createElement('div');\n        commentCounter.className =\n            '-w-mr-3 w-py-0.5 w-px-[0.325rem] w-translate-y-[-8px] w-translate-x-[-4px] w-text-[0.5625rem] w-font-bold w-bg-secondary-100 w-text-white w-border w-border-white w-rounded-[1rem]';\n        commentToggle.className =\n            'w-h-slim-header w-bg-transparent w-box-border w-py-3 w-px-3 w-flex w-justify-center w-items-center w-outline-offset-inside w-text-grey-400 w-transition hover:w-transform hover:w-scale-110 hover:w-text-primary focus:w-text-primary expanded:w-text-primary';\n        commentToggle.appendChild(commentCounter);\n        var updateCommentCount = function () {\n            var commentCount = commentApp.selectors.selectCommentCount(commentApp.store.getState());\n            // If comment counter element doesn't exist don't try to update innerText\n            if (!commentCounter) {\n                return;\n            }\n            if (commentCount > 0) {\n                commentCounter.innerText = commentCount.toString();\n            }\n            else {\n                // Note: Hide the circle when its content is empty\n                commentCounter.hidden = true;\n            }\n        };\n        commentApp.store.subscribe(updateCommentCount);\n        updateCommentCount();\n    }\n    return {\n        commentApp: commentApp,\n        getContentPath: getContentPath,\n        isCommentShortcut: isCommentShortcut,\n        initAddCommentButton: initAddCommentButton,\n        initCommentsInterface: initCommentsInterface\n    };\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/entrypoints/admin/comments.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"comments": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = globalThis["webpackChunkwagtail"] = globalThis["webpackChunkwagtail"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["wagtail/admin/static/wagtailadmin/js/vendor"], () => (__webpack_require__("./client/src/entrypoints/admin/comments.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;