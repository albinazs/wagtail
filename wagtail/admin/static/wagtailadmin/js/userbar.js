/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./client/src/entrypoints/admin/userbar.js":
/*!*************************************************!*\
  !*** ./client/src/entrypoints/admin/userbar.js ***!
  \*************************************************/
/***/ (() => {

eval("// This entrypoint is not bundled with any polyfills to keep it as light as possible\n// Please stick to old JS APIs and avoid importing anything that might require a vendored module\n// More background can be found in webpack.config.js\n// This component implements a roving tab index for keyboard navigation\n// Learn more about roving tabIndex: https://w3c.github.io/aria-practices/#kbd_roving_tabindex\ndocument.addEventListener('DOMContentLoaded', function () {\n    var userbar = document.querySelector('[data-wagtail-userbar]');\n    var trigger = userbar.querySelector('[data-wagtail-userbar-trigger]');\n    var list = userbar.querySelector('[role=menu]');\n    var listItems = list.querySelectorAll('li');\n    var isActiveClass = 'is-active';\n    // querySelector for all items that can be focused\n    // tabIndex has been removed for roving tabindex compatibility\n    // source: https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus\n    var focusableItemSelector = \"a[href],\\n    button:not([disabled]),\\n    input:not([disabled])\";\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    trigger.addEventListener('click', toggleUserbar, false);\n    // make sure userbar is hidden when navigating back\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    window.addEventListener('pageshow', hideUserbar, false);\n    // Handle keyboard events on the trigger\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    userbar.addEventListener('keydown', handleTriggerKeyDown);\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    list.addEventListener('focusout', handleFocusChange);\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    resetItemsTabIndex(); // On initialisation, all menu items should be disabled for roving tab index\n    function showUserbar(shouldFocus) {\n        userbar.classList.add(isActiveClass);\n        trigger.setAttribute('aria-expanded', 'true');\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        list.addEventListener('click', sandboxClick, false);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        window.addEventListener('click', clickOutside, false);\n        // Start handling keyboard input now that the userbar is open.\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        userbar.addEventListener('keydown', handleUserbarItemsKeyDown, false);\n        // The userbar has role=menu which means that the first link should be focused on popup\n        // For weird reasons shifting focus only works after some amount of delay\n        // Which is why we are forced to use setTimeout\n        if (shouldFocus) {\n            // Find the first focusable element (if any) and focus it\n            if (list.querySelector(focusableItemSelector)) {\n                setTimeout(function () {\n                    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                    setFocusToFirstItem();\n                }, 300); // Less than 300ms doesn't seem to work\n            }\n        }\n    }\n    function hideUserbar() {\n        userbar.classList.remove(isActiveClass);\n        trigger.setAttribute('aria-expanded', 'false');\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        list.addEventListener('click', sandboxClick, false);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        window.removeEventListener('click', clickOutside, false);\n        // Cease handling keyboard input now that the userbar is closed.\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        userbar.removeEventListener('keydown', handleUserbarItemsKeyDown, false);\n    }\n    function toggleUserbar(e2) {\n        e2.stopPropagation();\n        if (userbar.classList.contains(isActiveClass)) {\n            hideUserbar();\n        }\n        else {\n            showUserbar(true);\n        }\n    }\n    function isFocusOnItems() {\n        return (document.activeElement &&\n            !!document.activeElement.closest('.wagtail-userbar-items'));\n    }\n    /** Reset all focusable menu items to `tabIndex = -1` */\n    function resetItemsTabIndex() {\n        listItems.forEach(function (listItem) {\n            // eslint-disable-next-line no-param-reassign\n            listItem.firstElementChild.tabIndex = -1;\n        });\n    }\n    /** Focus element using a roving tab index */\n    function focusElement(el) {\n        resetItemsTabIndex();\n        // eslint-disable-next-line no-param-reassign\n        el.tabIndex = 0;\n        setTimeout(function () {\n            el.focus();\n        }, 100); // Workaround, changing focus only works after a timeout\n    }\n    function setFocusToTrigger() {\n        setTimeout(function () { return trigger.focus(); }, 300);\n        resetItemsTabIndex();\n    }\n    function setFocusToFirstItem() {\n        if (listItems.length > 0) {\n            focusElement(listItems[0].firstElementChild);\n        }\n    }\n    function setFocusToLastItem() {\n        if (listItems.length > 0) {\n            focusElement(listItems[listItems.length - 1].firstElementChild);\n        }\n    }\n    function setFocusToNextItem() {\n        listItems.forEach(function (element, idx) {\n            // Check which item is currently focused\n            if (element.firstElementChild === document.activeElement) {\n                if (idx + 1 < listItems.length) {\n                    focusElement(listItems[idx + 1].firstElementChild);\n                }\n                else {\n                    // Loop around\n                    setFocusToFirstItem();\n                }\n            }\n        });\n    }\n    function setFocusToPreviousItem() {\n        listItems.forEach(function (element, idx) {\n            // Check which item is currently focused\n            if (element.firstElementChild === document.activeElement) {\n                if (idx > 0) {\n                    focusElement(listItems[idx - 1].firstElementChild);\n                }\n                else {\n                    setFocusToLastItem();\n                }\n            }\n        });\n    }\n    /**\n      This handler is responsible for keyboard input when items inside the userbar are focused.\n      It should only listen when the userbar is open.\n  \n      It is responsible for:\n      - Shifting focus using the arrow / home / end keys.\n      - Closing the menu when 'Escape' is pressed.\n    */\n    function handleUserbarItemsKeyDown(event) {\n        // Only handle keyboard input if the userbar is open\n        if (trigger.getAttribute('aria-expanded') === 'true') {\n            if (event.key === 'Escape') {\n                hideUserbar();\n                setFocusToTrigger();\n                return false;\n            }\n            // List items are in focus, move focus if needed\n            if (isFocusOnItems()) {\n                switch (event.key) {\n                    case 'ArrowDown':\n                        event.preventDefault();\n                        setFocusToNextItem();\n                        return false;\n                    case 'ArrowUp':\n                        event.preventDefault();\n                        setFocusToPreviousItem();\n                        return false;\n                    case 'Home':\n                        event.preventDefault();\n                        setFocusToFirstItem();\n                        return false;\n                    case 'End':\n                        event.preventDefault();\n                        setFocusToLastItem();\n                        return false;\n                    default:\n                        break;\n                }\n            }\n        }\n        return true;\n    }\n    function handleFocusChange(event) {\n        // Is the focus is still in the menu? If so, don't to anything\n        if (event.relatedTarget == null ||\n            (event.relatedTarget &&\n                event.relatedTarget.closest('.wagtail-userbar-items'))) {\n            return;\n        }\n        // List items not in focus - the menu should close\n        resetItemsTabIndex();\n        hideUserbar();\n    }\n    /**\n      This handler is responsible for opening the userbar with the arrow keys\n      if it's focused and not open yet. It should always be listening.\n    */\n    function handleTriggerKeyDown(event) {\n        // Check if the userbar is focused (but not open yet) and should be opened by keyboard input\n        if (trigger === document.activeElement &&\n            trigger.getAttribute('aria-expanded') === 'false') {\n            switch (event.key) {\n                case 'ArrowUp':\n                    event.preventDefault();\n                    showUserbar(false);\n                    // Workaround for focus bug\n                    // Needs extra delay to account for the userbar open animation. Otherwise won't focus properly.\n                    setTimeout(function () { return setFocusToLastItem(); }, 300);\n                    break;\n                case 'ArrowDown':\n                    event.preventDefault();\n                    showUserbar(false);\n                    // Workaround for focus bug\n                    // Needs extra delay to account for the userbar open animation. Otherwise won't focus properly.\n                    setTimeout(function () { return setFocusToFirstItem(); }, 300);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    function sandboxClick(e2) {\n        e2.stopPropagation();\n    }\n    function clickOutside() {\n        hideUserbar();\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/entrypoints/admin/userbar.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./client/src/entrypoints/admin/userbar.js"]();
/******/ 	
/******/ })()
;