/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./client/src/entrypoints/admin/core.js":
/*!**********************************************!*\
  !*** ./client/src/entrypoints/admin/core.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar jquery_1 = __importDefault(__webpack_require__(/*! jquery */ \"jquery\"));\nvar text_1 = __webpack_require__(/*! ../../utils/text */ \"./client/src/utils/text.ts\");\nvar initButtonSelects_1 = __webpack_require__(/*! ../../includes/initButtonSelects */ \"./client/src/includes/initButtonSelects.ts\");\nvar initTagField_1 = __webpack_require__(/*! ../../includes/initTagField */ \"./client/src/includes/initTagField.ts\");\nvar initTooltips_1 = __webpack_require__(/*! ../../includes/initTooltips */ \"./client/src/includes/initTooltips.ts\");\n/* generic function for adding a message to message area through JS alone */\nfunction addMessage(status, text) {\n    (0, jquery_1[\"default\"])('.messages')\n        .addClass('new')\n        .empty()\n        .append('<ul><li class=\"' + status + '\">' + text + '</li></ul>');\n    var addMsgTimeout = setTimeout(function () {\n        (0, jquery_1[\"default\"])('.messages').addClass('appear');\n        clearTimeout(addMsgTimeout);\n    }, 100);\n}\nwindow.addMessage = addMessage;\nwindow.escapeHtml = text_1.escapeHtml;\nwindow.initTagField = initTagField_1.initTagField;\n/*\n * Enables a \"dirty form check\", prompting the user if they are navigating away\n * from a page with unsaved changes, as well as optionally controlling other\n * behaviour via a callback\n *\n * It takes the following parameters:\n *\n *  - formSelector - A CSS selector to select the form to apply this check to.\n *\n *  - options - An object for passing in options. Possible options are:\n *  - confirmationMessage - The message to display in the prompt.\n *  - alwaysDirty - When set to true the form will always be considered dirty,\n *    prompting the user even when nothing has been changed.\n *  - commentApp - The CommentApp used by the commenting system, if the dirty check\n *    should include comments\n *  - callback - A function to be run when the dirty status of the form, or the comments\n *    system (if using) changes, taking formDirty, commentsDirty as arguments\n */\nfunction enableDirtyFormCheck(formSelector, options) {\n    var $form = (0, jquery_1[\"default\"])(formSelector);\n    var confirmationMessage = options.confirmationMessage || ' ';\n    var alwaysDirty = options.alwaysDirty || false;\n    var commentApp = options.commentApp || null;\n    var callback = options.callback || null;\n    var initialData = null;\n    var formSubmitted = false;\n    var updateCallback = function (formDirty, commentsDirty) {\n        if (callback) {\n            callback(formDirty, commentsDirty);\n        }\n    };\n    $form.on('submit', function () {\n        formSubmitted = true;\n    });\n    var isDirty = alwaysDirty;\n    var isCommentsDirty = false;\n    var updateIsCommentsDirtyTimeout = -1;\n    if (commentApp) {\n        isCommentsDirty = commentApp.selectors.selectIsDirty(commentApp.store.getState());\n        commentApp.store.subscribe(function () {\n            // Update on a timeout to match the timings for responding to page form changes\n            clearTimeout(updateIsCommentsDirtyTimeout);\n            updateIsCommentsDirtyTimeout = setTimeout(function () {\n                var newIsCommentsDirty = commentApp.selectors.selectIsDirty(commentApp.store.getState());\n                if (newIsCommentsDirty !== isCommentsDirty) {\n                    isCommentsDirty = newIsCommentsDirty;\n                    updateCallback(isDirty, isCommentsDirty);\n                }\n            }, isCommentsDirty ? 3000 : 300);\n        });\n    }\n    updateCallback(isDirty, isCommentsDirty);\n    var updateIsDirtyTimeout = -1;\n    var isFormDirty = function () {\n        if (alwaysDirty) {\n            return true;\n        }\n        else if (!initialData) {\n            return false;\n        }\n        var formData = new FormData($form[0]);\n        var keys = Array.from(formData.keys()).filter(function (key) { return !key.startsWith('comments-'); });\n        if (keys.length !== initialData.size) {\n            return true;\n        }\n        return keys.some(function (key) {\n            var newValue = formData.getAll(key);\n            var oldValue = initialData.get(key);\n            if (newValue === oldValue) {\n                return false;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(oldValue)) {\n                return (newValue.length !== oldValue.length ||\n                    newValue.some(function (value, index) { return value !== oldValue[index]; }));\n            }\n            return false;\n        });\n    };\n    var updateIsDirty = function () {\n        var previousIsDirty = isDirty;\n        isDirty = isFormDirty();\n        if (previousIsDirty !== isDirty) {\n            updateCallback(isDirty, isCommentsDirty);\n        }\n    };\n    // Delay snapshotting the form’s data to avoid race conditions with form widgets that might process the values.\n    // User interaction with the form within that delay also won’t trigger the confirmation message.\n    if (!alwaysDirty) {\n        setTimeout(function () {\n            var initialFormData = new FormData($form[0]);\n            initialData = new Map();\n            Array.from(initialFormData.keys())\n                .filter(function (key) { return !key.startsWith('comments-'); })\n                .forEach(function (key) { return initialData.set(key, initialFormData.getAll(key)); });\n            var updateDirtyCheck = function () {\n                clearTimeout(updateIsDirtyTimeout);\n                // If the form is dirty, it is relatively unlikely to become clean again, so\n                // run the dirty check on a relatively long timer that we reset on any form update\n                // otherwise, use a short timer both for nicer UX and to ensure widgets\n                // like Draftail have time to serialize their data\n                updateIsDirtyTimeout = setTimeout(updateIsDirty, isDirty ? 3000 : 300);\n            };\n            $form.on('change keyup', updateDirtyCheck).trigger('change');\n            var validInputNodeInList = function (nodeList) {\n                var e_1, _a;\n                try {\n                    for (var nodeList_1 = __values(nodeList), nodeList_1_1 = nodeList_1.next(); !nodeList_1_1.done; nodeList_1_1 = nodeList_1.next()) {\n                        var node = nodeList_1_1.value;\n                        if (node.nodeType === node.ELEMENT_NODE &&\n                            ['INPUT', 'TEXTAREA', 'SELECT'].includes(node.tagName)) {\n                            return true;\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (nodeList_1_1 && !nodeList_1_1.done && (_a = nodeList_1[\"return\"])) _a.call(nodeList_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                return false;\n            };\n            var observer = new MutationObserver(function (mutationList) {\n                var e_2, _a;\n                try {\n                    for (var mutationList_1 = __values(mutationList), mutationList_1_1 = mutationList_1.next(); !mutationList_1_1.done; mutationList_1_1 = mutationList_1.next()) {\n                        var mutation = mutationList_1_1.value;\n                        if (validInputNodeInList(mutation.addedNodes) ||\n                            validInputNodeInList(mutation.removedNodes)) {\n                            updateDirtyCheck();\n                            return;\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (mutationList_1_1 && !mutationList_1_1.done && (_a = mutationList_1[\"return\"])) _a.call(mutationList_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            });\n            observer.observe($form[0], {\n                childList: true,\n                attributes: false,\n                subtree: true\n            });\n        }, 1000 * 10);\n    }\n    // eslint-disable-next-line consistent-return\n    window.addEventListener('beforeunload', function (event) {\n        clearTimeout(updateIsDirtyTimeout);\n        updateIsDirty();\n        var displayConfirmation = !formSubmitted && (isDirty || isCommentsDirty);\n        if (displayConfirmation) {\n            // eslint-disable-next-line no-param-reassign\n            event.returnValue = confirmationMessage;\n            return confirmationMessage;\n        }\n    });\n}\nwindow.enableDirtyFormCheck = enableDirtyFormCheck;\n(0, jquery_1[\"default\"])(function () {\n    // Add class to the body from which transitions may be hung so they don't appear to transition as the page loads\n    (0, jquery_1[\"default\"])('body').addClass('ready');\n    /* Functions that need to run/rerun when active tabs are changed */\n    function resizeTextAreas() {\n        // eslint-disable-next-line func-names\n        (0, jquery_1[\"default\"])('textarea[data-autosize-on]').each(function () {\n            // eslint-disable-next-line no-undef\n            autosize.update((0, jquery_1[\"default\"])(this).get());\n        });\n    }\n    // Resize textareas on page load and when tab changed\n    (0, jquery_1[\"default\"])(document).ready(resizeTextAreas);\n    document.addEventListener('wagtail:tab-changed', resizeTextAreas);\n    // eslint-disable-next-line func-names\n    (0, jquery_1[\"default\"])('.dropdown').each(function () {\n        var $dropdown = (0, jquery_1[\"default\"])(this);\n        (0, jquery_1[\"default\"])('.dropdown-toggle', $dropdown).on('click', function (e) {\n            e.stopPropagation();\n            $dropdown.toggleClass('open');\n            if ($dropdown.hasClass('open')) {\n                // If a dropdown is opened, add an event listener for document clicks to close it\n                (0, jquery_1[\"default\"])(document).on('click.dropdown.cancel', function (e2) {\n                    var relTarg = e2.relatedTarget || e2.toElement;\n                    // Only close dropdown if the click target wasn't a child of this dropdown\n                    if (!(0, jquery_1[\"default\"])(relTarg).parents().is($dropdown)) {\n                        $dropdown.removeClass('open');\n                        (0, jquery_1[\"default\"])(document).off('click.dropdown.cancel');\n                    }\n                });\n            }\n            else {\n                (0, jquery_1[\"default\"])(document).off('click.dropdown.cancel');\n            }\n        });\n    });\n    /* Dropzones */\n    (0, jquery_1[\"default\"])('.drop-zone')\n        .on('dragover', function onDragOver() {\n        (0, jquery_1[\"default\"])(this).addClass('hovered');\n    })\n        .on('dragleave dragend drop', function onDragLeave() {\n        (0, jquery_1[\"default\"])(this).removeClass('hovered');\n    });\n    /* Header search behaviour */\n    if (window.headerSearch) {\n        var searchCurrentIndex_1 = 0;\n        var searchNextIndex_1 = 0;\n        var $input_1 = (0, jquery_1[\"default\"])(window.headerSearch.termInput);\n        var $inputContainer = $input_1.parent();\n        var $icon_1 = $inputContainer.find('use');\n        var baseIcon_1 = $icon_1.attr('href');\n        $input_1.on('keyup cut paste change', function () {\n            clearTimeout($input_1.data('timer'));\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            $input_1.data('timer', setTimeout(search_1, 200));\n        });\n        // auto focus on search box\n        $input_1.trigger('focus');\n        // eslint-disable-next-line func-names\n        var search_1 = function () {\n            var newQuery = $input_1.val();\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var currentQuery = getURLParam_1('q');\n            // only do the query if it has changed for trimmed queries\n            // for example - \" \" === \"\" and \"firstword \" ==== \"firstword\"\n            if (currentQuery.trim() !== newQuery.trim()) {\n                $icon_1.attr('href', '#icon-spinner');\n                searchNextIndex_1 += 1;\n                var index_1 = searchNextIndex_1;\n                // Update q, reset to first page, and keep other query params\n                var searchParams = new URLSearchParams(window.location.search);\n                searchParams.set('q', newQuery);\n                searchParams[\"delete\"]('p');\n                var queryString_1 = searchParams.toString();\n                jquery_1[\"default\"].ajax({\n                    url: window.headerSearch.url,\n                    data: queryString_1,\n                    success: function (data) {\n                        if (index_1 > searchCurrentIndex_1) {\n                            searchCurrentIndex_1 = index_1;\n                            (0, jquery_1[\"default\"])(window.headerSearch.targetOutput).html(data).slideDown(800);\n                            window.history.replaceState(null, null, '?' + queryString_1);\n                            $input_1[0].dispatchEvent(new Event('search-success'));\n                        }\n                    },\n                    complete: function () {\n                        window.wagtail.ui.initDropDowns();\n                        // Reinitialise any tooltips\n                        (0, initTooltips_1.initTooltips)();\n                        $icon_1.attr('href', baseIcon_1);\n                    }\n                });\n            }\n        };\n        // eslint-disable-next-line func-names\n        var getURLParam_1 = function (name) {\n            var results = new RegExp('[\\\\?&]' + name + '=([^]*)').exec(window.location.search);\n            if (results) {\n                return results[1];\n            }\n            return '';\n        };\n    }\n    /* Debounce submission of long-running forms and add spinner to give sense of activity */\n    // eslint-disable-next-line func-names\n    (0, jquery_1[\"default\"])(document).on('click', 'button.button-longrunning', function () {\n        var $self = (0, jquery_1[\"default\"])(this);\n        var $replacementElem = (0, jquery_1[\"default\"])('em', $self);\n        var reEnableAfter = 30;\n        var dataName = 'disabledtimeout';\n        // eslint-disable-next-line func-names\n        window.cancelSpinner = function () {\n            $self\n                .prop('disabled', '')\n                .removeData(dataName)\n                .removeClass('button-longrunning-active');\n            if ($self.data('clicked-text')) {\n                $replacementElem.text($self.data('original-text'));\n            }\n        };\n        // If client-side validation is active on this form, and is going to block submission of the\n        // form, don't activate the spinner\n        var form = $self.closest('form').get(0);\n        if (form &&\n            form.checkValidity &&\n            !form.noValidate &&\n            !form.checkValidity()) {\n            return;\n        }\n        // Disabling a button prevents it submitting the form, so disabling\n        // must occur on a brief timeout only after this function returns.\n        var timeout = setTimeout(function () {\n            if (!$self.data(dataName)) {\n                // Button re-enables after a timeout to prevent button becoming\n                // permanently un-usable\n                $self.data(dataName, setTimeout(function () {\n                    clearTimeout($self.data(dataName));\n                    // eslint-disable-next-line no-undef\n                    cancelSpinner();\n                }, reEnableAfter * 1000));\n                if ($self.data('clicked-text') && $replacementElem.length) {\n                    // Save current button text\n                    $self.data('original-text', $replacementElem.text());\n                    $replacementElem.text($self.data('clicked-text'));\n                }\n                // Disabling button must be done last: disabled buttons can't be\n                // modified in the normal way, it would seem.\n                $self.addClass('button-longrunning-active').prop('disabled', 'true');\n            }\n            clearTimeout(timeout);\n        }, 10);\n    });\n});\n// =============================================================================\n// Wagtail global module, mainly useful for debugging.\n// =============================================================================\n// =============================================================================\n// Inline dropdown module\n// =============================================================================\nvar wagtail = window.wagtail || {};\nif (!wagtail.ui) {\n    wagtail.ui = {};\n}\n// Constants\nvar DROPDOWN_SELECTOR = '[data-dropdown]';\nvar LISTING_TITLE_SELECTOR = '[data-listing-page-title]';\nvar LISTING_ACTIVE_CLASS = 'listing__item--active';\nvar ICON_DOWN = 'icon-arrow-down';\nvar ICON_UP = 'icon-arrow-up';\nvar IS_OPEN = 'is-open';\nvar clickEvent = 'click';\nvar TOGGLE_SELECTOR = '[data-dropdown-toggle]';\nvar ARIA = 'aria-hidden';\nvar keys = {\n    ESC: 27,\n    ENTER: 13,\n    SPACE: 32\n};\n/**\n * Singleton controller and registry for DropDown components.\n *\n * Mostly used to maintain open/closed state of components and easily\n * toggle them when the focus changes.\n */\nvar DropDownController = {\n    dropDowns: [],\n    closeAllExcept: function (dropDown) {\n        var index = this.dropDowns.indexOf(dropDown);\n        this.dropDowns.forEach(function (item, i) {\n            if (i !== index && item.state.isOpen) {\n                item.closeDropDown();\n            }\n        });\n    },\n    add: function (dropDown) {\n        this.dropDowns.push(dropDown);\n    },\n    get: function () {\n        return this.dropDowns;\n    },\n    getByIndex: function (index) {\n        return this.dropDowns[index];\n    },\n    getOpenDropDown: function () {\n        var needle = null;\n        this.dropDowns.forEach(function (item) {\n            if (item.state.isOpen) {\n                needle = item;\n            }\n        });\n        return needle;\n    }\n};\n/**\n * DropDown component\n *\n * Template: _button_with_dropdown.html\n *\n * Can contain a list of links\n * Controllable via a toggle class or the keyboard.\n */\nfunction DropDown(el, registry) {\n    if (!el || !registry) {\n        if ('error' in console) {\n            // eslint-disable-next-line no-console\n            console.error('A dropdown was created without an element or the DropDownController.\\nMake sure to pass both to your component.');\n            return;\n        }\n    }\n    this.el = el;\n    this.$parent = (0, jquery_1[\"default\"])(el).parents(LISTING_TITLE_SELECTOR);\n    this.state = {\n        isOpen: false\n    };\n    this.registry = registry;\n    this.clickOutsideDropDown = this.clickOutsideDropDown.bind(this);\n    this.closeDropDown = this.closeDropDown.bind(this);\n    this.openDropDown = this.openDropDown.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyEvent = this.handleKeyEvent.bind(this);\n    el.addEventListener(clickEvent, this.handleClick);\n    el.addEventListener('keydown', this.handleKeyEvent);\n    this.$parent.data('close', this.closeDropDown);\n}\nDropDown.prototype = {\n    handleKeyEvent: function (e) {\n        var validTriggers = [keys.SPACE, keys.ENTER];\n        if (validTriggers.indexOf(e.which) > -1) {\n            e.preventDefault();\n            this.handleClick(e);\n        }\n    },\n    handleClick: function (e) {\n        if (!this.state.isOpen) {\n            this.openDropDown(e);\n        }\n        else {\n            this.closeDropDown(e);\n        }\n    },\n    openDropDown: function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var el = this.el;\n        var $parent = this.$parent;\n        var toggle = el.querySelector(TOGGLE_SELECTOR);\n        this.state.isOpen = true;\n        this.registry.closeAllExcept(this);\n        el.classList.add(IS_OPEN);\n        el.setAttribute(ARIA, false);\n        toggle.classList.remove(ICON_DOWN);\n        toggle.classList.add(ICON_UP);\n        document.addEventListener(clickEvent, this.clickOutsideDropDown, false);\n        $parent.addClass(LISTING_ACTIVE_CLASS);\n    },\n    closeDropDown: function () {\n        this.state.isOpen = false;\n        var el = this.el;\n        var $parent = this.$parent;\n        var toggle = el.querySelector(TOGGLE_SELECTOR);\n        document.removeEventListener(clickEvent, this.clickOutsideDropDown, false);\n        el.classList.remove(IS_OPEN);\n        toggle.classList.add(ICON_DOWN);\n        toggle.classList.remove(ICON_UP);\n        el.setAttribute(ARIA, true);\n        $parent.removeClass(LISTING_ACTIVE_CLASS);\n    },\n    clickOutsideDropDown: function (e) {\n        var el = this.el;\n        var relTarget = e.relatedTarget || e.toElement;\n        if (!(0, jquery_1[\"default\"])(relTarget).parents().is(el)) {\n            this.closeDropDown();\n        }\n    }\n};\nfunction initDropDown() {\n    var dropDown = new DropDown(this, DropDownController);\n    DropDownController.add(dropDown);\n}\nfunction handleKeyPress(e) {\n    if (e.which === keys.ESC) {\n        var open_1 = DropDownController.getOpenDropDown();\n        if (open_1) {\n            open_1.closeDropDown();\n        }\n    }\n}\nfunction initDropDowns() {\n    (0, jquery_1[\"default\"])(DROPDOWN_SELECTOR).each(initDropDown);\n    (0, jquery_1[\"default\"])(document).on('keydown', handleKeyPress);\n}\n(0, jquery_1[\"default\"])(document).ready(initDropDowns);\nwagtail.ui.initDropDowns = initDropDowns;\nwagtail.ui.DropDownController = DropDownController;\n(0, jquery_1[\"default\"])(document).ready(initButtonSelects_1.initButtonSelects);\nwindow.wagtail = wagtail;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/entrypoints/admin/core.js\n");

/***/ }),

/***/ "./client/src/includes/initButtonSelects.ts":
/*!**************************************************!*\
  !*** ./client/src/includes/initButtonSelects.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.initButtonSelects = void 0;\n/**\n * Initialise button selectors\n */\nvar initButtonSelects = function () {\n    document.querySelectorAll('.button-select').forEach(function (element) {\n        var inputElement = element.querySelector('input[type=\"hidden\"]');\n        if (!inputElement) {\n            return;\n        }\n        element\n            .querySelectorAll('.button-select__option')\n            .forEach(function (buttonElement) {\n            buttonElement.addEventListener('click', function (event) {\n                event.preventDefault();\n                inputElement.value = buttonElement.value;\n                element\n                    .querySelectorAll('.button-select__option--selected')\n                    .forEach(function (selectedButtonElement) {\n                    selectedButtonElement.classList.remove('button-select__option--selected');\n                });\n                buttonElement.classList.add('button-select__option--selected');\n            });\n        });\n    });\n};\nexports.initButtonSelects = initButtonSelects;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2luY2x1ZGVzL2luaXRCdXR0b25TZWxlY3RzLnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWd0YWlsLy4vY2xpZW50L3NyYy9pbmNsdWRlcy9pbml0QnV0dG9uU2VsZWN0cy50cz9kOTExIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuaW5pdEJ1dHRvblNlbGVjdHMgPSB2b2lkIDA7XG4vKipcbiAqIEluaXRpYWxpc2UgYnV0dG9uIHNlbGVjdG9yc1xuICovXG52YXIgaW5pdEJ1dHRvblNlbGVjdHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJ1dHRvbi1zZWxlY3QnKS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgIHZhciBpbnB1dEVsZW1lbnQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W3R5cGU9XCJoaWRkZW5cIl0nKTtcbiAgICAgICAgaWYgKCFpbnB1dEVsZW1lbnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBlbGVtZW50XG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvckFsbCgnLmJ1dHRvbi1zZWxlY3RfX29wdGlvbicpXG4gICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoYnV0dG9uRWxlbWVudCkge1xuICAgICAgICAgICAgYnV0dG9uRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgaW5wdXRFbGVtZW50LnZhbHVlID0gYnV0dG9uRWxlbWVudC52YWx1ZTtcbiAgICAgICAgICAgICAgICBlbGVtZW50XG4gICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKCcuYnV0dG9uLXNlbGVjdF9fb3B0aW9uLS1zZWxlY3RlZCcpXG4gICAgICAgICAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uIChzZWxlY3RlZEJ1dHRvbkVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRCdXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2J1dHRvbi1zZWxlY3RfX29wdGlvbi0tc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2J1dHRvbi1zZWxlY3RfX29wdGlvbi0tc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG5leHBvcnRzLmluaXRCdXR0b25TZWxlY3RzID0gaW5pdEJ1dHRvblNlbGVjdHM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/src/includes/initButtonSelects.ts\n");

/***/ }),

/***/ "./client/src/includes/initTagField.ts":
/*!*********************************************!*\
  !*** ./client/src/includes/initTagField.ts ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.initTagField = void 0;\nvar jquery_1 = __importDefault(__webpack_require__(/*! jquery */ \"jquery\"));\n/**\n * Initialises the tag fields using the jQuery tagit widget\n *\n * @param id - element id to initialise against\n * @param source -  auto complete URL source\n * @param options - Other options passed to jQuery tagit\n */\nvar initTagField = function (id, source, options) {\n    var tagFieldElement = document.getElementById(id);\n    if (!tagFieldElement)\n        return;\n    var finalOptions = __assign({ autocomplete: { source: source }, preprocessTag: function (val) {\n            // Double quote a tag if it contains a space\n            // and if it isn't already quoted.\n            if (val && val[0] !== '\"' && val.indexOf(' ') > -1) {\n                return '\"' + val + '\"';\n            }\n            return val;\n        } }, options);\n    (0, jquery_1[\"default\"])('#' + id).tagit(finalOptions);\n};\nexports.initTagField = initTagField;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2luY2x1ZGVzL2luaXRUYWdGaWVsZC50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9jbGllbnQvc3JjL2luY2x1ZGVzL2luaXRUYWdGaWVsZC50cz9jMzAyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmluaXRUYWdGaWVsZCA9IHZvaWQgMDtcbnZhciBqcXVlcnlfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwianF1ZXJ5XCIpKTtcbi8qKlxuICogSW5pdGlhbGlzZXMgdGhlIHRhZyBmaWVsZHMgdXNpbmcgdGhlIGpRdWVyeSB0YWdpdCB3aWRnZXRcbiAqXG4gKiBAcGFyYW0gaWQgLSBlbGVtZW50IGlkIHRvIGluaXRpYWxpc2UgYWdhaW5zdFxuICogQHBhcmFtIHNvdXJjZSAtICBhdXRvIGNvbXBsZXRlIFVSTCBzb3VyY2VcbiAqIEBwYXJhbSBvcHRpb25zIC0gT3RoZXIgb3B0aW9ucyBwYXNzZWQgdG8galF1ZXJ5IHRhZ2l0XG4gKi9cbnZhciBpbml0VGFnRmllbGQgPSBmdW5jdGlvbiAoaWQsIHNvdXJjZSwgb3B0aW9ucykge1xuICAgIHZhciB0YWdGaWVsZEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgaWYgKCF0YWdGaWVsZEVsZW1lbnQpXG4gICAgICAgIHJldHVybjtcbiAgICB2YXIgZmluYWxPcHRpb25zID0gX19hc3NpZ24oeyBhdXRvY29tcGxldGU6IHsgc291cmNlOiBzb3VyY2UgfSwgcHJlcHJvY2Vzc1RhZzogZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICAgICAgLy8gRG91YmxlIHF1b3RlIGEgdGFnIGlmIGl0IGNvbnRhaW5zIGEgc3BhY2VcbiAgICAgICAgICAgIC8vIGFuZCBpZiBpdCBpc24ndCBhbHJlYWR5IHF1b3RlZC5cbiAgICAgICAgICAgIGlmICh2YWwgJiYgdmFsWzBdICE9PSAnXCInICYmIHZhbC5pbmRleE9mKCcgJykgPiAtMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiAnXCInICsgdmFsICsgJ1wiJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgIH0gfSwgb3B0aW9ucyk7XG4gICAgKDAsIGpxdWVyeV8xW1wiZGVmYXVsdFwiXSkoJyMnICsgaWQpLnRhZ2l0KGZpbmFsT3B0aW9ucyk7XG59O1xuZXhwb3J0cy5pbml0VGFnRmllbGQgPSBpbml0VGFnRmllbGQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/src/includes/initTagField.ts\n");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ ((module) => {

module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"core": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = globalThis["webpackChunkwagtail"] = globalThis["webpackChunkwagtail"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["wagtail/admin/static/wagtailadmin/js/vendor"], () => (__webpack_require__("./client/src/entrypoints/admin/core.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;