/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/events/events.js\n");

/***/ }),

/***/ "./client/src/components/StreamField/blocks/BaseSequenceBlock.js":
/*!***********************************************************************!*\
  !*** ./client/src/components/StreamField/blocks/BaseSequenceBlock.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/* eslint-disable no-underscore-dangle */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.BaseSequenceBlock = exports.BaseInsertionControl = exports.BaseSequenceChild = void 0;\n/* global $ */\nvar uuid_1 = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\nvar events_1 = __importDefault(__webpack_require__(/*! events */ \"./node_modules/events/events.js\"));\nvar text_1 = __webpack_require__(/*! ../../../utils/text */ \"./client/src/utils/text.ts\");\nvar panels_1 = __webpack_require__(/*! ../../../includes/panels */ \"./client/src/includes/panels.ts\");\nvar range_1 = __webpack_require__(/*! ../../../utils/range */ \"./client/src/utils/range.ts\");\nvar ActionButton = /** @class */ (function () {\n    function ActionButton(sequenceChild) {\n        this.sequenceChild = sequenceChild;\n    }\n    ActionButton.prototype.render = function (container) {\n        var _this = this;\n        var label = this.sequenceChild.strings[this.labelIdentifier] || this.labelIdentifier;\n        this.dom = $(\"\\n      <button type=\\\"button\\\" class=\\\"button button--icon text-replace white\\\" title=\\\"\".concat((0, text_1.escapeHtml)(label), \"\\\">\\n        <svg class=\\\"icon icon-\").concat((0, text_1.escapeHtml)(this.icon), \"\\\" aria-hidden=\\\"true\\\">\\n          <use href=\\\"#icon-\").concat((0, text_1.escapeHtml)(this.icon), \"\\\"></use>\\n        </svg>\\n      </button>\\n    \"));\n        this.dom.on('click', function () {\n            if (_this.onClick)\n                _this.onClick();\n            return false; // don't propagate to header's onclick event (which collapses the block)\n        });\n        $(container).append(this.dom);\n        if (this.enableEvent) {\n            this.sequenceChild.on(this.enableEvent, function () {\n                _this.enable();\n            });\n        }\n        if (this.disableEvent) {\n            this.sequenceChild.on(this.disableEvent, function () {\n                _this.disable();\n            });\n        }\n        if (this.initiallyDisabled) {\n            this.disable();\n        }\n    };\n    ActionButton.prototype.enable = function () {\n        this.dom.removeAttr('disabled');\n    };\n    ActionButton.prototype.disable = function () {\n        this.dom.attr('disabled', 'true');\n    };\n    return ActionButton;\n}());\nvar MoveUpButton = /** @class */ (function (_super) {\n    __extends(MoveUpButton, _super);\n    function MoveUpButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.enableEvent = 'enableMoveUp';\n        _this.disableEvent = 'disableMoveUp';\n        _this.initiallyDisabled = true;\n        _this.icon = 'arrow-up';\n        _this.labelIdentifier = 'MOVE_UP';\n        return _this;\n    }\n    MoveUpButton.prototype.onClick = function () {\n        this.sequenceChild.moveUp();\n    };\n    return MoveUpButton;\n}(ActionButton));\nvar MoveDownButton = /** @class */ (function (_super) {\n    __extends(MoveDownButton, _super);\n    function MoveDownButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.enableEvent = 'enableMoveDown';\n        _this.disableEvent = 'disableMoveDown';\n        _this.initiallyDisabled = true;\n        _this.icon = 'arrow-down';\n        _this.labelIdentifier = 'MOVE_DOWN';\n        return _this;\n    }\n    MoveDownButton.prototype.onClick = function () {\n        this.sequenceChild.moveDown();\n    };\n    return MoveDownButton;\n}(ActionButton));\nvar DuplicateButton = /** @class */ (function (_super) {\n    __extends(DuplicateButton, _super);\n    function DuplicateButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.enableEvent = 'enableDuplication';\n        _this.disableEvent = 'disableDuplication';\n        _this.icon = 'duplicate';\n        _this.labelIdentifier = 'DUPLICATE';\n        return _this;\n    }\n    DuplicateButton.prototype.onClick = function () {\n        this.sequenceChild.duplicate({ animate: true });\n    };\n    return DuplicateButton;\n}(ActionButton));\nvar DeleteButton = /** @class */ (function (_super) {\n    __extends(DeleteButton, _super);\n    function DeleteButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.icon = 'bin';\n        _this.labelIdentifier = 'DELETE';\n        return _this;\n    }\n    DeleteButton.prototype.onClick = function () {\n        this.sequenceChild[\"delete\"]({ animate: true });\n    };\n    return DeleteButton;\n}(ActionButton));\nvar BaseSequenceChild = /** @class */ (function (_super) {\n    __extends(BaseSequenceChild, _super);\n    function BaseSequenceChild(blockDef, placeholder, prefix, index, id, initialState, sequence, opts) {\n        var _this = this;\n        _this.blockDef = blockDef;\n        _this.type = blockDef.name;\n        _this.prefix = prefix;\n        _this.index = index;\n        _this.id = id;\n        _this.sequence = sequence;\n        var animate = opts && opts.animate;\n        var focus = opts && opts.focus;\n        var collapsed = opts && opts.collapsed;\n        _this.strings = (opts && opts.strings) || {};\n        var panelId = \"block-\".concat(id, \"-section\");\n        var headingId = \"block-\".concat(id, \"-heading\");\n        var contentId = \"block-\".concat(id, \"-content\");\n        var blockTypeIcon = (0, text_1.escapeHtml)(_this.blockDef.meta.icon);\n        var blockTypeLabel = (0, text_1.escapeHtml)(_this.blockDef.meta.label);\n        var dom = $(\"\\n      <div \".concat(_this.id\n            ? \"data-contentpath=\\\"\".concat((0, text_1.escapeHtml)(_this.id), \"\\\"\")\n            : 'data-contentpath-disabled', \">\\n        <input type=\\\"hidden\\\"  name=\\\"\").concat(_this.prefix, \"-deleted\\\" value=\\\"\\\">\\n        <input type=\\\"hidden\\\" name=\\\"\").concat(_this.prefix, \"-order\\\" value=\\\"\").concat(index, \"\\\">\\n        <input type=\\\"hidden\\\" name=\\\"\").concat(_this.prefix, \"-type\\\" value=\\\"\").concat((0, text_1.escapeHtml)(_this.type || ''), \"\\\">\\n        <input type=\\\"hidden\\\" name=\\\"\").concat(_this.prefix, \"-id\\\" value=\\\"\").concat((0, text_1.escapeHtml)(_this.id || ''), \"\\\">\\n        <section class=\\\"w-panel w-panel--nested\\\" id=\\\"\").concat(panelId, \"\\\" aria-labelledby=\\\"\").concat(headingId, \"\\\" data-panel>\\n          <div class=\\\"w-panel__header\\\">\\n            <a class=\\\"w-panel__anchor w-panel__anchor--prefix\\\" href=\\\"#\").concat(panelId, \"\\\" aria-labelledby=\\\"\").concat(headingId, \"\\\" data-panel-anchor>\\n              <svg class=\\\"icon icon-link w-panel__icon\\\" aria-hidden=\\\"true\\\">\\n                <use href=\\\"#icon-link\\\"></use>\\n              </svg>\\n            </a>\\n            <button class=\\\"w-panel__toggle\\\" type=\\\"button\\\" aria-label=\\\"\").concat('Toggle section', \"\\\" aria-describedby=\\\"\").concat(headingId, \"\\\" data-panel-toggle aria-controls=\\\"\").concat(contentId, \"\\\" aria-expanded=\\\"true\\\">\\n              <svg class=\\\"icon icon-\").concat(blockTypeIcon, \" w-panel__icon\\\" aria-hidden=\\\"true\\\">\\n                <use href=\\\"#icon-\").concat(blockTypeIcon, \"\\\"></use>\\n              </svg>\\n            </button>\\n            <h2 class=\\\"w-panel__heading w-panel__heading--label\\\" aria-level=\\\"3\\\" id=\\\"\").concat(headingId, \"\\\" data-panel-heading>\\n              <span data-panel-heading-text class=\\\"c-sf-block__title\\\"></span>\\n              <span class=\\\"c-sf-block__type\\\">\").concat(blockTypeLabel, \"</span>\\n              \").concat(blockDef.meta.required\n            ? '<span class=\"w-required-mark\" data-panel-required>*</span>'\n            : '', \"\\n            </h2>\\n            <a class=\\\"w-panel__anchor w-panel__anchor--suffix\\\" href=\\\"#\").concat(panelId, \"\\\" aria-labelledby=\\\"\").concat(headingId, \"\\\">\\n              <svg class=\\\"icon icon-link w-panel__icon\\\" aria-hidden=\\\"true\\\">\\n                <use href=\\\"#icon-link\\\"></use>\\n              </svg>\\n            </a>\\n            <div class=\\\"w-panel__divider\\\"></div>\\n            <div class=\\\"w-panel__controls\\\" data-panel-controls>\\n              <div class=\\\"w-panel__controls-cue\\\">\\n                <svg class=\\\"icon icon-dots-horizontal w-panel__icon\\\" aria-hidden=\\\"true\\\">\\n                  <use href=\\\"#icon-dots-horizontal\\\"></use>\\n                </svg>\\n              </div>\\n            </div>\\n          </div>\\n          <div id=\\\"\").concat(contentId, \"\\\" class=\\\"w-panel__content\\\">\\n            <div data-streamfield-block></div>\\n          </div>\\n        </section>\\n      </div>\\n    \"));\n        $(placeholder).replaceWith(dom);\n        _this.element = dom.get(0);\n        var blockElement = dom.find('[data-streamfield-block]').get(0);\n        _this.actionsContainerElement = dom.find('[data-panel-controls]').get(0);\n        _this.titleElement = dom.find('[data-panel-heading-text]');\n        _this.toggleElement = _this.element.querySelector('[data-panel-toggle]');\n        _this.deletedInput = dom.find(\"input[name=\\\"\".concat(_this.prefix, \"-deleted\\\"]\"));\n        _this.indexInput = dom.find(\"input[name=\\\"\".concat(_this.prefix, \"-order\\\"]\"));\n        _this.addActionButton(new MoveUpButton(_this));\n        _this.addActionButton(new MoveDownButton(_this));\n        _this.addActionButton(new DuplicateButton(_this));\n        _this.addActionButton(new DeleteButton(_this));\n        var capabilities = new Map();\n        capabilities.set('duplicate', {\n            enabled: true,\n            fn: _this.duplicate\n        });\n        capabilities.set('split', {\n            enabled: true,\n            fn: _this.split.bind(_this)\n        });\n        capabilities.set('addSibling', {\n            enabled: true,\n            fn: _this.addSibling.bind(_this),\n            blockGroups: _this.sequence.getBlockGroups(),\n            getBlockCount: _this.sequence.getBlockCount.bind(_this.sequence),\n            getBlockMax: _this.sequence.getBlockMax.bind(_this.sequence)\n        });\n        _this.block = _this.blockDef.render(blockElement, _this.prefix + '-value', initialState, undefined, capabilities);\n        (0, panels_1.initCollapsiblePanel)(_this.element.querySelector('[data-panel-toggle]'));\n        if (collapsed) {\n            _this.collapse();\n        }\n        _this.toggleElement.addEventListener('wagtail:panel-toggle', function () {\n            var label = _this.getTextLabel({ maxLength: 50 });\n            _this.titleElement.text(label || '');\n        });\n        // Set in initialisation regardless of block state for screen reader users.\n        var textLabel = _this.getTextLabel({ maxLength: 50 });\n        _this.titleElement.text(textLabel || '');\n        if (animate) {\n            dom.hide();\n            setTimeout(function () {\n                dom.slideDown();\n                if (focus) {\n                    // focus this field if we can do so without obtrusive UI behaviour\n                    _this.block.focus({ soft: true });\n                }\n            }, 10);\n        }\n        else if (focus) {\n            // focus this field if we can do so without obtrusive UI behaviour\n            _this.block.focus({ soft: true });\n        }\n        return _this;\n    }\n    BaseSequenceChild.prototype.addActionButton = function (button) {\n        button.render(this.actionsContainerElement);\n    };\n    BaseSequenceChild.prototype.addSibling = function (opts) {\n        this.sequence._onRequestInsert(this.index + 1, opts);\n    };\n    BaseSequenceChild.prototype.moveUp = function () {\n        this.sequence.moveBlockUp(this.index);\n    };\n    BaseSequenceChild.prototype.moveDown = function () {\n        this.sequence.moveBlockDown(this.index);\n    };\n    BaseSequenceChild.prototype.duplicate = function (opts) {\n        this.sequence.duplicateBlock(this.index, opts);\n    };\n    BaseSequenceChild.prototype[\"delete\"] = function (opts) {\n        this.sequence.deleteBlock(this.index, opts);\n    };\n    BaseSequenceChild.prototype.markDeleted = function (_a) {\n        var _b = _a.animate, animate = _b === void 0 ? false : _b;\n        this.deletedInput.val('1');\n        if (animate) {\n            $(this.element).slideUp().dequeue().fadeOut().attr('aria-hidden', 'true');\n        }\n        else {\n            $(this.element).hide().attr('aria-hidden', 'true');\n        }\n        // Inform the comment app that the content path of this block is no longer valid\n        // This will hide any comments that were previously on the block\n        var contentPath = this.getContentPath();\n        if (contentPath && window.comments.commentApp) {\n            window.comments.commentApp.invalidateContentPath(contentPath);\n        }\n    };\n    BaseSequenceChild.prototype.getContentPath = function () {\n        var _a;\n        return (_a = window.comments) === null || _a === void 0 ? void 0 : _a.getContentPath(this.element);\n    };\n    BaseSequenceChild.prototype.enableDuplication = function () {\n        this.emit('enableDuplication');\n        if (this.block && this.block.setCapabilityOptions) {\n            this.block.setCapabilityOptions('duplicate', { enabled: true });\n        }\n    };\n    BaseSequenceChild.prototype.disableDuplication = function () {\n        this.emit('disableDuplication');\n        if (this.block && this.block.setCapabilityOptions) {\n            this.block.setCapabilityOptions('duplicate', { enabled: false });\n        }\n    };\n    BaseSequenceChild.prototype.enableSplit = function () {\n        if (this.block && this.block.setCapabilityOptions) {\n            this.block.setCapabilityOptions('split', { enabled: true });\n        }\n    };\n    BaseSequenceChild.prototype.disableSplit = function () {\n        if (this.block && this.block.setCapabilityOptions) {\n            this.block.setCapabilityOptions('split', { enabled: false });\n        }\n    };\n    BaseSequenceChild.prototype.enableMoveUp = function () {\n        this.emit('enableMoveUp');\n    };\n    BaseSequenceChild.prototype.disableMoveUp = function () {\n        this.emit('disableMoveUp');\n    };\n    BaseSequenceChild.prototype.enableMoveDown = function () {\n        this.emit('enableMoveDown');\n    };\n    BaseSequenceChild.prototype.disableMoveDown = function () {\n        this.emit('disableMoveDown');\n    };\n    BaseSequenceChild.prototype.setIndex = function (newIndex) {\n        this.index = newIndex;\n        this.indexInput.val(newIndex);\n    };\n    BaseSequenceChild.prototype.setError = function (error) {\n        this.block.setError(error);\n    };\n    BaseSequenceChild.prototype.focus = function (opts) {\n        this.block.focus(opts);\n    };\n    BaseSequenceChild.prototype.getTextLabel = function (opts) {\n        if (this.block.getTextLabel) {\n            return this.block.getTextLabel(opts);\n        }\n        return null;\n    };\n    BaseSequenceChild.prototype.collapse = function () {\n        (0, panels_1.toggleCollapsiblePanel)(this.toggleElement, false);\n    };\n    BaseSequenceChild.prototype.getDuplicatedState = function () {\n        return {\n            id: (0, uuid_1.v4)(),\n            value: this.block.getDuplicatedState === undefined\n                ? this.block.getState()\n                : this.block.getDuplicatedState()\n        };\n    };\n    return BaseSequenceChild;\n}(events_1[\"default\"]));\nexports.BaseSequenceChild = BaseSequenceChild;\nvar BaseInsertionControl = /** @class */ (function () {\n    /* Base class for controls that appear between blocks in a sequence, to allow inserting new\n    blocks at that point. Subclasses should render an HTML structure with a single root element\n    (replacing the placeholder passed to the constructor) and set it as this.element.\n    When the user requests to insert a block, we call onRequestInsert passing the index number\n    and a dict of control-specific options. */\n    function BaseInsertionControl(placeholder, opts) {\n        this.index = opts && opts.index;\n        this.onRequestInsert = opts && opts.onRequestInsert;\n    }\n    BaseInsertionControl.prototype.setIndex = function (newIndex) {\n        this.index = newIndex;\n    };\n    BaseInsertionControl.prototype[\"delete\"] = function (_a) {\n        var _b = _a.animate, animate = _b === void 0 ? false : _b;\n        if (animate) {\n            $(this.element).slideUp().attr('aria-hidden', 'true');\n        }\n        else {\n            $(this.element).hide().attr('aria-hidden', 'true');\n        }\n    };\n    return BaseInsertionControl;\n}());\nexports.BaseInsertionControl = BaseInsertionControl;\nvar BaseSequenceBlock = /** @class */ (function () {\n    function BaseSequenceBlock() {\n    }\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    BaseSequenceBlock.prototype._createChild = function (blockDef, placeholder, prefix, index, id, initialState, sequence, opts) {\n        throw new Error('not implemented');\n    };\n    BaseSequenceBlock.prototype._createInsertionControl = function (placeholder, opts) {\n        throw new Error('not implemented');\n    };\n    BaseSequenceBlock.prototype._getChildDataForInsertion = function (opts) {\n        throw new Error('not implemented');\n    };\n    BaseSequenceBlock.prototype.getBlockGroups = function () {\n        throw new Error('not implemented');\n    };\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    BaseSequenceBlock.prototype.clear = function () {\n        var _this = this;\n        this.countInput.val(0);\n        this.sequenceContainer.empty();\n        this.children = [];\n        this.blockCounter = 0;\n        // Create initial insertion control\n        var placeholder = document.createElement('div');\n        this.sequenceContainer.append(placeholder);\n        this.inserters = [\n            this._createInsertionControl(placeholder, {\n                index: 0,\n                onRequestInsert: function (newIndex, opts) {\n                    _this._onRequestInsert(newIndex, opts);\n                },\n                strings: this.blockDef.meta.strings\n            }),\n        ];\n        this.blockCountChanged();\n    };\n    BaseSequenceBlock.prototype._onRequestInsert = function (index, opts) {\n        /* handler for an 'insert new block' action */\n        var _a = __read(this._getChildDataForInsertion(opts), 3), blockDef = _a[0], initialState = _a[1], id = _a[2];\n        this._insert(blockDef, initialState, id || null, index, {\n            animate: true,\n            focus: true\n        });\n    };\n    BaseSequenceBlock.prototype.blockCountChanged = function () {\n        /* Called whenever the block count has changed; subclasses can override this to apply\n        checks on max block count and disable insert / duplicate controls accordingly */\n    };\n    BaseSequenceBlock.prototype._insert = function (childBlockDef, initialState, id, index, opts) {\n        var _this = this;\n        var prefix = this.prefix + '-' + this.blockCounter;\n        var animate = opts && opts.animate;\n        var focus = opts && opts.focus;\n        var collapsed = opts && opts.collapsed;\n        this.blockCounter += 1;\n        /*\n        a new inserter and block will be inserted AFTER the inserter with the given index;\n        e.g if there are 3 blocks the children of sequenceContainer will be\n        [inserter 0, block 0, inserter 1, block 1, inserter 2, block 2, inserter 3]\n        and inserting a new block at index 1 will create a new block 1 and inserter 2 after the\n        current inserter 1, and increment everything after that point\n        */\n        var existingInserterElement = this.inserters[index].element;\n        var blockPlaceholder = document.createElement('div');\n        var inserterPlaceholder = document.createElement('div');\n        $(blockPlaceholder).insertAfter(existingInserterElement);\n        $(inserterPlaceholder).insertAfter(blockPlaceholder);\n        /* shuffle up indexes of all blocks / inserters above this index */\n        (0, range_1.range)(index, this.children.length).forEach(function (i) {\n            _this.children[i].setIndex(i + 1);\n        });\n        (0, range_1.range)(index + 1, this.inserters.length).forEach(function (i) {\n            _this.inserters[i].setIndex(i + 1);\n        });\n        var child = this._createChild(childBlockDef, blockPlaceholder, prefix, index, id, initialState, this, {\n            animate: animate,\n            focus: focus,\n            collapsed: collapsed,\n            strings: this.blockDef.meta.strings\n        });\n        this.children.splice(index, 0, child);\n        var inserter = this._createInsertionControl(inserterPlaceholder, {\n            index: index + 1,\n            onRequestInsert: function (newIndex, inserterOpts) {\n                _this._onRequestInsert(newIndex, inserterOpts);\n            },\n            strings: this.blockDef.meta.strings,\n            animate: animate\n        });\n        this.inserters.splice(index + 1, 0, inserter);\n        this.countInput.val(this.blockCounter);\n        var isFirstChild = index === 0;\n        var isLastChild = index === this.children.length - 1;\n        if (!isFirstChild) {\n            child.enableMoveUp();\n            if (isLastChild) {\n                /* previous child (which was previously the last one) can now move down */\n                this.children[index - 1].enableMoveDown();\n            }\n        }\n        if (!isLastChild) {\n            child.enableMoveDown();\n            if (isFirstChild) {\n                /* next child (which was previously the first one) can now move up */\n                this.children[index + 1].enableMoveUp();\n            }\n        }\n        this.blockCountChanged();\n        return child;\n    };\n    BaseSequenceBlock.prototype.deleteBlock = function (index, opts) {\n        var _this = this;\n        var animate = opts && opts.animate;\n        this.children[index].markDeleted({ animate: animate });\n        this.inserters[index][\"delete\"]({ animate: animate });\n        this.children.splice(index, 1);\n        this.inserters.splice(index, 1);\n        /* index numbers of children / inserters above this index now need updating to match\n        their array indexes */\n        (0, range_1.range)(index, this.children.length).forEach(function (i) {\n            _this.children[i].setIndex(i);\n        });\n        (0, range_1.range)(index, this.inserters.length).forEach(function (i) {\n            _this.inserters[i].setIndex(i);\n        });\n        if (index === 0 && this.children.length > 0) {\n            /* we have removed the first child; the new first child cannot be moved up */\n            this.children[0].disableMoveUp();\n        }\n        if (index === this.children.length && this.children.length > 0) {\n            /* we have removed the last child; the new last child cannot be moved down */\n            this.children[this.children.length - 1].disableMoveDown();\n        }\n        this.blockCountChanged();\n    };\n    BaseSequenceBlock.prototype.moveBlock = function (oldIndex, newIndex) {\n        var _this = this;\n        if (oldIndex === newIndex)\n            return;\n        var inserterToMove = this.inserters[oldIndex];\n        var childToMove = this.children[oldIndex];\n        /* move HTML elements */\n        if (newIndex > oldIndex) {\n            $(inserterToMove.element).insertAfter(this.children[newIndex].element);\n        }\n        else {\n            $(inserterToMove.element).insertBefore(this.inserters[newIndex].element);\n        }\n        $(childToMove.element).insertAfter(inserterToMove.element);\n        /* reorder items in the `inserters` and `children` arrays */\n        this.inserters.splice(oldIndex, 1);\n        this.inserters.splice(newIndex, 0, inserterToMove);\n        this.children.splice(oldIndex, 1);\n        this.children.splice(newIndex, 0, childToMove);\n        /* update index properties of moved items */\n        if (newIndex > oldIndex) {\n            (0, range_1.range)(oldIndex, newIndex + 1).forEach(function (i) {\n                _this.inserters[i].setIndex(i);\n                _this.children[i].setIndex(i);\n            });\n        }\n        else {\n            (0, range_1.range)(newIndex, oldIndex + 1).forEach(function (i) {\n                _this.inserters[i].setIndex(i);\n                _this.children[i].setIndex(i);\n            });\n        }\n        /* enable/disable up/down arrows as required */\n        var maxIndex = this.children.length - 1;\n        if (oldIndex === 0) {\n            childToMove.enableMoveUp();\n            this.children[0].disableMoveUp();\n        }\n        if (oldIndex === maxIndex) {\n            childToMove.enableMoveDown();\n            this.children[maxIndex].disableMoveDown();\n        }\n        if (newIndex === 0) {\n            childToMove.disableMoveUp();\n            this.children[1].enableMoveUp();\n        }\n        if (newIndex === maxIndex) {\n            childToMove.disableMoveDown();\n            this.children[maxIndex - 1].enableMoveDown();\n        }\n    };\n    BaseSequenceBlock.prototype.moveBlockUp = function (index) {\n        this.moveBlock(index, index - 1);\n    };\n    BaseSequenceBlock.prototype.moveBlockDown = function (index) {\n        this.moveBlock(index, index + 1);\n    };\n    BaseSequenceBlock.prototype.setState = function (values) {\n        var _this = this;\n        this.clear();\n        values.forEach(function (val, i) {\n            _this.insert(val, i);\n        });\n    };\n    BaseSequenceBlock.prototype.getState = function () {\n        return this.children.map(function (child) { return child.getState(); });\n    };\n    BaseSequenceBlock.prototype.getDuplicatedState = function () {\n        return this.children.map(function (child) { return child.getDuplicatedState(); });\n    };\n    BaseSequenceBlock.prototype.getValue = function () {\n        return this.children.map(function (child) { return child.getValue(); });\n    };\n    BaseSequenceBlock.prototype.getTextLabel = function (opts) {\n        var e_1, _a;\n        /* Use as many child text labels as we can fit into maxLength */\n        var maxLength = opts && opts.maxLength;\n        var result = '';\n        try {\n            for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var childLabel = child.getTextLabel({ maxLength: maxLength });\n                if (childLabel) {\n                    if (!result) {\n                        // always use the first child, truncated as necessary\n                        result = childLabel;\n                    }\n                    else {\n                        var newResult = result + ', ' + childLabel;\n                        if (maxLength && newResult.length > maxLength - 1) {\n                            // too long, so don't add this; return the current list with an ellipsis instead\n                            if (!result.endsWith('…'))\n                                result += '…';\n                            return result;\n                        }\n                        result = newResult;\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return result;\n    };\n    BaseSequenceBlock.prototype.focus = function (opts) {\n        if (this.children.length) {\n            this.children[0].focus(opts);\n        }\n    };\n    return BaseSequenceBlock;\n}());\nexports.BaseSequenceBlock = BaseSequenceBlock;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/StreamField/blocks/BaseSequenceBlock.js\n");

/***/ }),

/***/ "./client/src/components/StreamField/blocks/FieldBlock.js":
/*!****************************************************************!*\
  !*** ./client/src/components/StreamField/blocks/FieldBlock.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.FieldBlockDefinition = exports.FieldBlock = void 0;\n/* global $ */\nvar react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index-exposed.js\"));\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"./node_modules/react/index-exposed.js\"));\nvar text_1 = __webpack_require__(/*! ../../../utils/text */ \"./client/src/utils/text.ts\");\nvar Icon_1 = __importDefault(__webpack_require__(/*! ../../Icon/Icon */ \"./client/src/components/Icon/Icon.tsx\"));\nvar FieldBlock = /** @class */ (function () {\n    function FieldBlock(blockDef, placeholder, prefix, initialState, initialError, parentCapabilities) {\n        this.blockDef = blockDef;\n        this.type = blockDef.name;\n        // See field.html for the reference implementation of this markup.\n        var dom = $(\"\\n      <div class=\\\"w-field__wrapper\\\" data-field-wrapper>\\n        <div class=\\\"\".concat((0, text_1.escapeHtml)(this.blockDef.meta.classname), \"\\\" data-field>\\n          <div class=\\\"w-field__errors\\\" id=\\\"\").concat(prefix, \"-errors\\\" data-field-errors>\\n            <svg class=\\\"icon icon-warning w-field__errors-icon\\\" aria-hidden=\\\"true\\\" hidden><use href=\\\"#icon-warning\\\"></use></svg>\\n          </div>\\n          <div class=\\\"w-field__input\\\" data-field-input>\\n            <div data-streamfield-widget></div>\\n          </div>\\n          <div id=\\\"\").concat(prefix, \"-helptext\\\" data-field-help></div>\\n        </div>\\n      </div>\\n    \"));\n        $(placeholder).replaceWith(dom);\n        var widgetElement = dom.find('[data-streamfield-widget]').get(0);\n        this.element = dom[0];\n        this.field = this.element.querySelector('[data-field]');\n        this.parentCapabilities = parentCapabilities || new Map();\n        this.prefix = prefix;\n        try {\n            this.widget = this.blockDef.widget.render(widgetElement, prefix, prefix, initialState, this.parentCapabilities);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-console\n            console.error(e);\n            this.setError([\n                {\n                    messages: [\n                        'This widget failed to render, please check the console for details',\n                    ]\n                },\n            ]);\n            return;\n        }\n        this.idForLabel = this.widget.idForLabel;\n        if (this.blockDef.meta.helpText) {\n            var helpElement = document.createElement('p');\n            helpElement.classList.add('help');\n            helpElement.innerHTML = this.blockDef.meta.helpText; // unescaped, as per Django conventions\n            this.field.querySelector('[data-field-help]').appendChild(helpElement);\n        }\n        if (window.comments && this.blockDef.meta.showAddCommentButton) {\n            var addCommentButtonElement = document.createElement('button');\n            addCommentButtonElement.type = 'button';\n            addCommentButtonElement.setAttribute('aria-label', blockDef.meta.strings.ADD_COMMENT);\n            addCommentButtonElement.setAttribute('data-comment-add', '');\n            addCommentButtonElement.classList.add('w-field__comment-button', 'w-field__comment-button--add', 'u-hidden');\n            react_dom_1[\"default\"].render(react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null,\n                react_1[\"default\"].createElement(Icon_1[\"default\"], { name: \"comment-add\" }),\n                react_1[\"default\"].createElement(Icon_1[\"default\"], { name: \"comment-add-reversed\" })), addCommentButtonElement);\n            this.field.classList.add('w-field--commentable');\n            this.field\n                .querySelector('[data-field-input]')\n                .appendChild(addCommentButtonElement);\n            window.comments.initAddCommentButton(addCommentButtonElement);\n        }\n        if (initialError) {\n            this.setError(initialError);\n        }\n    }\n    FieldBlock.prototype.setCapabilityOptions = function (capability, options) {\n        Object.assign(this.parentCapabilities.get(capability), options);\n        if (this.widget && this.widget.setCapabilityOptions) {\n            this.widget.setCapabilityOptions(capability, options);\n        }\n    };\n    FieldBlock.prototype.setState = function (state) {\n        if (this.widget) {\n            this.widget.setState(state);\n        }\n    };\n    FieldBlock.prototype.setError = function (errorList) {\n        var errors = this.field.querySelector('[data-field-errors]');\n        errors\n            .querySelectorAll('.error-message')\n            .forEach(function (element) { return element.remove(); });\n        if (errorList) {\n            this.field.classList.add('w-field--error');\n            errors.querySelector('.icon').removeAttribute('hidden');\n            var errorElement = document.createElement('p');\n            errorElement.classList.add('error-message');\n            errorElement.innerHTML = errorList\n                .map(function (error) { return \"<span>\".concat((0, text_1.escapeHtml)(error.messages[0]), \"</span>\"); })\n                .join('');\n            errors.appendChild(errorElement);\n        }\n        else {\n            this.field.classList.remove('w-field--error');\n            errors.querySelector('.icon').setAttribute('hidden', 'true');\n        }\n    };\n    FieldBlock.prototype.getState = function () {\n        return this.widget.getState();\n    };\n    FieldBlock.prototype.getValue = function () {\n        return this.widget.getValue();\n    };\n    FieldBlock.prototype.getTextLabel = function (opts) {\n        if (this.widget.getTextLabel) {\n            return this.widget.getTextLabel(opts);\n        }\n        return null;\n    };\n    FieldBlock.prototype.focus = function (opts) {\n        if (this.widget) {\n            this.widget.focus(opts);\n        }\n    };\n    return FieldBlock;\n}());\nexports.FieldBlock = FieldBlock;\nvar FieldBlockDefinition = /** @class */ (function () {\n    function FieldBlockDefinition(name, widget, meta) {\n        this.name = name;\n        this.widget = widget;\n        this.meta = meta;\n    }\n    FieldBlockDefinition.prototype.render = function (placeholder, prefix, initialState, initialError, parentCapabilities) {\n        return new FieldBlock(this, placeholder, prefix, initialState, initialError, parentCapabilities);\n    };\n    return FieldBlockDefinition;\n}());\nexports.FieldBlockDefinition = FieldBlockDefinition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/StreamField/blocks/FieldBlock.js\n");

/***/ }),

/***/ "./client/src/components/StreamField/blocks/ListBlock.js":
/*!***************************************************************!*\
  !*** ./client/src/components/StreamField/blocks/ListBlock.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.ListBlockDefinition = exports.ListBlock = exports.ListBlockValidationError = void 0;\n/* eslint-disable no-underscore-dangle */\nvar uuid_1 = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\nvar BaseSequenceBlock_1 = __webpack_require__(/*! ./BaseSequenceBlock */ \"./client/src/components/StreamField/blocks/BaseSequenceBlock.js\");\nvar text_1 = __webpack_require__(/*! ../../../utils/text */ \"./client/src/utils/text.ts\");\nvar range_1 = __webpack_require__(/*! ../../../utils/range */ \"./client/src/utils/range.ts\");\n/* global $ */\nvar ListBlockValidationError = /** @class */ (function () {\n    function ListBlockValidationError(blockErrors, nonBlockErrors) {\n        this.blockErrors = blockErrors;\n        this.nonBlockErrors = nonBlockErrors;\n    }\n    return ListBlockValidationError;\n}());\nexports.ListBlockValidationError = ListBlockValidationError;\nvar ListChild = /** @class */ (function (_super) {\n    __extends(ListChild, _super);\n    function ListChild() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /*\n    wrapper for an item inside a ListBlock\n    */\n    ListChild.prototype.getState = function () {\n        return {\n            id: this.id,\n            value: this.block.getState()\n        };\n    };\n    ListChild.prototype.getValue = function () {\n        return this.block.getValue();\n    };\n    ListChild.prototype.setState = function (_a) {\n        var value = _a.value, id = _a.id;\n        this.block.setState(value);\n        this.id = id;\n    };\n    ListChild.prototype.setValue = function (value) {\n        this.block.setState(value);\n    };\n    ListChild.prototype.split = function (valueBefore, valueAfter, shouldMoveCommentFn, opts) {\n        this.sequence.splitBlock(this.index, valueBefore, valueAfter, shouldMoveCommentFn, opts);\n    };\n    return ListChild;\n}(BaseSequenceBlock_1.BaseSequenceChild));\nvar InsertPosition = /** @class */ (function (_super) {\n    __extends(InsertPosition, _super);\n    /*\n    Represents a position in the DOM where a new list item can be inserted.\n  \n    This renders a + button. Later, these could also be used to represent drop zones for drag+drop reordering.\n    */\n    function InsertPosition(placeholder, opts) {\n        var _this = _super.call(this, placeholder, opts) || this;\n        _this.onRequestInsert = opts && opts.onRequestInsert;\n        var animate = opts && opts.animate;\n        var button = $(\"\\n      <button type=\\\"button\\\" title=\\\"\".concat((0, text_1.escapeHtml)(opts.strings.ADD), \"\\\" data-streamfield-list-add\\n          class=\\\"c-sf-add-button c-sf-add-button--visible\\\">\\n        <svg class=\\\"icon icon-plus\\\" aria-hidden=\\\"true\\\"><use href=\\\"#icon-plus\\\"></use></svg>\\n      </button>\\n    \"));\n        $(placeholder).replaceWith(button);\n        _this.element = button.get(0);\n        button.click(function () {\n            if (_this.onRequestInsert) {\n                _this.onRequestInsert(_this.index);\n            }\n        });\n        if (animate) {\n            button.hide().slideDown();\n        }\n        return _this;\n    }\n    InsertPosition.prototype.enable = function () {\n        $(this.element).removeAttr('disabled');\n    };\n    InsertPosition.prototype.disable = function () {\n        $(this.element).attr('disabled', 'true');\n    };\n    return InsertPosition;\n}(BaseSequenceBlock_1.BaseInsertionControl));\nvar ListBlock = /** @class */ (function (_super) {\n    __extends(ListBlock, _super);\n    function ListBlock(blockDef, placeholder, prefix, initialState, initialError) {\n        var _this = this;\n        _this.blockDef = blockDef;\n        _this.type = blockDef.name;\n        _this.prefix = prefix;\n        var dom = $(\"\\n      <div class=\\\"\".concat((0, text_1.escapeHtml)(_this.blockDef.meta.classname || ''), \"\\\">\\n        <input type=\\\"hidden\\\" name=\\\"\").concat((0, text_1.escapeHtml)(prefix), \"-count\\\" data-streamfield-list-count value=\\\"0\\\">\\n\\n        <div data-streamfield-list-container></div>\\n      </div>\\n    \"));\n        $(placeholder).replaceWith(dom);\n        if (_this.blockDef.meta.helpText) {\n            // help text is left unescaped as per Django conventions\n            $(\"\\n        <div class=\\\"c-sf-help\\\">\\n          <div class=\\\"help\\\">\\n            \".concat(_this.blockDef.meta.helpText, \"\\n          </div>\\n        </div>\\n      \")).insertBefore(dom);\n        }\n        _this.children = [];\n        _this.inserters = [];\n        _this.blockCounter = 0;\n        _this.countInput = dom.find('[data-streamfield-list-count]');\n        _this.sequenceContainer = dom.find('[data-streamfield-list-container]');\n        _this.container = dom;\n        _this.setState(initialState || []);\n        if (_this.blockDef.meta.collapsed) {\n            _this.children.forEach(function (block) {\n                block.collapse();\n            });\n        }\n        if (initialError) {\n            _this.setError(initialError);\n        }\n        return _this;\n    }\n    ListBlock.prototype.setState = function (blocks) {\n        var _this = this;\n        // State for a ListBlock is a list of {id, value} objects, but\n        // ListBlock.insert accepts the value as first argument; id is passed in the options dict instead.\n        this.clear();\n        blocks.forEach(function (_a, i) {\n            var value = _a.value, id = _a.id;\n            _this.insert(value, i, { id: id || (0, uuid_1.v4)() });\n        });\n    };\n    ListBlock.prototype._getChildDataForInsertion = function () {\n        /* Called when an 'insert new block' action is triggered: given a dict of data from the insertion control,\n        return the block definition and initial state to be used for the new block.\n        For a ListBlock, no data is passed from the insertion control, as there is a single fixed child block definition.\n        */\n        var blockDef = this.blockDef.childBlockDef;\n        var initialState = this.blockDef.initialChildState;\n        return [blockDef, initialState];\n    };\n    ListBlock.prototype._createChild = function (blockDef, placeholder, prefix, index, id, initialState, sequence, opts) {\n        return new ListChild(blockDef, placeholder, prefix, index, id, initialState, sequence, opts);\n    };\n    ListBlock.prototype._createInsertionControl = function (placeholder, opts) {\n        return new InsertPosition(placeholder, opts);\n    };\n    /*\n     * Called whenever a block is added or removed\n     *\n     * Updates the state of add / duplicate block buttons to prevent too many blocks being inserted.\n     */\n    ListBlock.prototype.blockCountChanged = function () {\n        var _this = this;\n        _super.prototype.blockCountChanged.call(this);\n        if (typeof this.blockDef.meta.maxNum === 'number') {\n            if (this.children.length >= this.blockDef.meta.maxNum) {\n                /* prevent adding new blocks */\n                (0, range_1.range)(0, this.inserters.length).forEach(function (i) {\n                    _this.inserters[i].disable();\n                });\n            }\n            else {\n                /* allow adding new blocks */\n                (0, range_1.range)(0, this.inserters.length).forEach(function (i) {\n                    _this.inserters[i].enable();\n                });\n            }\n        }\n    };\n    ListBlock.prototype.insert = function (value, index, opts) {\n        return this._insert(this.blockDef.childBlockDef, value, opts === null || opts === void 0 ? void 0 : opts.id, index, opts);\n    };\n    ListBlock.prototype.duplicateBlock = function (index, opts) {\n        var child = this.children[index];\n        var _a = child.getDuplicatedState(), newId = _a.id, childValue = _a.value;\n        var animate = opts && opts.animate;\n        this.insert(childValue, index + 1, {\n            animate: animate,\n            focus: true,\n            collapsed: child.collapsed,\n            id: newId\n        });\n    };\n    ListBlock.prototype.splitBlock = function (index, valueBefore, valueAfter, shouldMoveCommentFn, opts) {\n        var _a;\n        var child = this.children[index];\n        var animate = opts && opts.animate;\n        child.setValue(valueBefore);\n        var newChild = this.insert(valueAfter, index + 1, {\n            animate: animate,\n            focus: true,\n            collapsed: child.collapsed\n        });\n        var oldContentPath = child.getContentPath();\n        var newContentPath = newChild.getContentPath();\n        var commentApp = (_a = window.comments) === null || _a === void 0 ? void 0 : _a.commentApp;\n        if (oldContentPath && newContentPath && commentApp) {\n            // Move comments from the old contentpath to the new\n            // We allow use of a custom function to determine whether to move each comment\n            // so it can be done based on intra-field position\n            var selector = commentApp.utils.selectCommentsForContentPathFactory(oldContentPath);\n            var comments = selector(commentApp.store.getState());\n            comments.forEach(function (comment) {\n                if (shouldMoveCommentFn(comment)) {\n                    commentApp.updateContentPath(comment.localId, newContentPath);\n                }\n            });\n        }\n    };\n    ListBlock.prototype.setError = function (errorList) {\n        var _this = this;\n        if (errorList.length !== 1) {\n            return;\n        }\n        var error = errorList[0];\n        // Non block errors\n        var container = this.container[0];\n        container\n            .querySelectorAll(':scope > .help-block.help-critical')\n            .forEach(function (element) { return element.remove(); });\n        if (error.nonBlockErrors.length > 0) {\n            // Add a help block for each error raised\n            error.nonBlockErrors.forEach(function (nonBlockError) {\n                var errorElement = document.createElement('p');\n                errorElement.classList.add('help-block');\n                errorElement.classList.add('help-critical');\n                errorElement.innerHTML = (0, text_1.escapeHtml)(nonBlockError.messages[0]);\n                container.insertBefore(errorElement, container.childNodes[0]);\n            });\n        }\n        // error.blockErrors = a list with the same length as the data,\n        // with nulls for items without errors\n        error.blockErrors.forEach(function (blockError, blockIndex) {\n            if (blockError) {\n                _this.children[blockIndex].setError(blockError);\n            }\n        });\n    };\n    ListBlock.prototype.getBlockGroups = function () {\n        var group = ['', [this.blockDef.childBlockDef]];\n        return [group];\n    };\n    ListBlock.prototype.getBlockCount = function () {\n        return this.children.length;\n    };\n    ListBlock.prototype.getBlockMax = function () {\n        return this.blockDef.meta.maxNum || 0;\n    };\n    return ListBlock;\n}(BaseSequenceBlock_1.BaseSequenceBlock));\nexports.ListBlock = ListBlock;\nvar ListBlockDefinition = /** @class */ (function () {\n    function ListBlockDefinition(name, childBlockDef, initialChildState, meta) {\n        this.name = name;\n        this.childBlockDef = childBlockDef;\n        this.initialChildState = initialChildState;\n        this.meta = meta;\n    }\n    ListBlockDefinition.prototype.render = function (placeholder, prefix, initialState, initialError) {\n        return new ListBlock(this, placeholder, prefix, initialState, initialError);\n    };\n    return ListBlockDefinition;\n}());\nexports.ListBlockDefinition = ListBlockDefinition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/StreamField/blocks/ListBlock.js\n");

/***/ }),

/***/ "./client/src/components/StreamField/blocks/StaticBlock.js":
/*!*****************************************************************!*\
  !*** ./client/src/components/StreamField/blocks/StaticBlock.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.StaticBlockDefinition = exports.StaticBlock = void 0;\nvar text_1 = __webpack_require__(/*! ../../../utils/text */ \"./client/src/utils/text.ts\");\nvar StaticBlock = /** @class */ (function () {\n    function StaticBlock(blockDef, placeholder) {\n        this.blockDef = blockDef;\n        var element = document.createElement('div');\n        if (this.blockDef.meta.html) {\n            element.innerHTML = this.blockDef.meta.html;\n        }\n        else {\n            element.innerHTML = (0, text_1.escapeHtml)(this.blockDef.meta.text);\n        }\n        placeholder.replaceWith(element);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    StaticBlock.prototype.setState = function (_state) { };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    StaticBlock.prototype.setError = function (_errorList) { };\n    StaticBlock.prototype.getState = function () {\n        return null;\n    };\n    StaticBlock.prototype.getValue = function () {\n        return null;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    StaticBlock.prototype.focus = function () { };\n    return StaticBlock;\n}());\nexports.StaticBlock = StaticBlock;\nvar StaticBlockDefinition = /** @class */ (function () {\n    function StaticBlockDefinition(name, meta) {\n        this.name = name;\n        this.meta = meta;\n    }\n    StaticBlockDefinition.prototype.render = function (placeholder) {\n        return new StaticBlock(this, placeholder);\n    };\n    return StaticBlockDefinition;\n}());\nexports.StaticBlockDefinition = StaticBlockDefinition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvU3RyZWFtRmllbGQvYmxvY2tzL1N0YXRpY0Jsb2NrLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9jbGllbnQvc3JjL2NvbXBvbmVudHMvU3RyZWFtRmllbGQvYmxvY2tzL1N0YXRpY0Jsb2NrLmpzPzk2MDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5TdGF0aWNCbG9ja0RlZmluaXRpb24gPSBleHBvcnRzLlN0YXRpY0Jsb2NrID0gdm9pZCAwO1xudmFyIHRleHRfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlscy90ZXh0XCIpO1xudmFyIFN0YXRpY0Jsb2NrID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN0YXRpY0Jsb2NrKGJsb2NrRGVmLCBwbGFjZWhvbGRlcikge1xuICAgICAgICB0aGlzLmJsb2NrRGVmID0gYmxvY2tEZWY7XG4gICAgICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGlmICh0aGlzLmJsb2NrRGVmLm1ldGEuaHRtbCkge1xuICAgICAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSB0aGlzLmJsb2NrRGVmLm1ldGEuaHRtbDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gKDAsIHRleHRfMS5lc2NhcGVIdG1sKSh0aGlzLmJsb2NrRGVmLm1ldGEudGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgcGxhY2Vob2xkZXIucmVwbGFjZVdpdGgoZWxlbWVudCk7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnMsIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICAgIFN0YXRpY0Jsb2NrLnByb3RvdHlwZS5zZXRTdGF0ZSA9IGZ1bmN0aW9uIChfc3RhdGUpIHsgfTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cbiAgICBTdGF0aWNCbG9jay5wcm90b3R5cGUuc2V0RXJyb3IgPSBmdW5jdGlvbiAoX2Vycm9yTGlzdCkgeyB9O1xuICAgIFN0YXRpY0Jsb2NrLnByb3RvdHlwZS5nZXRTdGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICBTdGF0aWNCbG9jay5wcm90b3R5cGUuZ2V0VmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1mdW5jdGlvblxuICAgIFN0YXRpY0Jsb2NrLnByb3RvdHlwZS5mb2N1cyA9IGZ1bmN0aW9uICgpIHsgfTtcbiAgICByZXR1cm4gU3RhdGljQmxvY2s7XG59KCkpO1xuZXhwb3J0cy5TdGF0aWNCbG9jayA9IFN0YXRpY0Jsb2NrO1xudmFyIFN0YXRpY0Jsb2NrRGVmaW5pdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTdGF0aWNCbG9ja0RlZmluaXRpb24obmFtZSwgbWV0YSkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLm1ldGEgPSBtZXRhO1xuICAgIH1cbiAgICBTdGF0aWNCbG9ja0RlZmluaXRpb24ucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIChwbGFjZWhvbGRlcikge1xuICAgICAgICByZXR1cm4gbmV3IFN0YXRpY0Jsb2NrKHRoaXMsIHBsYWNlaG9sZGVyKTtcbiAgICB9O1xuICAgIHJldHVybiBTdGF0aWNCbG9ja0RlZmluaXRpb247XG59KCkpO1xuZXhwb3J0cy5TdGF0aWNCbG9ja0RlZmluaXRpb24gPSBTdGF0aWNCbG9ja0RlZmluaXRpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./client/src/components/StreamField/blocks/StaticBlock.js\n");

/***/ }),

/***/ "./client/src/components/StreamField/blocks/StreamBlock.js":
/*!*****************************************************************!*\
  !*** ./client/src/components/StreamField/blocks/StreamBlock.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/* eslint-disable no-underscore-dangle */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nexports.__esModule = true;\nexports.StreamBlockDefinition = exports.StreamBlock = exports.StreamBlockValidationError = void 0;\nvar uuid_1 = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\nvar BaseSequenceBlock_1 = __webpack_require__(/*! ./BaseSequenceBlock */ \"./client/src/components/StreamField/blocks/BaseSequenceBlock.js\");\nvar text_1 = __webpack_require__(/*! ../../../utils/text */ \"./client/src/utils/text.ts\");\nvar hasOwn_1 = __webpack_require__(/*! ../../../utils/hasOwn */ \"./client/src/utils/hasOwn.ts\");\nvar range_1 = __webpack_require__(/*! ../../../utils/range */ \"./client/src/utils/range.ts\");\n/* global $ */\nvar StreamBlockValidationError = /** @class */ (function () {\n    function StreamBlockValidationError(nonBlockErrors, blockErrors) {\n        this.nonBlockErrors = nonBlockErrors;\n        this.blockErrors = blockErrors;\n    }\n    return StreamBlockValidationError;\n}());\nexports.StreamBlockValidationError = StreamBlockValidationError;\nvar StreamChild = /** @class */ (function (_super) {\n    __extends(StreamChild, _super);\n    function StreamChild() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /*\n    wrapper for a block inside a StreamBlock, handling StreamBlock-specific metadata\n    such as id\n    */\n    StreamChild.prototype.getState = function () {\n        return {\n            type: this.type,\n            value: this.block.getState(),\n            id: this.id\n        };\n    };\n    StreamChild.prototype.getDuplicatedState = function () {\n        return __assign(__assign({}, _super.prototype.getDuplicatedState.call(this)), { type: this.type });\n    };\n    StreamChild.prototype.setState = function (_a) {\n        var type = _a.type, value = _a.value, id = _a.id;\n        this.type = type;\n        this.block.setState(value);\n        this.id = id;\n    };\n    StreamChild.prototype.getValue = function () {\n        return {\n            type: this.type,\n            value: this.block.getValue(),\n            id: this.id\n        };\n    };\n    StreamChild.prototype.split = function (valueBefore, valueAfter, shouldMoveCommentFn, opts) {\n        this.sequence.splitBlock(this.index, valueBefore, valueAfter, shouldMoveCommentFn, opts);\n    };\n    return StreamChild;\n}(BaseSequenceBlock_1.BaseSequenceChild));\nvar StreamBlockMenu = /** @class */ (function (_super) {\n    __extends(StreamBlockMenu, _super);\n    function StreamBlockMenu(placeholder, opts) {\n        var _this = _super.call(this, placeholder, opts) || this;\n        _this.groupedChildBlockDefs = opts.groupedChildBlockDefs;\n        var animate = opts.animate;\n        var dom = $(\"\\n      <div>\\n        <button data-streamblock-menu-open type=\\\"button\\\" title=\\\"\".concat((0, text_1.escapeHtml)(opts.strings.ADD), \"\\\"\\n            class=\\\"c-sf-add-button c-sf-add-button--visible\\\">\\n          <svg class=\\\"icon icon-plus\\\" aria-hidden=\\\"true\\\"><use href=\\\"#icon-plus\\\"></use></svg>\\n        </button>\\n        <div data-streamblock-menu-outer>\\n          <div data-streamblock-menu-inner class=\\\"c-sf-add-panel\\\"></div>\\n        </div>\\n      </div>\\n    \"));\n        $(placeholder).replaceWith(dom);\n        _this.element = dom.get(0);\n        _this.addButton = dom.find('[data-streamblock-menu-open]');\n        _this.addButton.click(function () {\n            _this.toggle();\n        });\n        _this.outerContainer = dom.find('[data-streamblock-menu-outer]');\n        _this.innerContainer = dom.find('[data-streamblock-menu-inner]');\n        _this.hasRenderedMenu = false;\n        _this.isOpen = false;\n        _this.canAddBlock = true;\n        _this.disabledBlockTypes = new Set();\n        _this.close({ animate: false });\n        if (animate) {\n            dom.hide().slideDown();\n        }\n        return _this;\n    }\n    StreamBlockMenu.prototype.renderMenu = function () {\n        var _this = this;\n        if (this.hasRenderedMenu)\n            return;\n        this.hasRenderedMenu = true;\n        this.groupedChildBlockDefs.forEach(function (_a) {\n            var _b = __read(_a, 2), group = _b[0], blockDefs = _b[1];\n            if (group) {\n                var heading = $('<h4 class=\"c-sf-add-panel__group-title\"></h4>').text(group);\n                _this.innerContainer.append(heading);\n            }\n            var grid = $('<div class=\"c-sf-add-panel__grid\"></div>');\n            _this.innerContainer.append(grid);\n            blockDefs.forEach(function (blockDef) {\n                var button = $(\"\\n          <button type=\\\"button\\\" class=\\\"c-sf-button action-add-block-\".concat((0, text_1.escapeHtml)(blockDef.name), \"\\\">\\n            <svg class=\\\"icon icon-\").concat((0, text_1.escapeHtml)(blockDef.meta.icon), \" c-sf-button__icon\\\" aria-hidden=\\\"true\\\">\\n              <use href=\\\"#icon-\").concat((0, text_1.escapeHtml)(blockDef.meta.icon), \"\\\"></use>\\n            </svg>\\n            \").concat((0, text_1.escapeHtml)(blockDef.meta.label), \"\\n          </button>\\n        \"));\n                grid.append(button);\n                button.click(function () {\n                    if (_this.onRequestInsert) {\n                        _this.onRequestInsert(_this.index, { type: blockDef.name });\n                    }\n                    _this.close({ animate: true });\n                });\n            });\n        });\n        // Disable buttons for any disabled block types\n        this.disabledBlockTypes.forEach(function (blockType) {\n            $(\"button.action-add-block-\".concat((0, text_1.escapeHtml)(blockType)), _this.innerContainer).attr('disabled', 'true');\n        });\n    };\n    StreamBlockMenu.prototype.setNewBlockRestrictions = function (canAddBlock, disabledBlockTypes) {\n        var _this = this;\n        this.canAddBlock = canAddBlock;\n        this.disabledBlockTypes = disabledBlockTypes;\n        // Disable/enable menu open button\n        if (this.canAddBlock) {\n            this.addButton.removeAttr('disabled');\n        }\n        else {\n            this.addButton.attr('disabled', 'true');\n        }\n        // Close menu if its open and we no longer can add blocks\n        if (!canAddBlock && this.isOpen) {\n            this.close({ animate: true });\n        }\n        // Disable/enable individual block type buttons\n        $('button', this.innerContainer).removeAttr('disabled');\n        disabledBlockTypes.forEach(function (blockType) {\n            $(\"button.action-add-block-\".concat((0, text_1.escapeHtml)(blockType)), _this.innerContainer).attr('disabled', 'true');\n        });\n    };\n    StreamBlockMenu.prototype.toggle = function () {\n        if (this.isOpen) {\n            this.close({ animate: true });\n        }\n        else {\n            this.open({ animate: true });\n        }\n    };\n    StreamBlockMenu.prototype.open = function (opts) {\n        if (!this.canAddBlock) {\n            return;\n        }\n        this.renderMenu();\n        if (opts && opts.animate) {\n            this.outerContainer.slideDown();\n        }\n        else {\n            this.outerContainer.show();\n        }\n        this.addButton.addClass('c-sf-add-button--close');\n        this.outerContainer.attr('aria-hidden', 'false');\n        this.isOpen = true;\n    };\n    StreamBlockMenu.prototype.close = function (opts) {\n        if (opts && opts.animate) {\n            this.outerContainer.slideUp();\n        }\n        else {\n            this.outerContainer.hide();\n        }\n        this.addButton.removeClass('c-sf-add-button--close');\n        this.outerContainer.attr('aria-hidden', 'true');\n        this.isOpen = false;\n    };\n    return StreamBlockMenu;\n}(BaseSequenceBlock_1.BaseInsertionControl));\nvar StreamBlock = /** @class */ (function (_super) {\n    __extends(StreamBlock, _super);\n    function StreamBlock(blockDef, placeholder, prefix, initialState, initialError) {\n        var _this = this;\n        _this.blockDef = blockDef;\n        _this.type = blockDef.name;\n        _this.prefix = prefix;\n        var dom = $(\"\\n      <div class=\\\"\".concat((0, text_1.escapeHtml)(_this.blockDef.meta.classname || ''), \"\\\">\\n        <input type=\\\"hidden\\\" name=\\\"\").concat((0, text_1.escapeHtml)(prefix), \"-count\\\" data-streamfield-stream-count value=\\\"0\\\">\\n        <div data-streamfield-stream-container></div>\\n      </div>\\n    \"));\n        $(placeholder).replaceWith(dom);\n        if (_this.blockDef.meta.helpText) {\n            // help text is left unescaped as per Django conventions\n            $(\"\\n        <div class=\\\"c-sf-help\\\">\\n          <div class=\\\"help\\\">\\n            \".concat(_this.blockDef.meta.helpText, \"\\n          </div>\\n        </div>\\n      \")).insertBefore(dom);\n        }\n        // StreamChild objects for the current (non-deleted) child blocks\n        _this.children = [];\n        // Cache for child block counting (not guaranteed to be fully populated)\n        _this.childBlockCounts = new Map();\n        // Insertion control objects - there are one more of these than there are children.\n        // The control at index n will insert a block at index n\n        _this.inserters = [];\n        // Incrementing counter used to generate block prefixes, also reflected in the\n        // 'count' hidden input. This count includes deleted items\n        _this.blockCounter = 0;\n        _this.countInput = dom.find('[data-streamfield-stream-count]');\n        // Parent element of insert control and block elements (potentially including deleted items,\n        // which are left behind as hidden elements with a '-deleted' input so that the\n        // server-side form handler knows to skip it)\n        _this.sequenceContainer = dom.find('[data-streamfield-stream-container]');\n        _this.setState(initialState || []);\n        if (_this.blockDef.meta.collapsed) {\n            _this.children.forEach(function (block) {\n                block.collapse();\n            });\n        }\n        _this.container = dom;\n        if (initialError) {\n            _this.setError(initialError);\n        }\n        return _this;\n    }\n    StreamBlock.prototype.getBlockGroups = function () {\n        return this.blockDef.groupedChildBlockDefs;\n    };\n    StreamBlock.prototype.getBlockCount = function (type) {\n        // Get the block count for a particular type, or if none is provided, the total block count\n        if (!type) {\n            return this.children.length;\n        }\n        if (!this.childBlockCounts.has(type)) {\n            this._updateBlockCount(type);\n        }\n        return this.childBlockCounts.get(type) || 0;\n    };\n    StreamBlock.prototype.getBlockMax = function (type) {\n        var _a;\n        // Get the maximum number of blocks allowable for a particular type, or if none is provided, the total maximum\n        if (!type) {\n            return this.blockDef.meta.maxNum;\n        }\n        return (_a = this.blockDef.meta.blockCounts[type]) === null || _a === void 0 ? void 0 : _a.max_num;\n    };\n    StreamBlock.prototype._updateBlockCount = function (type) {\n        var currentBlockCount = this.children.filter(function (child) { return child.type === type; }).length;\n        this.childBlockCounts.set(type, currentBlockCount);\n    };\n    /*\n     * Called whenever a block is added or removed\n     *\n     * Updates the state of add / duplicate block buttons to prevent too many blocks being inserted.\n     */\n    StreamBlock.prototype.blockCountChanged = function () {\n        var _this = this;\n        _super.prototype.blockCountChanged.call(this);\n        this.canAddBlock = true;\n        this.childBlockCounts.clear();\n        if (typeof this.blockDef.meta.maxNum === 'number' &&\n            this.children.length >= this.blockDef.meta.maxNum) {\n            this.canAddBlock = false;\n        }\n        // Check if there are any block types that have count limits\n        this.disabledBlockTypes = new Set();\n        for (var blockType in this.blockDef.meta.blockCounts) {\n            if ((0, hasOwn_1.hasOwn)(this.blockDef.meta.blockCounts, blockType)) {\n                var maxNum = this.getBlockMax(blockType);\n                if (typeof maxNum === 'number') {\n                    var currentBlockCount = this.getBlockCount(blockType);\n                    if (currentBlockCount >= maxNum) {\n                        this.disabledBlockTypes.add(blockType);\n                    }\n                }\n            }\n        }\n        (0, range_1.range)(0, this.inserters.length).forEach(function (i) {\n            _this.inserters[i].setNewBlockRestrictions(_this.canAddBlock, _this.disabledBlockTypes);\n        });\n    };\n    StreamBlock.prototype._createChild = function (blockDef, placeholder, prefix, index, id, initialState, sequence, opts) {\n        return new StreamChild(blockDef, placeholder, prefix, index, id, initialState, sequence, opts);\n    };\n    StreamBlock.prototype._createInsertionControl = function (placeholder, opts) {\n        // eslint-disable-next-line no-param-reassign\n        opts.groupedChildBlockDefs = this.blockDef.groupedChildBlockDefs;\n        return new StreamBlockMenu(placeholder, opts);\n    };\n    StreamBlock.prototype.insert = function (_a, index, opts) {\n        var type = _a.type, value = _a.value, id = _a.id;\n        var childBlockDef = this.blockDef.childBlockDefsByName[type];\n        return this._insert(childBlockDef, value, id, index, opts);\n    };\n    StreamBlock.prototype._getChildDataForInsertion = function (_a) {\n        var type = _a.type;\n        /* Called when an 'insert new block' action is triggered: given a dict of data from the insertion control,\n        return the block definition and initial state to be used for the new block.\n        For a StreamBlock, the dict of data consists of 'type' (the chosen block type name, as a string).\n        */\n        var blockDef = this.blockDef.childBlockDefsByName[type];\n        var initialState = this.blockDef.initialChildStates[type];\n        return [blockDef, initialState, (0, uuid_1.v4)()];\n    };\n    StreamBlock.prototype.duplicateBlock = function (index, opts) {\n        var child = this.children[index];\n        var childState = child.getDuplicatedState();\n        var animate = opts && opts.animate;\n        this.insert(childState, index + 1, {\n            animate: animate,\n            focus: true,\n            collapsed: child.collapsed\n        });\n    };\n    StreamBlock.prototype.splitBlock = function (index, valueBefore, valueAfter, shouldMoveCommentFn, opts) {\n        var _a;\n        var child = this.children[index];\n        var animate = opts && opts.animate;\n        var initialState = child.getState();\n        var newChild = this.insert({ type: initialState.type, id: (0, uuid_1.v4)(), value: valueAfter }, index + 1, { animate: animate, focus: true, collapsed: child.collapsed });\n        child.setState({\n            type: initialState.type,\n            id: initialState.id,\n            value: valueBefore\n        });\n        var oldContentPath = child.getContentPath();\n        var newContentPath = newChild.getContentPath();\n        var commentApp = (_a = window.comments) === null || _a === void 0 ? void 0 : _a.commentApp;\n        if (oldContentPath && newContentPath && commentApp) {\n            // Move comments from the old contentpath to the new\n            // We allow use of a custom function to determine whether to move each comment\n            // so it can be done based on intra-field position\n            var selector = commentApp.utils.selectCommentsForContentPathFactory(oldContentPath);\n            var comments = selector(commentApp.store.getState());\n            comments.forEach(function (comment) {\n                if (shouldMoveCommentFn(comment)) {\n                    commentApp.updateContentPath(comment.localId, newContentPath);\n                }\n            });\n        }\n    };\n    StreamBlock.prototype.setState = function (values) {\n        _super.prototype.setState.call(this, values);\n        if (values.length === 0) {\n            /* for an empty list, begin with the menu open */\n            this.inserters[0].open({ animate: false });\n        }\n    };\n    StreamBlock.prototype.setError = function (errorList) {\n        if (errorList.length !== 1) {\n            return;\n        }\n        var error = errorList[0];\n        // Non block errors\n        var container = this.container[0];\n        container\n            .querySelectorAll(':scope > .help-block.help-critical')\n            .forEach(function (element) { return element.remove(); });\n        if (error.nonBlockErrors.length > 0) {\n            // Add a help block for each error raised\n            error.nonBlockErrors.forEach(function (nonBlockError) {\n                var errorElement = document.createElement('p');\n                errorElement.classList.add('help-block');\n                errorElement.classList.add('help-critical');\n                errorElement.innerHTML = (0, text_1.escapeHtml)(nonBlockError.messages[0]);\n                container.insertBefore(errorElement, container.childNodes[0]);\n            });\n        }\n        // Block errors\n        for (var blockIndex in error.blockErrors) {\n            if ((0, hasOwn_1.hasOwn)(error.blockErrors, blockIndex)) {\n                this.children[blockIndex].setError(error.blockErrors[blockIndex]);\n            }\n        }\n    };\n    return StreamBlock;\n}(BaseSequenceBlock_1.BaseSequenceBlock));\nexports.StreamBlock = StreamBlock;\nvar StreamBlockDefinition = /** @class */ (function () {\n    function StreamBlockDefinition(name, groupedChildBlockDefs, initialChildStates, meta) {\n        var _this = this;\n        this.name = name;\n        this.groupedChildBlockDefs = groupedChildBlockDefs;\n        this.initialChildStates = initialChildStates;\n        this.childBlockDefsByName = {};\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.groupedChildBlockDefs.forEach(function (_a) {\n            var _b = __read(_a, 2), group = _b[0], blockDefs = _b[1];\n            blockDefs.forEach(function (blockDef) {\n                _this.childBlockDefsByName[blockDef.name] = blockDef;\n            });\n        });\n        this.meta = meta;\n    }\n    StreamBlockDefinition.prototype.render = function (placeholder, prefix, initialState, initialError) {\n        return new StreamBlock(this, placeholder, prefix, initialState, initialError);\n    };\n    return StreamBlockDefinition;\n}());\nexports.StreamBlockDefinition = StreamBlockDefinition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/StreamField/blocks/StreamBlock.js\n");

/***/ }),

/***/ "./client/src/components/StreamField/blocks/StructBlock.js":
/*!*****************************************************************!*\
  !*** ./client/src/components/StreamField/blocks/StructBlock.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/* global $ */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nexports.__esModule = true;\nexports.StructBlockDefinition = exports.StructBlock = exports.StructBlockValidationError = void 0;\nvar text_1 = __webpack_require__(/*! ../../../utils/text */ \"./client/src/utils/text.ts\");\nvar hasOwn_1 = __webpack_require__(/*! ../../../utils/hasOwn */ \"./client/src/utils/hasOwn.ts\");\nvar StructBlockValidationError = /** @class */ (function () {\n    function StructBlockValidationError(blockErrors) {\n        this.blockErrors = blockErrors;\n    }\n    return StructBlockValidationError;\n}());\nexports.StructBlockValidationError = StructBlockValidationError;\nvar StructBlock = /** @class */ (function () {\n    function StructBlock(blockDef, placeholder, prefix, initialState, initialError) {\n        var _this = this;\n        var state = initialState || {};\n        this.blockDef = blockDef;\n        this.type = blockDef.name;\n        this.childBlocks = {};\n        if (blockDef.meta.formTemplate) {\n            var html = blockDef.meta.formTemplate.replace(/__PREFIX__/g, prefix);\n            var dom_1 = $(html);\n            $(placeholder).replaceWith(dom_1);\n            this.blockDef.childBlockDefs.forEach(function (childBlockDef) {\n                var childBlockElement = dom_1\n                    .find('[data-structblock-child=\"' + childBlockDef.name + '\"]')\n                    .get(0);\n                var childBlock = childBlockDef.render(childBlockElement, prefix + '-' + childBlockDef.name, state[childBlockDef.name], initialError === null || initialError === void 0 ? void 0 : initialError.blockErrors[childBlockDef.name]);\n                _this.childBlocks[childBlockDef.name] = childBlock;\n            });\n        }\n        else {\n            var dom_2 = $(\"\\n        <div class=\\\"\".concat((0, text_1.escapeHtml)(this.blockDef.meta.classname || ''), \"\\\">\\n        </div>\\n      \"));\n            $(placeholder).replaceWith(dom_2);\n            if (this.blockDef.meta.helpText) {\n                // help text is left unescaped as per Django conventions\n                dom_2.append(\"\\n          <div class=\\\"c-sf-help\\\">\\n            <div class=\\\"help\\\">\\n              \".concat(this.blockDef.meta.helpText, \"\\n            </div>\\n          </div>\\n        \"));\n            }\n            this.blockDef.childBlockDefs.forEach(function (childBlockDef) {\n                var childDom = $(\"\\n        <div data-contentpath=\\\"\".concat(childBlockDef.name, \"\\\">\\n          <label class=\\\"w-field__label\\\">\").concat((0, text_1.escapeHtml)(childBlockDef.meta.label)).concat(childBlockDef.meta.required\n                    ? '<span class=\"w-required-mark\">*</span>'\n                    : '', \"</label>\\n            <div data-streamfield-block></div>\\n          </div>\\n        \"));\n                dom_2.append(childDom);\n                var childBlockElement = childDom\n                    .find('[data-streamfield-block]')\n                    .get(0);\n                var labelElement = childDom.find('label').get(0);\n                var childBlock = childBlockDef.render(childBlockElement, prefix + '-' + childBlockDef.name, state[childBlockDef.name], initialError === null || initialError === void 0 ? void 0 : initialError.blockErrors[childBlockDef.name], new Map());\n                _this.childBlocks[childBlockDef.name] = childBlock;\n                if (childBlock.idForLabel) {\n                    labelElement.setAttribute('for', childBlock.idForLabel);\n                }\n            });\n        }\n    }\n    StructBlock.prototype.setState = function (state) {\n        // eslint-disable-next-line guard-for-in\n        for (var name_1 in state) {\n            this.childBlocks[name_1].setState(state[name_1]);\n        }\n    };\n    StructBlock.prototype.setError = function (errorList) {\n        if (errorList.length !== 1) {\n            return;\n        }\n        var error = errorList[0];\n        for (var blockName in error.blockErrors) {\n            if ((0, hasOwn_1.hasOwn)(error.blockErrors, blockName)) {\n                this.childBlocks[blockName].setError(error.blockErrors[blockName]);\n            }\n        }\n    };\n    StructBlock.prototype.getState = function () {\n        var state = {};\n        // eslint-disable-next-line guard-for-in\n        for (var name_2 in this.childBlocks) {\n            state[name_2] = this.childBlocks[name_2].getState();\n        }\n        return state;\n    };\n    StructBlock.prototype.getDuplicatedState = function () {\n        var state = {};\n        // eslint-disable-next-line guard-for-in\n        for (var name_3 in this.childBlocks) {\n            var block = this.childBlocks[name_3];\n            state[name_3] =\n                block.getDuplicatedState === undefined\n                    ? block.getState()\n                    : block.getDuplicatedState();\n        }\n        return state;\n    };\n    StructBlock.prototype.getValue = function () {\n        var value = {};\n        // eslint-disable-next-line guard-for-in\n        for (var name_4 in this.childBlocks) {\n            value[name_4] = this.childBlocks[name_4].getValue();\n        }\n        return value;\n    };\n    StructBlock.prototype.getTextLabel = function (opts) {\n        var e_1, _a;\n        var _this = this;\n        if (this.blockDef.meta.labelFormat) {\n            /* use labelFormat - regexp replace any field references like '{first_name}'\n            with the text label of that sub-block */\n            return this.blockDef.meta.labelFormat.replace(/\\{(\\w+)\\}/g, function (tag, blockName) {\n                var block = _this.childBlocks[blockName];\n                if (block.getTextLabel) {\n                    /* to be strictly correct, we should be adjusting opts.maxLength to account for the overheads\n                  in the format string, and dividing the remainder across all the placeholders in the string,\n                  rather than just passing opts on to the child. But that would get complicated, and this is\n                  better than nothing... */\n                    return block.getTextLabel(opts);\n                }\n                return '';\n            });\n        }\n        try {\n            /* if no labelFormat specified, just try each child block in turn until we find one that provides a label */\n            for (var _b = __values(this.blockDef.childBlockDefs), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var childDef = _c.value;\n                var child = this.childBlocks[childDef.name];\n                if (child.getTextLabel) {\n                    var val = child.getTextLabel(opts);\n                    if (val)\n                        return val;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        // no usable label found\n        return null;\n    };\n    StructBlock.prototype.focus = function (opts) {\n        if (this.blockDef.childBlockDefs.length) {\n            var firstChildName = this.blockDef.childBlockDefs[0].name;\n            this.childBlocks[firstChildName].focus(opts);\n        }\n    };\n    return StructBlock;\n}());\nexports.StructBlock = StructBlock;\nvar StructBlockDefinition = /** @class */ (function () {\n    function StructBlockDefinition(name, childBlockDefs, meta) {\n        this.name = name;\n        this.childBlockDefs = childBlockDefs;\n        this.meta = meta;\n    }\n    StructBlockDefinition.prototype.render = function (placeholder, prefix, initialState, initialError) {\n        return new StructBlock(this, placeholder, prefix, initialState, initialError);\n    };\n    return StructBlockDefinition;\n}());\nexports.StructBlockDefinition = StructBlockDefinition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/src/components/StreamField/blocks/StructBlock.js\n");

/***/ }),

/***/ "./client/src/entrypoints/admin/telepath/blocks.js":
/*!*********************************************************!*\
  !*** ./client/src/entrypoints/admin/telepath/blocks.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nvar FieldBlock_1 = __webpack_require__(/*! ../../../components/StreamField/blocks/FieldBlock */ \"./client/src/components/StreamField/blocks/FieldBlock.js\");\nvar StaticBlock_1 = __webpack_require__(/*! ../../../components/StreamField/blocks/StaticBlock */ \"./client/src/components/StreamField/blocks/StaticBlock.js\");\nvar StructBlock_1 = __webpack_require__(/*! ../../../components/StreamField/blocks/StructBlock */ \"./client/src/components/StreamField/blocks/StructBlock.js\");\nvar ListBlock_1 = __webpack_require__(/*! ../../../components/StreamField/blocks/ListBlock */ \"./client/src/components/StreamField/blocks/ListBlock.js\");\nvar StreamBlock_1 = __webpack_require__(/*! ../../../components/StreamField/blocks/StreamBlock */ \"./client/src/components/StreamField/blocks/StreamBlock.js\");\nvar wagtailStreamField = window.wagtailStreamField || {};\nwagtailStreamField.blocks = {\n    FieldBlock: FieldBlock_1.FieldBlock,\n    FieldBlockDefinition: FieldBlock_1.FieldBlockDefinition,\n    StaticBlock: StaticBlock_1.StaticBlock,\n    StaticBlockDefinition: StaticBlock_1.StaticBlockDefinition,\n    StructBlock: StructBlock_1.StructBlock,\n    StructBlockDefinition: StructBlock_1.StructBlockDefinition,\n    StructBlockValidationError: StructBlock_1.StructBlockValidationError,\n    ListBlock: ListBlock_1.ListBlock,\n    ListBlockDefinition: ListBlock_1.ListBlockDefinition,\n    ListBlockValidationError: ListBlock_1.ListBlockValidationError,\n    StreamBlock: StreamBlock_1.StreamBlock,\n    StreamBlockDefinition: StreamBlock_1.StreamBlockDefinition,\n    StreamBlockValidationError: StreamBlock_1.StreamBlockValidationError\n};\nfunction initBlockWidget(id) {\n    /*\n    Initialises the top-level element of a BlockWidget\n    (the form widget for a StreamField).\n    Receives the ID of a DOM element with the attributes:\n      data-block: JSON-encoded block definition to be passed to telepath.unpack\n        to obtain a Javascript representation of the block\n        (an instance of one of the Block classes below)\n      data-value: JSON-encoded value for this block\n    */\n    var body = document.querySelector('#' + id + '[data-block]');\n    // unpack the block definition and value\n    var blockDefData = JSON.parse(body.dataset.block);\n    var blockDef = window.telepath.unpack(blockDefData);\n    var blockValue = JSON.parse(body.dataset.value);\n    var blockErrors = window.telepath.unpack(JSON.parse(body.dataset.errors));\n    // replace the 'body' element with the populated HTML structure for the block\n    blockDef.render(body, id, blockValue, blockErrors);\n}\nwindow.initBlockWidget = initBlockWidget;\nwindow.telepath.register('wagtail.blocks.FieldBlock', FieldBlock_1.FieldBlockDefinition);\nwindow.telepath.register('wagtail.blocks.StaticBlock', StaticBlock_1.StaticBlockDefinition);\nwindow.telepath.register('wagtail.blocks.StructBlock', StructBlock_1.StructBlockDefinition);\nwindow.telepath.register('wagtail.blocks.StructBlockValidationError', StructBlock_1.StructBlockValidationError);\nwindow.telepath.register('wagtail.blocks.ListBlock', ListBlock_1.ListBlockDefinition);\nwindow.telepath.register('wagtail.blocks.ListBlockValidationError', ListBlock_1.ListBlockValidationError);\nwindow.telepath.register('wagtail.blocks.StreamBlock', StreamBlock_1.StreamBlockDefinition);\nwindow.telepath.register('wagtail.blocks.StreamBlockValidationError', StreamBlock_1.StreamBlockValidationError);\nwindow.wagtailStreamField = wagtailStreamField;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2VudHJ5cG9pbnRzL2FkbWluL3RlbGVwYXRoL2Jsb2Nrcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9jbGllbnQvc3JjL2VudHJ5cG9pbnRzL2FkbWluL3RlbGVwYXRoL2Jsb2Nrcy5qcz8zM2FlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnZhciBGaWVsZEJsb2NrXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29tcG9uZW50cy9TdHJlYW1GaWVsZC9ibG9ja3MvRmllbGRCbG9ja1wiKTtcbnZhciBTdGF0aWNCbG9ja18xID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvbXBvbmVudHMvU3RyZWFtRmllbGQvYmxvY2tzL1N0YXRpY0Jsb2NrXCIpO1xudmFyIFN0cnVjdEJsb2NrXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29tcG9uZW50cy9TdHJlYW1GaWVsZC9ibG9ja3MvU3RydWN0QmxvY2tcIik7XG52YXIgTGlzdEJsb2NrXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29tcG9uZW50cy9TdHJlYW1GaWVsZC9ibG9ja3MvTGlzdEJsb2NrXCIpO1xudmFyIFN0cmVhbUJsb2NrXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vY29tcG9uZW50cy9TdHJlYW1GaWVsZC9ibG9ja3MvU3RyZWFtQmxvY2tcIik7XG52YXIgd2FndGFpbFN0cmVhbUZpZWxkID0gd2luZG93LndhZ3RhaWxTdHJlYW1GaWVsZCB8fCB7fTtcbndhZ3RhaWxTdHJlYW1GaWVsZC5ibG9ja3MgPSB7XG4gICAgRmllbGRCbG9jazogRmllbGRCbG9ja18xLkZpZWxkQmxvY2ssXG4gICAgRmllbGRCbG9ja0RlZmluaXRpb246IEZpZWxkQmxvY2tfMS5GaWVsZEJsb2NrRGVmaW5pdGlvbixcbiAgICBTdGF0aWNCbG9jazogU3RhdGljQmxvY2tfMS5TdGF0aWNCbG9jayxcbiAgICBTdGF0aWNCbG9ja0RlZmluaXRpb246IFN0YXRpY0Jsb2NrXzEuU3RhdGljQmxvY2tEZWZpbml0aW9uLFxuICAgIFN0cnVjdEJsb2NrOiBTdHJ1Y3RCbG9ja18xLlN0cnVjdEJsb2NrLFxuICAgIFN0cnVjdEJsb2NrRGVmaW5pdGlvbjogU3RydWN0QmxvY2tfMS5TdHJ1Y3RCbG9ja0RlZmluaXRpb24sXG4gICAgU3RydWN0QmxvY2tWYWxpZGF0aW9uRXJyb3I6IFN0cnVjdEJsb2NrXzEuU3RydWN0QmxvY2tWYWxpZGF0aW9uRXJyb3IsXG4gICAgTGlzdEJsb2NrOiBMaXN0QmxvY2tfMS5MaXN0QmxvY2ssXG4gICAgTGlzdEJsb2NrRGVmaW5pdGlvbjogTGlzdEJsb2NrXzEuTGlzdEJsb2NrRGVmaW5pdGlvbixcbiAgICBMaXN0QmxvY2tWYWxpZGF0aW9uRXJyb3I6IExpc3RCbG9ja18xLkxpc3RCbG9ja1ZhbGlkYXRpb25FcnJvcixcbiAgICBTdHJlYW1CbG9jazogU3RyZWFtQmxvY2tfMS5TdHJlYW1CbG9jayxcbiAgICBTdHJlYW1CbG9ja0RlZmluaXRpb246IFN0cmVhbUJsb2NrXzEuU3RyZWFtQmxvY2tEZWZpbml0aW9uLFxuICAgIFN0cmVhbUJsb2NrVmFsaWRhdGlvbkVycm9yOiBTdHJlYW1CbG9ja18xLlN0cmVhbUJsb2NrVmFsaWRhdGlvbkVycm9yXG59O1xuZnVuY3Rpb24gaW5pdEJsb2NrV2lkZ2V0KGlkKSB7XG4gICAgLypcbiAgICBJbml0aWFsaXNlcyB0aGUgdG9wLWxldmVsIGVsZW1lbnQgb2YgYSBCbG9ja1dpZGdldFxuICAgICh0aGUgZm9ybSB3aWRnZXQgZm9yIGEgU3RyZWFtRmllbGQpLlxuICAgIFJlY2VpdmVzIHRoZSBJRCBvZiBhIERPTSBlbGVtZW50IHdpdGggdGhlIGF0dHJpYnV0ZXM6XG4gICAgICBkYXRhLWJsb2NrOiBKU09OLWVuY29kZWQgYmxvY2sgZGVmaW5pdGlvbiB0byBiZSBwYXNzZWQgdG8gdGVsZXBhdGgudW5wYWNrXG4gICAgICAgIHRvIG9idGFpbiBhIEphdmFzY3JpcHQgcmVwcmVzZW50YXRpb24gb2YgdGhlIGJsb2NrXG4gICAgICAgIChhbiBpbnN0YW5jZSBvZiBvbmUgb2YgdGhlIEJsb2NrIGNsYXNzZXMgYmVsb3cpXG4gICAgICBkYXRhLXZhbHVlOiBKU09OLWVuY29kZWQgdmFsdWUgZm9yIHRoaXMgYmxvY2tcbiAgICAqL1xuICAgIHZhciBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignIycgKyBpZCArICdbZGF0YS1ibG9ja10nKTtcbiAgICAvLyB1bnBhY2sgdGhlIGJsb2NrIGRlZmluaXRpb24gYW5kIHZhbHVlXG4gICAgdmFyIGJsb2NrRGVmRGF0YSA9IEpTT04ucGFyc2UoYm9keS5kYXRhc2V0LmJsb2NrKTtcbiAgICB2YXIgYmxvY2tEZWYgPSB3aW5kb3cudGVsZXBhdGgudW5wYWNrKGJsb2NrRGVmRGF0YSk7XG4gICAgdmFyIGJsb2NrVmFsdWUgPSBKU09OLnBhcnNlKGJvZHkuZGF0YXNldC52YWx1ZSk7XG4gICAgdmFyIGJsb2NrRXJyb3JzID0gd2luZG93LnRlbGVwYXRoLnVucGFjayhKU09OLnBhcnNlKGJvZHkuZGF0YXNldC5lcnJvcnMpKTtcbiAgICAvLyByZXBsYWNlIHRoZSAnYm9keScgZWxlbWVudCB3aXRoIHRoZSBwb3B1bGF0ZWQgSFRNTCBzdHJ1Y3R1cmUgZm9yIHRoZSBibG9ja1xuICAgIGJsb2NrRGVmLnJlbmRlcihib2R5LCBpZCwgYmxvY2tWYWx1ZSwgYmxvY2tFcnJvcnMpO1xufVxud2luZG93LmluaXRCbG9ja1dpZGdldCA9IGluaXRCbG9ja1dpZGdldDtcbndpbmRvdy50ZWxlcGF0aC5yZWdpc3Rlcignd2FndGFpbC5ibG9ja3MuRmllbGRCbG9jaycsIEZpZWxkQmxvY2tfMS5GaWVsZEJsb2NrRGVmaW5pdGlvbik7XG53aW5kb3cudGVsZXBhdGgucmVnaXN0ZXIoJ3dhZ3RhaWwuYmxvY2tzLlN0YXRpY0Jsb2NrJywgU3RhdGljQmxvY2tfMS5TdGF0aWNCbG9ja0RlZmluaXRpb24pO1xud2luZG93LnRlbGVwYXRoLnJlZ2lzdGVyKCd3YWd0YWlsLmJsb2Nrcy5TdHJ1Y3RCbG9jaycsIFN0cnVjdEJsb2NrXzEuU3RydWN0QmxvY2tEZWZpbml0aW9uKTtcbndpbmRvdy50ZWxlcGF0aC5yZWdpc3Rlcignd2FndGFpbC5ibG9ja3MuU3RydWN0QmxvY2tWYWxpZGF0aW9uRXJyb3InLCBTdHJ1Y3RCbG9ja18xLlN0cnVjdEJsb2NrVmFsaWRhdGlvbkVycm9yKTtcbndpbmRvdy50ZWxlcGF0aC5yZWdpc3Rlcignd2FndGFpbC5ibG9ja3MuTGlzdEJsb2NrJywgTGlzdEJsb2NrXzEuTGlzdEJsb2NrRGVmaW5pdGlvbik7XG53aW5kb3cudGVsZXBhdGgucmVnaXN0ZXIoJ3dhZ3RhaWwuYmxvY2tzLkxpc3RCbG9ja1ZhbGlkYXRpb25FcnJvcicsIExpc3RCbG9ja18xLkxpc3RCbG9ja1ZhbGlkYXRpb25FcnJvcik7XG53aW5kb3cudGVsZXBhdGgucmVnaXN0ZXIoJ3dhZ3RhaWwuYmxvY2tzLlN0cmVhbUJsb2NrJywgU3RyZWFtQmxvY2tfMS5TdHJlYW1CbG9ja0RlZmluaXRpb24pO1xud2luZG93LnRlbGVwYXRoLnJlZ2lzdGVyKCd3YWd0YWlsLmJsb2Nrcy5TdHJlYW1CbG9ja1ZhbGlkYXRpb25FcnJvcicsIFN0cmVhbUJsb2NrXzEuU3RyZWFtQmxvY2tWYWxpZGF0aW9uRXJyb3IpO1xud2luZG93LndhZ3RhaWxTdHJlYW1GaWVsZCA9IHdhZ3RhaWxTdHJlYW1GaWVsZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/src/entrypoints/admin/telepath/blocks.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"v1\": () => (/* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"v3\": () => (/* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"v4\": () => (/* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"v5\": () => (/* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   \"NIL\": () => (/* reexport safe */ _nil_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   \"version\": () => (/* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   \"validate\": () => (/* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   \"stringify\": () => (/* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   \"parse\": () => (/* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ \"./node_modules/uuid/dist/esm-browser/v1.js\");\n/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ \"./node_modules/uuid/dist/esm-browser/v3.js\");\n/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ \"./node_modules/uuid/dist/esm-browser/v5.js\");\n/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ \"./node_modules/uuid/dist/esm-browser/nil.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ \"./node_modules/uuid/dist/esm-browser/version.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWd0YWlsLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9pbmRleC5qcz9lMTQ0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgYXMgdjEgfSBmcm9tICcuL3YxLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdjMgfSBmcm9tICcuL3YzLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdjQgfSBmcm9tICcuL3Y0LmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdjUgfSBmcm9tICcuL3Y1LmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgTklMIH0gZnJvbSAnLi9uaWwuanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdmFsaWRhdGUgfSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgc3RyaW5naWZ5IH0gZnJvbSAnLi9zdHJpbmdpZnkuanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwYXJzZSB9IGZyb20gJy4vcGFyc2UuanMnOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/index.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/md5.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/md5.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/md5.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/nil.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/nil.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('00000000-0000-0000-0000-000000000000');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL25pbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWd0YWlsLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9uaWwuanM/ZDRjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAnMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwJzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/nil.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/parse.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/parse.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction parse(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3BhcnNlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3BhcnNlLmpzPzBkZWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhbGlkYXRlIGZyb20gJy4vdmFsaWRhdGUuanMnO1xuXG5mdW5jdGlvbiBwYXJzZSh1dWlkKSB7XG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgdmFyIHY7XG4gIHZhciBhcnIgPSBuZXcgVWludDhBcnJheSgxNik7IC8vIFBhcnNlICMjIyMjIyMjLS4uLi4tLi4uLi0uLi4uLS4uLi4uLi4uLi4uLlxuXG4gIGFyclswXSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgwLCA4KSwgMTYpKSA+Pj4gMjQ7XG4gIGFyclsxXSA9IHYgPj4+IDE2ICYgMHhmZjtcbiAgYXJyWzJdID0gdiA+Pj4gOCAmIDB4ZmY7XG4gIGFyclszXSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0jIyMjLS4uLi4tLi4uLi0uLi4uLi4uLi4uLi5cblxuICBhcnJbNF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoOSwgMTMpLCAxNikpID4+PiA4O1xuICBhcnJbNV0gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tLi4uLi0jIyMjLS4uLi4tLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzZdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDE0LCAxOCksIDE2KSkgPj4+IDg7XG4gIGFycls3XSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0uLi4uLS4uLi4tIyMjIy0uLi4uLi4uLi4uLi5cblxuICBhcnJbOF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMTksIDIzKSwgMTYpKSA+Pj4gODtcbiAgYXJyWzldID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLS4uLi4tLi4uLi0uLi4uLSMjIyMjIyMjIyMjI1xuICAvLyAoVXNlIFwiL1wiIHRvIGF2b2lkIDMyLWJpdCB0cnVuY2F0aW9uIHdoZW4gYml0LXNoaWZ0aW5nIGhpZ2gtb3JkZXIgYnl0ZXMpXG5cbiAgYXJyWzEwXSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgyNCwgMzYpLCAxNikpIC8gMHgxMDAwMDAwMDAwMCAmIDB4ZmY7XG4gIGFyclsxMV0gPSB2IC8gMHgxMDAwMDAwMDAgJiAweGZmO1xuICBhcnJbMTJdID0gdiA+Pj4gMjQgJiAweGZmO1xuICBhcnJbMTNdID0gdiA+Pj4gMTYgJiAweGZmO1xuICBhcnJbMTRdID0gdiA+Pj4gOCAmIDB4ZmY7XG4gIGFyclsxNV0gPSB2ICYgMHhmZjtcbiAgcmV0dXJuIGFycjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcGFyc2U7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/parse.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JlZ2V4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JlZ2V4LmpzPzQwZDYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgL14oPzpbMC05YS1mXXs4fS1bMC05YS1mXXs0fS1bMS01XVswLTlhLWZdezN9LVs4OWFiXVswLTlhLWZdezN9LVswLTlhLWZdezEyfXwwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDApJC9pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/regex.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JuZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWd0YWlsLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9ybmcuanM/ZDhmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiBJbiB0aGUgYnJvd3NlciB3ZSB0aGVyZWZvcmVcbi8vIHJlcXVpcmUgdGhlIGNyeXB0byBBUEkgYW5kIGRvIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGZhbGxiYWNrIHRvIGxvd2VyIHF1YWxpdHkgcmFuZG9tIG51bWJlclxuLy8gZ2VuZXJhdG9ycyAobGlrZSBNYXRoLnJhbmRvbSgpKS5cbnZhciBnZXRSYW5kb21WYWx1ZXM7XG52YXIgcm5kczggPSBuZXcgVWludDhBcnJheSgxNik7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBybmcoKSB7XG4gIC8vIGxhenkgbG9hZCBzbyB0aGF0IGVudmlyb25tZW50cyB0aGF0IG5lZWQgdG8gcG9seWZpbGwgaGF2ZSBhIGNoYW5jZSB0byBkbyBzb1xuICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgIC8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0byBpbXBsZW1lbnRhdGlvbi4gQWxzbyxcbiAgICAvLyBmaW5kIHRoZSBjb21wbGV0ZSBpbXBsZW1lbnRhdGlvbiBvZiBjcnlwdG8gKG1zQ3J5cHRvKSBvbiBJRTExLlxuICAgIGdldFJhbmRvbVZhbHVlcyA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKGNyeXB0bykgfHwgdHlwZW9mIG1zQ3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09PSAnZnVuY3Rpb24nICYmIG1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKG1zQ3J5cHRvKTtcblxuICAgIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyeXB0by5nZXRSYW5kb21WYWx1ZXMoKSBub3Qgc3VwcG9ydGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkI2dldHJhbmRvbXZhbHVlcy1ub3Qtc3VwcG9ydGVkJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGdldFJhbmRvbVZhbHVlcyhybmRzOCk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/rng.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/sha1.js":
/*!****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/sha1.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3NoYTEuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3NoYTEuanM/Yjc1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBZGFwdGVkIGZyb20gQ2hyaXMgVmVuZXNzJyBTSEExIGNvZGUgYXRcbi8vIGh0dHA6Ly93d3cubW92YWJsZS10eXBlLmNvLnVrL3NjcmlwdHMvc2hhMS5odG1sXG5mdW5jdGlvbiBmKHMsIHgsIHksIHopIHtcbiAgc3dpdGNoIChzKSB7XG4gICAgY2FzZSAwOlxuICAgICAgcmV0dXJuIHggJiB5IF4gfnggJiB6O1xuXG4gICAgY2FzZSAxOlxuICAgICAgcmV0dXJuIHggXiB5IF4gejtcblxuICAgIGNhc2UgMjpcbiAgICAgIHJldHVybiB4ICYgeSBeIHggJiB6IF4geSAmIHo7XG5cbiAgICBjYXNlIDM6XG4gICAgICByZXR1cm4geCBeIHkgXiB6O1xuICB9XG59XG5cbmZ1bmN0aW9uIFJPVEwoeCwgbikge1xuICByZXR1cm4geCA8PCBuIHwgeCA+Pj4gMzIgLSBuO1xufVxuXG5mdW5jdGlvbiBzaGExKGJ5dGVzKSB7XG4gIHZhciBLID0gWzB4NWE4Mjc5OTksIDB4NmVkOWViYTEsIDB4OGYxYmJjZGMsIDB4Y2E2MmMxZDZdO1xuICB2YXIgSCA9IFsweDY3NDUyMzAxLCAweGVmY2RhYjg5LCAweDk4YmFkY2ZlLCAweDEwMzI1NDc2LCAweGMzZDJlMWYwXTtcblxuICBpZiAodHlwZW9mIGJ5dGVzID09PSAnc3RyaW5nJykge1xuICAgIHZhciBtc2cgPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoYnl0ZXMpKTsgLy8gVVRGOCBlc2NhcGVcblxuICAgIGJ5dGVzID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7ICsraSkge1xuICAgICAgYnl0ZXMucHVzaChtc2cuY2hhckNvZGVBdChpKSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKCFBcnJheS5pc0FycmF5KGJ5dGVzKSkge1xuICAgIC8vIENvbnZlcnQgQXJyYXktbGlrZSB0byBBcnJheVxuICAgIGJ5dGVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYnl0ZXMpO1xuICB9XG5cbiAgYnl0ZXMucHVzaCgweDgwKTtcbiAgdmFyIGwgPSBieXRlcy5sZW5ndGggLyA0ICsgMjtcbiAgdmFyIE4gPSBNYXRoLmNlaWwobCAvIDE2KTtcbiAgdmFyIE0gPSBuZXcgQXJyYXkoTik7XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IE47ICsrX2kpIHtcbiAgICB2YXIgYXJyID0gbmV3IFVpbnQzMkFycmF5KDE2KTtcblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgMTY7ICsraikge1xuICAgICAgYXJyW2pdID0gYnl0ZXNbX2kgKiA2NCArIGogKiA0XSA8PCAyNCB8IGJ5dGVzW19pICogNjQgKyBqICogNCArIDFdIDw8IDE2IHwgYnl0ZXNbX2kgKiA2NCArIGogKiA0ICsgMl0gPDwgOCB8IGJ5dGVzW19pICogNjQgKyBqICogNCArIDNdO1xuICAgIH1cblxuICAgIE1bX2ldID0gYXJyO1xuICB9XG5cbiAgTVtOIC0gMV1bMTRdID0gKGJ5dGVzLmxlbmd0aCAtIDEpICogOCAvIE1hdGgucG93KDIsIDMyKTtcbiAgTVtOIC0gMV1bMTRdID0gTWF0aC5mbG9vcihNW04gLSAxXVsxNF0pO1xuICBNW04gLSAxXVsxNV0gPSAoYnl0ZXMubGVuZ3RoIC0gMSkgKiA4ICYgMHhmZmZmZmZmZjtcblxuICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBOOyArK19pMikge1xuICAgIHZhciBXID0gbmV3IFVpbnQzMkFycmF5KDgwKTtcblxuICAgIGZvciAodmFyIHQgPSAwOyB0IDwgMTY7ICsrdCkge1xuICAgICAgV1t0XSA9IE1bX2kyXVt0XTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBfdCA9IDE2OyBfdCA8IDgwOyArK190KSB7XG4gICAgICBXW190XSA9IFJPVEwoV1tfdCAtIDNdIF4gV1tfdCAtIDhdIF4gV1tfdCAtIDE0XSBeIFdbX3QgLSAxNl0sIDEpO1xuICAgIH1cblxuICAgIHZhciBhID0gSFswXTtcbiAgICB2YXIgYiA9IEhbMV07XG4gICAgdmFyIGMgPSBIWzJdO1xuICAgIHZhciBkID0gSFszXTtcbiAgICB2YXIgZSA9IEhbNF07XG5cbiAgICBmb3IgKHZhciBfdDIgPSAwOyBfdDIgPCA4MDsgKytfdDIpIHtcbiAgICAgIHZhciBzID0gTWF0aC5mbG9vcihfdDIgLyAyMCk7XG4gICAgICB2YXIgVCA9IFJPVEwoYSwgNSkgKyBmKHMsIGIsIGMsIGQpICsgZSArIEtbc10gKyBXW190Ml0gPj4+IDA7XG4gICAgICBlID0gZDtcbiAgICAgIGQgPSBjO1xuICAgICAgYyA9IFJPVEwoYiwgMzApID4+PiAwO1xuICAgICAgYiA9IGE7XG4gICAgICBhID0gVDtcbiAgICB9XG5cbiAgICBIWzBdID0gSFswXSArIGEgPj4+IDA7XG4gICAgSFsxXSA9IEhbMV0gKyBiID4+PiAwO1xuICAgIEhbMl0gPSBIWzJdICsgYyA+Pj4gMDtcbiAgICBIWzNdID0gSFszXSArIGQgPj4+IDA7XG4gICAgSFs0XSA9IEhbNF0gKyBlID4+PiAwO1xuICB9XG5cbiAgcmV0dXJuIFtIWzBdID4+IDI0ICYgMHhmZiwgSFswXSA+PiAxNiAmIDB4ZmYsIEhbMF0gPj4gOCAmIDB4ZmYsIEhbMF0gJiAweGZmLCBIWzFdID4+IDI0ICYgMHhmZiwgSFsxXSA+PiAxNiAmIDB4ZmYsIEhbMV0gPj4gOCAmIDB4ZmYsIEhbMV0gJiAweGZmLCBIWzJdID4+IDI0ICYgMHhmZiwgSFsyXSA+PiAxNiAmIDB4ZmYsIEhbMl0gPj4gOCAmIDB4ZmYsIEhbMl0gJiAweGZmLCBIWzNdID4+IDI0ICYgMHhmZiwgSFszXSA+PiAxNiAmIDB4ZmYsIEhbM10gPj4gOCAmIDB4ZmYsIEhbM10gJiAweGZmLCBIWzRdID4+IDI0ICYgMHhmZiwgSFs0XSA+PiAxNiAmIDB4ZmYsIEhbNF0gPj4gOCAmIDB4ZmYsIEhbNF0gJiAweGZmXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc2hhMTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/sha1.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcz81OGNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xuXG52YXIgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKSk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIpIHtcbiAgdmFyIG9mZnNldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHZhciB1dWlkID0gKGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgM11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDVdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA3XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDhdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxM11dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNV1dKS50b0xvd2VyQ2FzZSgpOyAvLyBDb25zaXN0ZW5jeSBjaGVjayBmb3IgdmFsaWQgVVVJRC4gIElmIHRoaXMgdGhyb3dzLCBpdCdzIGxpa2VseSBkdWUgdG8gb25lXG4gIC8vIG9mIHRoZSBmb2xsb3dpbmc6XG4gIC8vIC0gT25lIG9yIG1vcmUgaW5wdXQgYXJyYXkgdmFsdWVzIGRvbid0IG1hcCB0byBhIGhleCBvY3RldCAobGVhZGluZyB0b1xuICAvLyBcInVuZGVmaW5lZFwiIGluIHRoZSB1dWlkKVxuICAvLyAtIEludmFsaWQgaW5wdXQgdmFsdWVzIGZvciB0aGUgUkZDIGB2ZXJzaW9uYCBvciBgdmFyaWFudGAgZmllbGRzXG5cbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignU3RyaW5naWZpZWQgVVVJRCBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICByZXR1cm4gdXVpZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RyaW5naWZ5OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/stringify.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v1.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v1.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(b);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YxLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWd0YWlsLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92MS5qcz9jNTBhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBybmcgZnJvbSAnLi9ybmcuanMnO1xuaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7IC8vICoqYHYxKClgIC0gR2VuZXJhdGUgdGltZS1iYXNlZCBVVUlEKipcbi8vXG4vLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vTGlvc0svVVVJRC5qc1xuLy8gYW5kIGh0dHA6Ly9kb2NzLnB5dGhvbi5vcmcvbGlicmFyeS91dWlkLmh0bWxcblxudmFyIF9ub2RlSWQ7XG5cbnZhciBfY2xvY2tzZXE7IC8vIFByZXZpb3VzIHV1aWQgY3JlYXRpb24gdGltZVxuXG5cbnZhciBfbGFzdE1TZWNzID0gMDtcbnZhciBfbGFzdE5TZWNzID0gMDsgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZCBmb3IgQVBJIGRldGFpbHNcblxuZnVuY3Rpb24gdjEob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBidWYgJiYgb2Zmc2V0IHx8IDA7XG4gIHZhciBiID0gYnVmIHx8IG5ldyBBcnJheSgxNik7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgbm9kZSA9IG9wdGlvbnMubm9kZSB8fCBfbm9kZUlkO1xuICB2YXIgY2xvY2tzZXEgPSBvcHRpb25zLmNsb2Nrc2VxICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmNsb2Nrc2VxIDogX2Nsb2Nrc2VxOyAvLyBub2RlIGFuZCBjbG9ja3NlcSBuZWVkIHRvIGJlIGluaXRpYWxpemVkIHRvIHJhbmRvbSB2YWx1ZXMgaWYgdGhleSdyZSBub3RcbiAgLy8gc3BlY2lmaWVkLiAgV2UgZG8gdGhpcyBsYXppbHkgdG8gbWluaW1pemUgaXNzdWVzIHJlbGF0ZWQgdG8gaW5zdWZmaWNpZW50XG4gIC8vIHN5c3RlbSBlbnRyb3B5LiAgU2VlICMxODlcblxuICBpZiAobm9kZSA9PSBudWxsIHx8IGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICB2YXIgc2VlZEJ5dGVzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTtcblxuICAgIGlmIChub2RlID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjUsIGNyZWF0ZSBhbmQgNDgtYml0IG5vZGUgaWQsICg0NyByYW5kb20gYml0cyArIG11bHRpY2FzdCBiaXQgPSAxKVxuICAgICAgbm9kZSA9IF9ub2RlSWQgPSBbc2VlZEJ5dGVzWzBdIHwgMHgwMSwgc2VlZEJ5dGVzWzFdLCBzZWVkQnl0ZXNbMl0sIHNlZWRCeXRlc1szXSwgc2VlZEJ5dGVzWzRdLCBzZWVkQnl0ZXNbNV1dO1xuICAgIH1cblxuICAgIGlmIChjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgICAvLyBQZXIgNC4yLjIsIHJhbmRvbWl6ZSAoMTQgYml0KSBjbG9ja3NlcVxuICAgICAgY2xvY2tzZXEgPSBfY2xvY2tzZXEgPSAoc2VlZEJ5dGVzWzZdIDw8IDggfCBzZWVkQnl0ZXNbN10pICYgMHgzZmZmO1xuICAgIH1cbiAgfSAvLyBVVUlEIHRpbWVzdGFtcHMgYXJlIDEwMCBuYW5vLXNlY29uZCB1bml0cyBzaW5jZSB0aGUgR3JlZ29yaWFuIGVwb2NoLFxuICAvLyAoMTU4Mi0xMC0xNSAwMDowMCkuICBKU051bWJlcnMgYXJlbid0IHByZWNpc2UgZW5vdWdoIGZvciB0aGlzLCBzb1xuICAvLyB0aW1lIGlzIGhhbmRsZWQgaW50ZXJuYWxseSBhcyAnbXNlY3MnIChpbnRlZ2VyIG1pbGxpc2Vjb25kcykgYW5kICduc2VjcydcbiAgLy8gKDEwMC1uYW5vc2Vjb25kcyBvZmZzZXQgZnJvbSBtc2Vjcykgc2luY2UgdW5peCBlcG9jaCwgMTk3MC0wMS0wMSAwMDowMC5cblxuXG4gIHZhciBtc2VjcyA9IG9wdGlvbnMubXNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubXNlY3MgOiBEYXRlLm5vdygpOyAvLyBQZXIgNC4yLjEuMiwgdXNlIGNvdW50IG9mIHV1aWQncyBnZW5lcmF0ZWQgZHVyaW5nIHRoZSBjdXJyZW50IGNsb2NrXG4gIC8vIGN5Y2xlIHRvIHNpbXVsYXRlIGhpZ2hlciByZXNvbHV0aW9uIGNsb2NrXG5cbiAgdmFyIG5zZWNzID0gb3B0aW9ucy5uc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uc2VjcyA6IF9sYXN0TlNlY3MgKyAxOyAvLyBUaW1lIHNpbmNlIGxhc3QgdXVpZCBjcmVhdGlvbiAoaW4gbXNlY3MpXG5cbiAgdmFyIGR0ID0gbXNlY3MgLSBfbGFzdE1TZWNzICsgKG5zZWNzIC0gX2xhc3ROU2VjcykgLyAxMDAwMDsgLy8gUGVyIDQuMi4xLjIsIEJ1bXAgY2xvY2tzZXEgb24gY2xvY2sgcmVncmVzc2lvblxuXG4gIGlmIChkdCA8IDAgJiYgb3B0aW9ucy5jbG9ja3NlcSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2xvY2tzZXEgPSBjbG9ja3NlcSArIDEgJiAweDNmZmY7XG4gIH0gLy8gUmVzZXQgbnNlY3MgaWYgY2xvY2sgcmVncmVzc2VzIChuZXcgY2xvY2tzZXEpIG9yIHdlJ3ZlIG1vdmVkIG9udG8gYSBuZXdcbiAgLy8gdGltZSBpbnRlcnZhbFxuXG5cbiAgaWYgKChkdCA8IDAgfHwgbXNlY3MgPiBfbGFzdE1TZWNzKSAmJiBvcHRpb25zLm5zZWNzID09PSB1bmRlZmluZWQpIHtcbiAgICBuc2VjcyA9IDA7XG4gIH0gLy8gUGVyIDQuMi4xLjIgVGhyb3cgZXJyb3IgaWYgdG9vIG1hbnkgdXVpZHMgYXJlIHJlcXVlc3RlZFxuXG5cbiAgaWYgKG5zZWNzID49IDEwMDAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwidXVpZC52MSgpOiBDYW4ndCBjcmVhdGUgbW9yZSB0aGFuIDEwTSB1dWlkcy9zZWNcIik7XG4gIH1cblxuICBfbGFzdE1TZWNzID0gbXNlY3M7XG4gIF9sYXN0TlNlY3MgPSBuc2VjcztcbiAgX2Nsb2Nrc2VxID0gY2xvY2tzZXE7IC8vIFBlciA0LjEuNCAtIENvbnZlcnQgZnJvbSB1bml4IGVwb2NoIHRvIEdyZWdvcmlhbiBlcG9jaFxuXG4gIG1zZWNzICs9IDEyMjE5MjkyODAwMDAwOyAvLyBgdGltZV9sb3dgXG5cbiAgdmFyIHRsID0gKChtc2VjcyAmIDB4ZmZmZmZmZikgKiAxMDAwMCArIG5zZWNzKSAlIDB4MTAwMDAwMDAwO1xuICBiW2krK10gPSB0bCA+Pj4gMjQgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gMTYgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsICYgMHhmZjsgLy8gYHRpbWVfbWlkYFxuXG4gIHZhciB0bWggPSBtc2VjcyAvIDB4MTAwMDAwMDAwICogMTAwMDAgJiAweGZmZmZmZmY7XG4gIGJbaSsrXSA9IHRtaCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRtaCAmIDB4ZmY7IC8vIGB0aW1lX2hpZ2hfYW5kX3ZlcnNpb25gXG5cbiAgYltpKytdID0gdG1oID4+PiAyNCAmIDB4ZiB8IDB4MTA7IC8vIGluY2x1ZGUgdmVyc2lvblxuXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMTYgJiAweGZmOyAvLyBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGAgKFBlciA0LjIuMiAtIGluY2x1ZGUgdmFyaWFudClcblxuICBiW2krK10gPSBjbG9ja3NlcSA+Pj4gOCB8IDB4ODA7IC8vIGBjbG9ja19zZXFfbG93YFxuXG4gIGJbaSsrXSA9IGNsb2Nrc2VxICYgMHhmZjsgLy8gYG5vZGVgXG5cbiAgZm9yICh2YXIgbiA9IDA7IG4gPCA2OyArK24pIHtcbiAgICBiW2kgKyBuXSA9IG5vZGVbbl07XG4gIH1cblxuICByZXR1cm4gYnVmIHx8IHN0cmluZ2lmeShiKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjE7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v1.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v3.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v3.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ \"./node_modules/uuid/dist/esm-browser/md5.js\");\n\n\nvar v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FndGFpbC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjMuanM/NTRhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdjM1IGZyb20gJy4vdjM1LmpzJztcbmltcG9ydCBtZDUgZnJvbSAnLi9tZDUuanMnO1xudmFyIHYzID0gdjM1KCd2MycsIDB4MzAsIG1kNSk7XG5leHBvcnQgZGVmYXVsdCB2MzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v3.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v35.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v35.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DNS\": () => (/* binding */ DNS),\n/* harmony export */   \"URL\": () => (/* binding */ URL),\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nvar DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nvar URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YzNS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FndGFpbC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjM1LmpzP2ZmYzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5pbXBvcnQgcGFyc2UgZnJvbSAnLi9wYXJzZS5qcyc7XG5cbmZ1bmN0aW9uIHN0cmluZ1RvQnl0ZXMoc3RyKSB7XG4gIHN0ciA9IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChzdHIpKTsgLy8gVVRGOCBlc2NhcGVcblxuICB2YXIgYnl0ZXMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7ICsraSkge1xuICAgIGJ5dGVzLnB1c2goc3RyLmNoYXJDb2RlQXQoaSkpO1xuICB9XG5cbiAgcmV0dXJuIGJ5dGVzO1xufVxuXG5leHBvcnQgdmFyIEROUyA9ICc2YmE3YjgxMC05ZGFkLTExZDEtODBiNC0wMGMwNGZkNDMwYzgnO1xuZXhwb3J0IHZhciBVUkwgPSAnNmJhN2I4MTEtOWRhZC0xMWQxLTgwYjQtMDBjMDRmZDQzMGM4JztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChuYW1lLCB2ZXJzaW9uLCBoYXNoZnVuYykge1xuICBmdW5jdGlvbiBnZW5lcmF0ZVVVSUQodmFsdWUsIG5hbWVzcGFjZSwgYnVmLCBvZmZzZXQpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgdmFsdWUgPSBzdHJpbmdUb0J5dGVzKHZhbHVlKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG5hbWVzcGFjZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG5hbWVzcGFjZSA9IHBhcnNlKG5hbWVzcGFjZSk7XG4gICAgfVxuXG4gICAgaWYgKG5hbWVzcGFjZS5sZW5ndGggIT09IDE2KSB7XG4gICAgICB0aHJvdyBUeXBlRXJyb3IoJ05hbWVzcGFjZSBtdXN0IGJlIGFycmF5LWxpa2UgKDE2IGl0ZXJhYmxlIGludGVnZXIgdmFsdWVzLCAwLTI1NSknKTtcbiAgICB9IC8vIENvbXB1dGUgaGFzaCBvZiBuYW1lc3BhY2UgYW5kIHZhbHVlLCBQZXIgNC4zXG4gICAgLy8gRnV0dXJlOiBVc2Ugc3ByZWFkIHN5bnRheCB3aGVuIHN1cHBvcnRlZCBvbiBhbGwgcGxhdGZvcm1zLCBlLmcuIGBieXRlcyA9XG4gICAgLy8gaGFzaGZ1bmMoWy4uLm5hbWVzcGFjZSwgLi4uIHZhbHVlXSlgXG5cblxuICAgIHZhciBieXRlcyA9IG5ldyBVaW50OEFycmF5KDE2ICsgdmFsdWUubGVuZ3RoKTtcbiAgICBieXRlcy5zZXQobmFtZXNwYWNlKTtcbiAgICBieXRlcy5zZXQodmFsdWUsIG5hbWVzcGFjZS5sZW5ndGgpO1xuICAgIGJ5dGVzID0gaGFzaGZ1bmMoYnl0ZXMpO1xuICAgIGJ5dGVzWzZdID0gYnl0ZXNbNl0gJiAweDBmIHwgdmVyc2lvbjtcbiAgICBieXRlc1s4XSA9IGJ5dGVzWzhdICYgMHgzZiB8IDB4ODA7XG5cbiAgICBpZiAoYnVmKSB7XG4gICAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgKytpKSB7XG4gICAgICAgIGJ1ZltvZmZzZXQgKyBpXSA9IGJ5dGVzW2ldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gYnVmO1xuICAgIH1cblxuICAgIHJldHVybiBzdHJpbmdpZnkoYnl0ZXMpO1xuICB9IC8vIEZ1bmN0aW9uI25hbWUgaXMgbm90IHNldHRhYmxlIG9uIHNvbWUgcGxhdGZvcm1zICgjMjcwKVxuXG5cbiAgdHJ5IHtcbiAgICBnZW5lcmF0ZVVVSUQubmFtZSA9IG5hbWU7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICB9IGNhdGNoIChlcnIpIHt9IC8vIEZvciBDb21tb25KUyBkZWZhdWx0IGV4cG9ydCBzdXBwb3J0XG5cblxuICBnZW5lcmF0ZVVVSUQuRE5TID0gRE5TO1xuICBnZW5lcmF0ZVVVSUQuVVJMID0gVVJMO1xuICByZXR1cm4gZ2VuZXJhdGVVVUlEO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v35.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dhZ3RhaWwvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzP2VjMjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgc3RyaW5naWZ5IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTsgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuIHN0cmluZ2lmeShybmRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v4.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v5.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v5.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ \"./node_modules/uuid/dist/esm-browser/sha1.js\");\n\n\nvar v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y1LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FndGFpbC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjUuanM/MjZiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdjM1IGZyb20gJy4vdjM1LmpzJztcbmltcG9ydCBzaGExIGZyb20gJy4vc2hhMS5qcyc7XG52YXIgdjUgPSB2MzUoJ3Y1JywgMHg1MCwgc2hhMSk7XG5leHBvcnQgZGVmYXVsdCB2NTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v5.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"./node_modules/uuid/dist/esm-browser/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZhbGlkYXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93YWd0YWlsLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92YWxpZGF0ZS5qcz8wNmU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSRUdFWCBmcm9tICcuL3JlZ2V4LmpzJztcblxuZnVuY3Rpb24gdmFsaWRhdGUodXVpZCkge1xuICByZXR1cm4gdHlwZW9mIHV1aWQgPT09ICdzdHJpbmcnICYmIFJFR0VYLnRlc3QodXVpZCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbGlkYXRlOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/validate.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/version.js":
/*!*******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/version.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction version(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZlcnNpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FndGFpbC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdmVyc2lvbi5qcz83NmU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcblxuZnVuY3Rpb24gdmVyc2lvbih1dWlkKSB7XG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlSW50KHV1aWQuc3Vic3RyKDE0LCAxKSwgMTYpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2ZXJzaW9uOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/version.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"telepath/blocks": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = globalThis["webpackChunkwagtail"] = globalThis["webpackChunkwagtail"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["wagtail/admin/static/wagtailadmin/js/vendor"], () => (__webpack_require__("./client/src/entrypoints/admin/telepath/blocks.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;