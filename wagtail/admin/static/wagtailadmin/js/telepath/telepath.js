/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/telepath-unpack/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/telepath-unpack/lib/index.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* eslint-disable dot-notation, no-param-reassign */\nvar Telepath = /*#__PURE__*/function () {\n  function Telepath() {\n    _classCallCheck(this, Telepath);\n\n    this.constructors = {};\n  }\n\n  _createClass(Telepath, [{\n    key: \"register\",\n    value: function register(name, constructor) {\n      this.constructors[name] = constructor;\n    }\n  }, {\n    key: \"unpack\",\n    value: function unpack(objData) {\n      var packedValuesById = {};\n      this.scanForIds(objData, packedValuesById);\n      var valuesById = {};\n      return this.unpackWithRefs(objData, packedValuesById, valuesById);\n    }\n  }, {\n    key: \"scanForIds\",\n    value: function scanForIds(objData, packedValuesById) {\n      var _this = this;\n\n      /* descend into objData, indexing any objects with an _id in packedValuesById */\n      if (objData === null || _typeof(objData) !== 'object') {\n        /* primitive value - nothing to scan */\n        return;\n      }\n\n      if (Array.isArray(objData)) {\n        /* scan recursively */\n        objData.forEach(function (item) {\n          return _this.scanForIds(item, packedValuesById);\n        });\n        return;\n      }\n      /* objData is an object / dict - check for reserved key names */\n\n\n      var hasReservedKeyNames = false;\n\n      if ('_id' in objData) {\n        hasReservedKeyNames = true;\n        /* index object in packedValuesById */\n\n        packedValuesById[objData['_id']] = objData;\n      }\n\n      if ('_type' in objData || '_val' in objData || '_ref' in objData) {\n        hasReservedKeyNames = true;\n      }\n\n      if ('_list' in objData) {\n        hasReservedKeyNames = true;\n        /* scan list items recursively */\n\n        objData['_list'].forEach(function (item) {\n          return _this.scanForIds(item, packedValuesById);\n        });\n      }\n\n      if ('_args' in objData) {\n        hasReservedKeyNames = true;\n        /* scan arguments recursively */\n\n        objData['_args'].forEach(function (item) {\n          return _this.scanForIds(item, packedValuesById);\n        });\n      }\n\n      if ('_dict' in objData) {\n        hasReservedKeyNames = true;\n        /* scan dict items recursively */\n        // eslint-disable-next-line no-unused-vars\n\n        for (var _i = 0, _Object$entries = Object.entries(objData['_dict']); _i < _Object$entries.length; _i++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n              key = _Object$entries$_i[0],\n              val = _Object$entries$_i[1];\n\n          this.scanForIds(val, packedValuesById);\n        }\n      }\n\n      if (!hasReservedKeyNames) {\n        /* scan as a plain dict */\n        // eslint-disable-next-line no-unused-vars\n        for (var _i2 = 0, _Object$entries2 = Object.entries(objData); _i2 < _Object$entries2.length; _i2++) {\n          var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n              _key = _Object$entries2$_i[0],\n              _val = _Object$entries2$_i[1];\n\n          this.scanForIds(_val, packedValuesById);\n        }\n      }\n    }\n  }, {\n    key: \"unpackWithRefs\",\n    value: function unpackWithRefs(objData, packedValuesById, valuesById) {\n      var _this2 = this;\n\n      if (objData === null || _typeof(objData) !== 'object') {\n        /* primitive value - return unchanged */\n        return objData;\n      }\n\n      if (Array.isArray(objData)) {\n        /* unpack recursively */\n        return objData.map(function (item) {\n          return _this2.unpackWithRefs(item, packedValuesById, valuesById);\n        });\n      }\n      /* objData is an object / dict - check for reserved key names */\n\n\n      var result;\n\n      if ('_ref' in objData) {\n        if (objData['_ref'] in valuesById) {\n          /* use previously unpacked instance */\n          result = valuesById[objData['_ref']];\n        } else {\n          /* look up packed object and unpack it; this will populate valuesById as a side effect */\n          result = this.unpackWithRefs(packedValuesById[objData['_ref']], packedValuesById, valuesById);\n        }\n      } else if ('_val' in objData) {\n        result = objData['_val'];\n      } else if ('_list' in objData) {\n        result = objData['_list'].map(function (item) {\n          return _this2.unpackWithRefs(item, packedValuesById, valuesById);\n        });\n      } else if ('_dict' in objData) {\n        result = {};\n\n        for (var _i3 = 0, _Object$entries3 = Object.entries(objData['_dict']); _i3 < _Object$entries3.length; _i3++) {\n          var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n              key = _Object$entries3$_i[0],\n              val = _Object$entries3$_i[1];\n\n          result[key] = this.unpackWithRefs(val, packedValuesById, valuesById);\n        }\n      } else if ('_type' in objData) {\n        /* handle as a custom type */\n        var constructorId = objData['_type'];\n        var _constructor = this.constructors[constructorId];\n        /* unpack arguments recursively */\n\n        var args = objData['_args'].map(function (arg) {\n          return _this2.unpackWithRefs(arg, packedValuesById, valuesById);\n        });\n        result = _construct(_constructor, _toConsumableArray(args));\n      } else if ('_id' in objData) {\n        throw new Error('telepath encountered object with _id but no type specified');\n      } else {\n        /* no reserved key names found, so unpack objData as a plain dict and return */\n        result = {};\n\n        for (var _i4 = 0, _Object$entries4 = Object.entries(objData); _i4 < _Object$entries4.length; _i4++) {\n          var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i4], 2),\n              _key2 = _Object$entries4$_i[0],\n              _val2 = _Object$entries4$_i[1];\n\n          result[_key2] = this.unpackWithRefs(_val2, packedValuesById, valuesById);\n        }\n\n        return result;\n      }\n\n      if ('_id' in objData) {\n        valuesById[objData['_id']] = result;\n      }\n\n      return result;\n    }\n  }]);\n\n  return Telepath;\n}();\n\nmodule.exports = Telepath;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/telepath-unpack/lib/index.js\n");

/***/ }),

/***/ "./client/src/entrypoints/admin/telepath/telepath.js":
/*!***********************************************************!*\
  !*** ./client/src/entrypoints/admin/telepath/telepath.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar telepath_unpack_1 = __importDefault(__webpack_require__(/*! telepath-unpack */ \"./node_modules/telepath-unpack/lib/index.js\"));\n// Prevent double-initialisation if imported twice\n// This was introduced because both the sidebar and the page editor\n// use telepath, but they use separate hooks for JS dependencies so we\n// can't de-duplicate the telepath import.\nif (!window.telepath) {\n    window.telepath = new telepath_unpack_1[\"default\"]();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3JjL2VudHJ5cG9pbnRzL2FkbWluL3RlbGVwYXRoL3RlbGVwYXRoLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2FndGFpbC8uL2NsaWVudC9zcmMvZW50cnlwb2ludHMvYWRtaW4vdGVsZXBhdGgvdGVsZXBhdGguanM/OGU4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG52YXIgdGVsZXBhdGhfdW5wYWNrXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInRlbGVwYXRoLXVucGFja1wiKSk7XG4vLyBQcmV2ZW50IGRvdWJsZS1pbml0aWFsaXNhdGlvbiBpZiBpbXBvcnRlZCB0d2ljZVxuLy8gVGhpcyB3YXMgaW50cm9kdWNlZCBiZWNhdXNlIGJvdGggdGhlIHNpZGViYXIgYW5kIHRoZSBwYWdlIGVkaXRvclxuLy8gdXNlIHRlbGVwYXRoLCBidXQgdGhleSB1c2Ugc2VwYXJhdGUgaG9va3MgZm9yIEpTIGRlcGVuZGVuY2llcyBzbyB3ZVxuLy8gY2FuJ3QgZGUtZHVwbGljYXRlIHRoZSB0ZWxlcGF0aCBpbXBvcnQuXG5pZiAoIXdpbmRvdy50ZWxlcGF0aCkge1xuICAgIHdpbmRvdy50ZWxlcGF0aCA9IG5ldyB0ZWxlcGF0aF91bnBhY2tfMVtcImRlZmF1bHRcIl0oKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./client/src/entrypoints/admin/telepath/telepath.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./client/src/entrypoints/admin/telepath/telepath.js");
/******/ 	
/******/ })()
;